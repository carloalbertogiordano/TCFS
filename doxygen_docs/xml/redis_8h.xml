<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="redis_8h" kind="file" language="C++">
    <compoundname>redis.h</compoundname>
    <includes refid="common_8h" local="yes">../../common.h</includes>
    <includedby refid="redis_8c" local="yes">daemon/daemon_utils/common_utils/db/redis.c</includedby>
    <includedby refid="user__db_8c" local="yes">daemon/daemon_utils/common_utils/db/user_db.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>../../common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/db/redis.h</label>
        <link refid="redis_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>errno.h</label>
      </node>
      <node id="5">
        <label>fcntl.h</label>
      </node>
      <node id="6">
        <label>mqueue.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="3">
        <label>sys/stat.h</label>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>daemon/daemon_utils/common_utils/db/redis.c</label>
        <link refid="redis_8c"/>
      </node>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/db/redis.h</label>
        <link refid="redis_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>daemon/daemon_utils/common_utils/db/user_db.c</label>
        <link refid="user__db_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="redis_8h_1a7b5eb746d92734b57a71ce552363283d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_all_keys</definition>
        <argsstring>()</argsstring>
        <name>print_all_keys</name>
        <briefdescription>
<para>For debugging only. Prints all the keys in the database. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <simplesect kind="return"><para>void </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="3" column="6" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="42" bodyend="64" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="3" declcolumn="6"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
        <referencedby refid="user__db_8c_1a6e2fcf4aa637e61f69b1b601981663cf" compoundref="user__db_8c" startline="31" endline="36">unregister_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1a1f6dc2f98a71a88567fe11fd9e2585ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_context</definition>
        <argsstring>()</argsstring>
        <name>init_context</name>
        <briefdescription>
<para>initialize the context for the Redis DB </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <simplesect kind="return"><para>1 if initialization was successful or the database was already initialized, 0 on failure </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="5" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="72" bodyend="85" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="5" declcolumn="5"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2" compoundref="redis_8c" startline="27">PORT</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1a8e6e1687d6351741ac3e353d23425f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * json_to_qm_user</definition>
        <argsstring>(char *json)</argsstring>
        <name>json_to_qm_user</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
<para>Internal function to simplify the casting of a json to a <ref refid="structqm__user" kindref="compound">qm_user</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*json the json string representing the <ref refid="structqm__user" kindref="compound">qm_user</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>qm_user* A pointer to the allocated qm_user* struct </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="7" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="104" bodyend="114" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="7" declcolumn="9"/>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <referencedby refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</referencedby>
        <referencedby refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1af0bf1bfc99afc940619371e3c76ab4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * get_user_by_pid</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>get_user_by_pid</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Fetch the user on the DB with key pid. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid_t</parametername>
</parameternamelist>
<parameterdescription>
<para>pid The key of the row </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>qm_user* A pointer to the allocated qm_user* struct </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="9" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="122" bodyend="157" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="9" declcolumn="9"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" compoundref="redis_8c" startline="104" endline="114">json_to_qm_user</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" compoundref="redis_8c" startline="256" endline="281">remove_by_pid</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1a73711c0a9d0060337409d15dc44f5ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * get_user_by_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>get_user_by_name</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Fetch the user on the DB with key name. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *name The key of the row </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>qm_user* A pointer to the allocated qm_user* struct </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="11" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="165" bodyend="200" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="11" declcolumn="9"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" compoundref="redis_8c" startline="104" endline="114">json_to_qm_user</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" compoundref="redis_8c" startline="292" endline="316">remove_by_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1ac9878ee09b53700eb08c1f175873c30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int insert</definition>
        <argsstring>(qm_user *user)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>Insert a new user in the DB. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qm_user*</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the allocated qm_user* struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref> </para>
</simplesect>
<simplesect kind="note"><para>The user will be set 2 times, once with key user-&gt;pid and once with key user-&gt;name </para>
</simplesect>
<simplesect kind="note"><para>If an error is thrown it will be printed by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="13" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="211" bodyend="245" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="13" declcolumn="5"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1a6b18d7ad2f1e8275106a5b39c0c7d216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int remove_by_pid</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>remove_by_pid</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Remove a user from the DB using the PID as key. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid_t</parametername>
</parameternamelist>
<parameterdescription>
<para>pid The key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref> </para>
</simplesect>
<simplesect kind="note"><para>Will also remove the corresponding entry by name. </para>
</simplesect>
<simplesect kind="note"><para>If an error is thrown it will be printed using the <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="15" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="256" bodyend="281" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="15" declcolumn="5"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="user__db_8c_1a6e2fcf4aa637e61f69b1b601981663cf" compoundref="user__db_8c" startline="31" endline="36">unregister_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1a2678c0575f2b6c944fd261255aeaebff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int remove_by_user</definition>
        <argsstring>(char *name)</argsstring>
        <name>remove_by_user</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove a user from the DB using the name as key. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*name The key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref> </para>
</simplesect>
<simplesect kind="note"><para>Will also remove the corresponding entry by PID </para>
</simplesect>
<simplesect kind="note"><para>If an error is thrown it will be printed using the <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="17" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="292" bodyend="316" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="17" declcolumn="5"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
      </memberdef>
      <memberdef kind="function" id="redis_8h_1ae19d8c90888a6ed078d6e835bb11e67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_context</definition>
        <argsstring>()</argsstring>
        <name>free_context</name>
        <briefdescription>
<para>Free the hiredis context variable. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <simplesect kind="return"><para>void </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.h" line="19" column="6" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="92" bodyend="95" declfile="daemon/daemon_utils/common_utils/db/redis.h" declline="19" declcolumn="6"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <referencedby refid="user__db_8c_1ab57ffd0f0b23a847e766e762906af22e" compoundref="user__db_8c" startline="45" endline="49">disconnect_db</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../../common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="redis_8c_1a7b5eb746d92734b57a71ce552363283d" kindref="member">print_all_keys</ref><sp/>();</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" kindref="member">init_context</ref><sp/>();</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*<ref refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" kindref="member">json_to_qm_user</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*<ref refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" kindref="member">get_user_by_pid</ref><sp/>(pid_t<sp/>pid);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*<ref refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" kindref="member">get_user_by_name</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" kindref="member">insert</ref><sp/>(<ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" kindref="member">remove_by_pid</ref><sp/>(pid_t<sp/>pid);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" kindref="member">remove_by_user</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a" kindref="member">free_context</ref><sp/>();</highlight></codeline>
    </programlisting>
    <location file="daemon/daemon_utils/common_utils/db/redis.h"/>
  </compounddef>
</doxygen>
