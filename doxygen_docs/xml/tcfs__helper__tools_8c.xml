<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tcfs__helper__tools_8c" kind="file" language="C++">
    <compoundname>tcfs_helper_tools.c</compoundname>
    <includes refid="tcfs__helper__tools_8h" local="yes">tcfs_helper_tools.h</includes>
    <incdepgraph>
      <node id="1">
        <label>user/old_stuff/tcfs_helper_tools.c</label>
        <link refid="tcfs__helper__tools_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tcfs_helper_tools.h</label>
        <link refid="tcfs__helper__tools_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>sys/stat.h</label>
      </node>
      <node id="8">
        <label>sys/types.h</label>
      </node>
      <node id="9">
        <label>termios.h</label>
      </node>
      <node id="10">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" prot="public" static="no">
        <name>PASS_SIZE</name>
        <initializer>33</initializer>
        <briefdescription>
<para>Set the password size to 33 as AES 256 uses a 32 byte key. An \0 is added for safety. This definition is marked as internal and should not be used directly by the user. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="14" column="9" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int handle_local_mount</definition>
        <argsstring>()</argsstring>
        <name>handle_local_mount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="274" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="274" bodyend="315" declfile="user/old_stuff/tcfs_helper_tools.c" declline="16" declcolumn="5"/>
        <references refid="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" compoundref="tcfs__helper__tools_8c" startline="219" endline="232">create_tcfs_mount_local_folder</references>
        <references refid="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" compoundref="tcfs__helper__tools_8c" startline="204" endline="211">get_source_dest</references>
        <references refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" compoundref="tcfs__helper__tools_8c" startline="235" endline="271">mount_tcfs_folder</references>
        <referencedby refid="tcfs__helper__tools_8c_1a769edcf066efb97f5ae3a81e3507a793" compoundref="tcfs__helper__tools_8c" startline="25" endline="55">do_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int handle_remote_mount</definition>
        <argsstring>()</argsstring>
        <name>handle_remote_mount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="347" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="347" bodyend="402" declfile="user/old_stuff/tcfs_helper_tools.c" declline="17" declcolumn="5"/>
        <references refid="tcfs__helper__tools_8c_1acfa06becac8f67e9f278cfcbf91cc51b" compoundref="tcfs__helper__tools_8c" startline="339" endline="344">clearKeyboardBuffer</references>
        <references refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" compoundref="tcfs__helper__tools_8c" startline="235" endline="271">mount_tcfs_folder</references>
        <referencedby refid="tcfs__helper__tools_8c_1a769edcf066efb97f5ae3a81e3507a793" compoundref="tcfs__helper__tools_8c" startline="25" endline="55">do_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int handle_folder_mount</definition>
        <argsstring>()</argsstring>
        <name>handle_folder_mount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="318" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="318" bodyend="336" declfile="user/old_stuff/tcfs_helper_tools.c" declline="18" declcolumn="5"/>
        <references refid="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" compoundref="tcfs__helper__tools_8c" startline="204" endline="211">get_source_dest</references>
        <references refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" compoundref="tcfs__helper__tools_8c" startline="235" endline="271">mount_tcfs_folder</references>
        <referencedby refid="tcfs__helper__tools_8c_1a769edcf066efb97f5ae3a81e3507a793" compoundref="tcfs__helper__tools_8c" startline="25" endline="55">do_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1a769edcf066efb97f5ae3a81e3507a793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_mount</definition>
        <argsstring>()</argsstring>
        <name>do_mount</name>
        <briefdescription>
<para>Execute the mount of either a Network FS (for ex NFS), Local FS (for ex a block device), Local folder (a folder of the system) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>_ret </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="25" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="25" bodyend="55"/>
        <references refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" compoundref="tcfs__helper__tools_8c" startline="318" endline="336">handle_folder_mount</references>
        <references refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" compoundref="tcfs__helper__tools_8c" startline="274" endline="315">handle_local_mount</references>
        <references refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" compoundref="tcfs__helper__tools_8c" startline="347" endline="402">handle_remote_mount</references>
        <referencedby refid="user__tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="user__tcfs_8c" startline="104" endline="147">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1a8ef1473d59fd1cfc680fe1b227604a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int generate_random_string</definition>
        <argsstring>(char *str)</argsstring>
        <name>generate_random_string</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Generate a random string that will be used as a folder name for the mount. This function is marked as internal and should not be used by the user. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The result will be saved here </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int _ret </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="64" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="64" bodyend="74"/>
        <referencedby refid="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" compoundref="tcfs__helper__tools_8c" startline="95" endline="153">setup_tcfs_mount_folder</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1ab3cdcc12b3bc92a382784027c94a2027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int directory_exists</definition>
        <argsstring>(const char *path)</argsstring>
        <name>directory_exists</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Check if a directory already exists. This function is marked as internal and should not be used by the user. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Fullpath to the dir </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int _ret </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="83" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="83" bodyend="87"/>
        <referencedby refid="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" compoundref="tcfs__helper__tools_8c" startline="95" endline="153">setup_tcfs_mount_folder</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * setup_tcfs_mount_folder</definition>
        <argsstring>()</argsstring>
        <name>setup_tcfs_mount_folder</name>
        <briefdescription>
<para>Creates the .tcfs folder in the user HOME. Then this creates a folder with a random name so that create_tcfs_mount_local_folder function can use it. <ref refid="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" kindref="member">create_tcfs_mount_local_folder</ref> This function is marked as internal and should not be used by the user. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>a folder with a random name inside the $HOME/.tcfs folder </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="95" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="95" bodyend="153"/>
        <references refid="tcfs__helper__tools_8c_1ab3cdcc12b3bc92a382784027c94a2027" compoundref="tcfs__helper__tools_8c" startline="83" endline="87">directory_exists</references>
        <references refid="tcfs__helper__tools_8c_1a8ef1473d59fd1cfc680fe1b227604a02" compoundref="tcfs__helper__tools_8c" startline="64" endline="74">generate_random_string</references>
        <referencedby refid="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" compoundref="tcfs__helper__tools_8c" startline="219" endline="232">create_tcfs_mount_local_folder</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1a1bef5d2cdd74c07b3ae025c6424dfbd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_pass</definition>
        <argsstring>(char *pw)</argsstring>
        <name>get_pass</name>
        <param>
          <type>char *</type>
          <declname>pw</declname>
        </param>
        <briefdescription>
<para>fetch the password of the current user. This function is marked as internal and should not be used by the user </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pw</parametername>
</parameternamelist>
<parameterdescription>
<para>String to save the password to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>This will be changed when a public/private key model will be avilable to TCFS userspace module </para>
</xrefdescription></xrefsect></para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="162" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="162" bodyend="197"/>
        <references refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" compoundref="tcfs__helper__tools_8c" startline="14">PASS_SIZE</references>
        <referencedby refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" compoundref="tcfs__helper__tools_8c" startline="235" endline="271">mount_tcfs_folder</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_source_dest</definition>
        <argsstring>(char *source, char *dest)</argsstring>
        <name>get_source_dest</name>
        <param>
          <type>char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Ask</parametername>
</parameternamelist>
<parameterdescription>
<para>the user to insert the source and the destination of the mount. This function is marked as internal and should not be used by the user </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="204" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="204" bodyend="211"/>
        <referencedby refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" compoundref="tcfs__helper__tools_8c" startline="318" endline="336">handle_folder_mount</referencedby>
        <referencedby refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" compoundref="tcfs__helper__tools_8c" startline="274" endline="315">handle_local_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * create_tcfs_mount_local_folder</definition>
        <argsstring>()</argsstring>
        <name>create_tcfs_mount_local_folder</name>
        <briefdescription>
<para>Create a temporary folder in HOME/.tcfs. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>char * the fullpath to the generated folder </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="219" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="219" bodyend="232"/>
        <references refid="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" compoundref="tcfs__helper__tools_8c" startline="95" endline="153">setup_tcfs_mount_folder</references>
        <referencedby refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" compoundref="tcfs__helper__tools_8c" startline="274" endline="315">handle_local_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mount_tcfs_folder</definition>
        <argsstring>(char *tmp_path, char *destination)</argsstring>
        <name>mount_tcfs_folder</name>
        <param>
          <type>char *</type>
          <declname>tmp_path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="235" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="235" bodyend="271"/>
        <references refid="tcfs__helper__tools_8c_1a1bef5d2cdd74c07b3ae025c6424dfbd5" compoundref="tcfs__helper__tools_8c" startline="162" endline="197">get_pass</references>
        <references refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" compoundref="tcfs__helper__tools_8c" startline="14">PASS_SIZE</references>
        <referencedby refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" compoundref="tcfs__helper__tools_8c" startline="318" endline="336">handle_folder_mount</referencedby>
        <referencedby refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" compoundref="tcfs__helper__tools_8c" startline="274" endline="315">handle_local_mount</referencedby>
        <referencedby refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" compoundref="tcfs__helper__tools_8c" startline="347" endline="402">handle_remote_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1acfa06becac8f67e9f278cfcbf91cc51b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clearKeyboardBuffer</definition>
        <argsstring>()</argsstring>
        <name>clearKeyboardBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="339" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="339" bodyend="344"/>
        <referencedby refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" compoundref="tcfs__helper__tools_8c" startline="347" endline="402">handle_remote_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs__helper__tools_8c_1abe60a9bd3f55341eb2496670553f9d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setup_tcfs_env</definition>
        <argsstring>()</argsstring>
        <name>setup_tcfs_env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="user/old_stuff/tcfs_helper_tools.c" line="405" column="1" bodyfile="user/old_stuff/tcfs_helper_tools.c" bodystart="405" bodyend="408"/>
        <referencedby refid="user__tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="user__tcfs_8c" startline="104" endline="147">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This file contains the logic and implementation of functions needed to perform the operations requested in <ref refid="user__tcfs_8c" kindref="compound">user_tcfs.c</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="user__tcfs_8c" kindref="compound">user_tcfs.c</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tcfs__helper__tools_8h" kindref="compound">tcfs_helper_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PASS_SIZE<sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" kindref="member">handle_local_mount</ref><sp/>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" kindref="member">handle_remote_mount</ref><sp/>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" kindref="member">handle_folder_mount</ref><sp/>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="tcfs__helper__tools_8c_1a769edcf066efb97f5ae3a81e3507a793" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1a769edcf066efb97f5ae3a81e3507a793" kindref="member">do_mount</ref><sp/>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choice<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Chose<sp/>between:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t1.<sp/>Network<sp/>FS\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t2.<sp/>Local<sp/>FS\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t3.<sp/>Local<sp/>folder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanf<sp/>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;choice);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choice<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>choice<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>choice<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>Select<sp/>1<sp/>or<sp/>2\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(choice<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>choice<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>choice<sp/>!=<sp/>3);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>chose<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>choice);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choice<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" kindref="member">handle_remote_mount</ref><sp/>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choice<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" kindref="member">handle_local_mount</ref><sp/>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choice<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" kindref="member">handle_folder_mount</ref><sp/>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Unrecoverable<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="tcfs__helper__tools_8c_1a8ef1473d59fd1cfc680fe1b227604a02" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1a8ef1473d59fd1cfc680fe1b227604a02" kindref="member">generate_random_string</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>srand<sp/>(time<sp/>(NULL));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>str[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[rand<sp/>()<sp/>%<sp/>62];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>str[10]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="tcfs__helper__tools_8c_1ab3cdcc12b3bc92a382784027c94a2027" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1ab3cdcc12b3bc92a382784027c94a2027" kindref="member">directory_exists</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sb;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat<sp/>(path,<sp/>&amp;sb)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>S_ISDIR<sp/>(sb.st_mode);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="95" refid="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" kindref="member">setup_tcfs_mount_folder</ref><sp/>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;SETUP<sp/>ENV\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*home<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;$HOME=%s\n&quot;</highlight><highlight class="normal">,<sp/>home);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tcfs_path</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>malloc<sp/>((strlen<sp/>(home)<sp/>+<sp/>strlen<sp/>(</highlight><highlight class="stringliteral">&quot;/.tcfs\0&quot;</highlight><highlight class="normal">))<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rand_path_name[11];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(home<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>$HOME\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tcfs_path<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>string<sp/>tcfs_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>sprintf<sp/>(tcfs_path,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>home,<sp/></highlight><highlight class="stringliteral">&quot;.tcfs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//$HOME/.tcfs<sp/>does<sp/>not<sp/>exist<sp/>if<sp/>this<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs__helper__tools_8c_1ab3cdcc12b3bc92a382784027c94a2027" kindref="member">directory_exists</ref><sp/>(tcfs_path)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mkdir<sp/>(tcfs_path,<sp/>0770)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>.tcfs<sp/>directory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>folder<sp/>to<sp/>mount<sp/>the<sp/>source<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>random<sp/>path<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs__helper__tools_8c_1a8ef1473d59fd1cfc680fe1b227604a02" kindref="member">generate_random_string</ref><sp/>(rand_path_name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Err:<sp/>Name<sp/>generation<sp/>for<sp/>temp<sp/>folder<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>path<sp/>from<sp/>/<sp/>to<sp/>the<sp/>generated<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>new_path<sp/>=<sp/>malloc<sp/>((strlen<sp/>(rand_path_name)<sp/>+<sp/>strlen<sp/>(tcfs_path)<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_path<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>allocate<sp/>new<sp/>memory<sp/>for<sp/>path<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>sprintf<sp/>(new_path,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>tcfs_path,<sp/>rand_path_name);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mkdir<sp/>(new_path,<sp/>0770)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>the<sp/>tmp<sp/>folder<sp/>inside<sp/>.tcfs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;New<sp/>path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>new_path);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>free<sp/>(tcfs_path);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_path;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="tcfs__helper__tools_8c_1a1bef5d2cdd74c07b3ae025c6424dfbd5" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1a1bef5d2cdd74c07b3ae025c6424dfbd5" kindref="member">get_pass</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pw)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">termios<sp/>old,<sp/>new;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>character<sp/>echo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>tcgetattr<sp/>(STDIN_FILENO,<sp/>&amp;old);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>old;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.c_lflag<sp/>&amp;=<sp/>~ECHO;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>tcsetattr<sp/>(STDIN_FILENO,<sp/>TCSANOW,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>a<sp/>password<sp/>exactly<sp/>%d<sp/>characters<sp/>long:\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" kindref="member">PASS_SIZE</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(strlen<sp/>(pw)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/>(<ref refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" kindref="member">PASS_SIZE</ref><sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>getchar<sp/>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>ch<sp/>==<sp/>EOF)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" kindref="member">PASS_SIZE</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pw[i]<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pw[i<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>terminal<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>tcsetattr<sp/>(STDIN_FILENO,<sp/>TCSANOW,<sp/>&amp;old);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;\nPassword<sp/>successfully<sp/>entered!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" kindref="member">get_source_dest</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*source,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Please<sp/>type<sp/>the<sp/>path<sp/>to<sp/>the<sp/>source\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>scanf<sp/>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Please<sp/>type<sp/>where<sp/>it<sp/>should<sp/>be<sp/>mounted\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>scanf<sp/>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>dest);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="219" refid="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" kindref="member">create_tcfs_mount_local_folder</ref><sp/>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_path<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>folder<sp/>to<sp/>mount<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>tmp_path<sp/>=<sp/><ref refid="tcfs__helper__tools_8c_1a3644c45d6131fe1528ce36163e299fd9" kindref="member">setup_tcfs_mount_folder</ref><sp/>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_path<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Err:<sp/>could<sp/>not<sp/>get<sp/>temp<sp/>path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Creating<sp/>dir:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tmp_path);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_path;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" kindref="member">mount_tcfs_folder</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destination)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pass[<ref refid="tcfs__helper__tools_8c_1afc6f770387ff27f9a3cf832b785d28dc" kindref="member">PASS_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">termios<sp/>old,<sp/>new;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>character<sp/>echo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>tcgetattr<sp/>(STDIN_FILENO,<sp/>&amp;old);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>old;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">.c_lflag<sp/>&amp;=<sp/>~ECHO;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>tcsetattr<sp/>(STDIN_FILENO,<sp/>TCSANOW,<sp/>&amp;</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="tcfs__helper__tools_8c_1a1bef5d2cdd74c07b3ae025c6424dfbd5" kindref="member">get_pass</ref><sp/>(pass);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcsetattr<sp/>(STDIN_FILENO,<sp/>TCSANOW,<sp/>&amp;old);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>password\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mount<sp/>tmpfolder<sp/>to<sp/>the<sp/>destination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tcfs_command</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>malloc<sp/>((strlen<sp/>(</highlight><highlight class="stringliteral">&quot;tcfs<sp/>-s<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>strlen<sp/>(tmp_path)<sp/>+<sp/>strlen<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>-d<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>strlen<sp/>(destination)<sp/>+<sp/>strlen<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>-p<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>strlen<sp/>(pass)));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>sprintf<sp/>(tcfs_command,<sp/></highlight><highlight class="stringliteral">&quot;tcfs<sp/>-s<sp/>%s<sp/>-d<sp/>%s<sp/>-p<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>tmp_path,<sp/>destination,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status_tcfs_mount<sp/>=<sp/>system<sp/>(tcfs_command);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(WIFEXITED<sp/>(status_tcfs_mount)<sp/>&amp;&amp;<sp/>WEXITSTATUS<sp/>(status_tcfs_mount)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcsetattr<sp/>(STDIN_FILENO,<sp/>TCSANOW,<sp/>&amp;old);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>execute<sp/>the<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>free<sp/>(tcfs_command);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>tcsetattr<sp/>(STDIN_FILENO,<sp/>TCSANOW,<sp/>&amp;old);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1a816c2bcaa3d059abc79cb9b021957dbf" kindref="member">handle_local_mount</ref><sp/>()</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>source[PATH_MAX];</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>destination[PATH_MAX];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_path<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" kindref="member">get_source_dest</ref><sp/>(source,<sp/>destination);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>tmp_path<sp/>=<sp/><ref refid="tcfs__helper__tools_8c_1ae930b52ef70f640efde8bda574b6b234" kindref="member">create_tcfs_mount_local_folder</ref><sp/>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_path<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>could<sp/>not<sp/>get<sp/>tmp<sp/>folder<sp/>path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mount<sp/>block<sp/>device<sp/>to<sp/>temp<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command<sp/>=<sp/>malloc<sp/>(</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(strlen<sp/>(</highlight><highlight class="stringliteral">&quot;mount<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>strlen<sp/>(source)<sp/>+<sp/>strlen<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>strlen<sp/>(tmp_path))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;cannot<sp/>allocate<sp/>memoty<sp/>for<sp/>the<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>sprintf<sp/>(command,<sp/></highlight><highlight class="stringliteral">&quot;sudo<sp/>mount<sp/>-o<sp/>umask=0755,gid=1000,uid=1000<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>source,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_path);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;executing:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>command);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status_tmp_mount<sp/>=<sp/>system<sp/>(command);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(WIFEXITED<sp/>(status_tmp_mount)<sp/>&amp;&amp;<sp/>WEXITSTATUS<sp/>(status_tmp_mount)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>execute<sp/>the<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" kindref="member">mount_tcfs_folder</ref><sp/>(tmp_path,<sp/>destination);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>free<sp/>(tmp_path);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>free<sp/>(command);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1afaed41fa1136b829eb00a7de26a3739b" kindref="member">handle_folder_mount</ref><sp/>()</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>source[PATH_MAX];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>destination[PATH_MAX];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="tcfs__helper__tools_8c_1ae1746adb62f9476a6d8166b62faa7a91" kindref="member">get_source_dest</ref><sp/>(source,<sp/>destination);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>||<sp/>destination[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>Could<sp/>not<sp/>get<sp/>source<sp/>or<sp/>destination\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Source:%s\tdestination:%s\n&quot;</highlight><highlight class="normal">,<sp/>source,<sp/>destination);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" kindref="member">mount_tcfs_folder</ref><sp/>(source,<sp/>destination);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="tcfs__helper__tools_8c_1acfa06becac8f67e9f278cfcbf91cc51b" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1acfa06becac8f67e9f278cfcbf91cc51b" kindref="member">clearKeyboardBuffer</ref><sp/>()</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ch<sp/>=<sp/>getchar<sp/>())<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>ch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1aa5b1203d82818e149ae3ad3fd3840a40" kindref="member">handle_remote_mount</ref><sp/>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>source[PATH_MAX]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>destination[PATH_MAX]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>command[100]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;WARN:<sp/>This<sp/>function<sp/>is<sp/>not<sp/>complete,<sp/>I<sp/>don&apos;t<sp/>know<sp/>how<sp/>many<sp/>remote<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FileSystems<sp/>support<sp/>extended<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;attributes,<sp/>please<sp/>mount<sp/>it<sp/>manually.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nEX:sudo<sp/>mount<sp/>-t<sp/>nfs<sp/>-o<sp/>umask=0755,gid=1000,uid=1000<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;10.10.10.10:/NFS<sp/>/mnt\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="tcfs__helper__tools_8c_1acfa06becac8f67e9f278cfcbf91cc51b" kindref="member">clearKeyboardBuffer</ref><sp/>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Enter<sp/>the<sp/>command:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(loop<sp/>&lt;<sp/>99<sp/>&amp;&amp;<sp/>(ch<sp/>=<sp/>getc<sp/>(stdin))<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>ch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command[loop]<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++loop;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>command[loop]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Null-terminate<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Command:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>command);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>system<sp/>(command);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(WIFEXITED<sp/>(status)<sp/>&amp;&amp;<sp/>WEXITSTATUS<sp/>(status)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>execute<sp/>the<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Where<sp/>has<sp/>it<sp/>been<sp/>mounted?<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>loop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(loop<sp/>&lt;<sp/>PATH_MAX<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>(ch<sp/>=<sp/>getc<sp/>(stdin))<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>ch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>source[loop]<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++loop;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>source[loop]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Null-terminate<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Source:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Where<sp/>should<sp/>TCFS<sp/>mount<sp/>it?<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>loop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(loop<sp/>&lt;<sp/>PATH_MAX<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>(ch<sp/>=<sp/>getc<sp/>(stdin))<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>ch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destination[loop]<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++loop;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>destination[loop]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Null-terminate<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Destination:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="tcfs__helper__tools_8c_1a26931b8bdf24be94e03f4d77e991d063" kindref="member">mount_tcfs_folder</ref><sp/>(source,<sp/>destination);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="tcfs__helper__tools_8c_1abe60a9bd3f55341eb2496670553f9d26" refkind="member"><highlight class="normal"><ref refid="tcfs__helper__tools_8c_1abe60a9bd3f55341eb2496670553f9d26" kindref="member">setup_tcfs_env</ref><sp/>()</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="user/old_stuff/tcfs_helper_tools.c"/>
  </compounddef>
</doxygen>
