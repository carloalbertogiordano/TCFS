<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="redis_8c" kind="file" language="C++">
    <compoundname>redis.c</compoundname>
    <includes refid="redis_8h" local="yes">redis.h</includes>
    <includes refid="json__tools_8h" local="yes">../json/json_tools.h</includes>
    <includes refid="print__utils_8h" local="yes">../print/print_utils.h</includes>
    <includes local="no">hiredis/hiredis.h</includes>
    <incdepgraph>
      <node id="3">
        <label>../../common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/db/redis.c</label>
        <link refid="redis_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>redis.h</label>
        <link refid="redis_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../json/json_tools.h</label>
        <link refid="json__tools_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../print/print_utils.h</label>
        <link refid="print__utils_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>errno.h</label>
      </node>
      <node id="6">
        <label>fcntl.h</label>
      </node>
      <node id="16">
        <label>hiredis/hiredis.h</label>
      </node>
      <node id="7">
        <label>mqueue.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>sys/stat.h</label>
      </node>
      <node id="5">
        <label>sys/types.h</label>
      </node>
      <node id="15">
        <label>systemd/sd-journal.h</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2" prot="public" static="no">
        <name>PORT</name>
        <initializer>6380</initializer>
        <briefdescription>
<para>The port of the redis DB. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This definition is marked as internal and be used directly</para>
<para><xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>This should be passed as a parameter to the daemon </para>
</xrefdescription></xrefsect></para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="27" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="redis_8c_1a0cc05631b755191d8d1c64c74c77894b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char HOST[]</definition>
        <argsstring>[]</argsstring>
        <name>HOST</name>
        <initializer>= &quot;127.0.0.1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="20" column="12" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" prot="public" static="no" mutable="no">
        <type>redisContext *</type>
        <definition>redisContext * context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
<para>Pointer to the context of Redis DB. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This variable is marked as internal and should not be used by the user </para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="34" column="14" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="34" bodyend="-1"/>
        <referencedby refid="redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a" compoundref="redis_8c" startline="92" endline="95">free_context</referencedby>
        <referencedby refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</referencedby>
        <referencedby refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</referencedby>
        <referencedby refid="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" compoundref="redis_8c" startline="72" endline="85">init_context</referencedby>
        <referencedby refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" compoundref="redis_8c" startline="211" endline="245">insert</referencedby>
        <referencedby refid="redis_8c_1a7b5eb746d92734b57a71ce552363283d" compoundref="redis_8c" startline="42" endline="64">print_all_keys</referencedby>
        <referencedby refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" compoundref="redis_8c" startline="256" endline="281">remove_by_pid</referencedby>
        <referencedby refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" compoundref="redis_8c" startline="292" endline="316">remove_by_user</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="redis_8c_1a7b5eb746d92734b57a71ce552363283d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_all_keys</definition>
        <argsstring>()</argsstring>
        <name>print_all_keys</name>
        <briefdescription>
<para>For debugging only. Prints all the keys in the database. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <simplesect kind="return"><para>void </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="42" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="42" bodyend="64"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
        <referencedby refid="user__db_8c_1a6e2fcf4aa637e61f69b1b601981663cf" compoundref="user__db_8c" startline="31" endline="36">unregister_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_context</definition>
        <argsstring>()</argsstring>
        <name>init_context</name>
        <briefdescription>
<para>initialize the context for the Redis DB </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <simplesect kind="return"><para>1 if initialization was successful or the database was already initialized, 0 on failure </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="72" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="72" bodyend="85"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2" compoundref="redis_8c" startline="27">PORT</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_context</definition>
        <argsstring>()</argsstring>
        <name>free_context</name>
        <briefdescription>
<para>Free the hiredis context variable. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <simplesect kind="return"><para>void </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="92" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="92" bodyend="95"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <referencedby refid="user__db_8c_1ab57ffd0f0b23a847e766e762906af22e" compoundref="user__db_8c" startline="45" endline="49">disconnect_db</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * json_to_qm_user</definition>
        <argsstring>(char *json)</argsstring>
        <name>json_to_qm_user</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
<para>Internal function to simplify the casting of a json to a <ref refid="structqm__user" kindref="compound">qm_user</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*json the json string representing the <ref refid="structqm__user" kindref="compound">qm_user</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>qm_user* A pointer to the allocated qm_user* struct </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="104" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="104" bodyend="114"/>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <referencedby refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</referencedby>
        <referencedby refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * get_user_by_pid</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>get_user_by_pid</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Fetch the user on the DB with key pid. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid_t</parametername>
</parameternamelist>
<parameterdescription>
<para>pid The key of the row </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>qm_user* A pointer to the allocated qm_user* struct </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="122" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="122" bodyend="157"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" compoundref="redis_8c" startline="104" endline="114">json_to_qm_user</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" compoundref="redis_8c" startline="256" endline="281">remove_by_pid</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * get_user_by_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>get_user_by_name</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Fetch the user on the DB with key name. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *name The key of the row </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>qm_user* A pointer to the allocated qm_user* struct </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="165" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="165" bodyend="200"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" compoundref="redis_8c" startline="104" endline="114">json_to_qm_user</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" compoundref="redis_8c" startline="292" endline="316">remove_by_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int insert</definition>
        <argsstring>(qm_user *user)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>Insert a new user in the DB. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qm_user*</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the allocated qm_user* struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref> </para>
</simplesect>
<simplesect kind="note"><para>The user will be set 2 times, once with key user-&gt;pid and once with key user-&gt;name </para>
</simplesect>
<simplesect kind="note"><para>If an error is thrown it will be printed by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="211" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="211" bodyend="245"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int remove_by_pid</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>remove_by_pid</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Remove a user from the DB using the PID as key. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid_t</parametername>
</parameternamelist>
<parameterdescription>
<para>pid The key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref> </para>
</simplesect>
<simplesect kind="note"><para>Will also remove the corresponding entry by name. </para>
</simplesect>
<simplesect kind="note"><para>If an error is thrown it will be printed using the <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="256" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="256" bodyend="281"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="101" endline="112">print_msg</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="59">qm_user::user</references>
        <referencedby refid="user__db_8c_1a6e2fcf4aa637e61f69b1b601981663cf" compoundref="user__db_8c" startline="31" endline="36">unregister_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int remove_by_user</definition>
        <argsstring>(char *name)</argsstring>
        <name>remove_by_user</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove a user from the DB using the name as key. </para>
        </briefdescription>
        <detaileddescription>
<internal><para>This function is marked as internal and should not be used by the user <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*name The key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref> </para>
</simplesect>
<simplesect kind="note"><para>Will also remove the corresponding entry by PID </para>
</simplesect>
<simplesect kind="note"><para>If an error is thrown it will be printed using the <ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err()</ref> function </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="292" column="1" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="292" bodyend="316"/>
        <references refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" compoundref="redis_8c" startline="34">context</references>
        <references refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="58">qm_user::pid</references>
        <references refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" compoundref="print__utils_8c" startline="79" endline="91">print_err</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>All the function in this file should not be used directly, instead use the function defined by user_db. </para>
    </briefdescription>
    <detaileddescription>
<internal><para>This file is marked as internal and the corresponding header should not be used by the user. Please refer to the see section</para>
<para><simplesect kind="see"><para>\ref <ref refid="user__db_8c" kindref="compound">user_db.c</ref> </para>
</simplesect>
</para>
</internal>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;redis.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../json/json_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../print/print_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hiredis/hiredis.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>HOST[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27" refid="redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORT<sp/>6380</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" refkind="member"><highlight class="normal">redisContext<sp/>*<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="redis_8c_1a7b5eb746d92734b57a71ce552363283d" refkind="member"><highlight class="normal"><ref refid="redis_8c_1a7b5eb746d92734b57a71ce552363283d" kindref="member">print_all_keys</ref><sp/>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>redisReply<sp/>*keys_reply<sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;KEYS<sp/>*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys_reply)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys_reply-&gt;type<sp/>==<sp/>REDIS_REPLY_ARRAY)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keys_reply-&gt;elements;<sp/>++i)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tKey:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>keys_reply-&gt;element[i]-&gt;str);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>retrieving<sp/>keys:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>keys_reply-&gt;str);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freeReplyObject<sp/>(keys_reply);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>executing<sp/>KEYS<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" refkind="member"><highlight class="normal"><ref refid="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" kindref="member">init_context</ref><sp/>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>reinit<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref><sp/>=<sp/>redisConnect<sp/>(HOST,<sp/><ref refid="redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2" kindref="member">PORT</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>-&gt;err)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Connection<sp/>error:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>-&gt;errstr);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a" refkind="member"><highlight class="normal"><ref refid="redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a" kindref="member">free_context</ref><sp/>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>redisFree<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*</highlight></codeline>
<codeline lineno="104" refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" refkind="member"><highlight class="normal"><ref refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" kindref="member">json_to_qm_user</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DEBUG:<sp/>Converting<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>json);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>qm_type<sp/>type;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>return<sp/>the<sp/>value<sp/>as<sp/>json:{actual<sp/>json}<sp/>so<sp/>we<sp/>need<sp/>to<sp/>eliminate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>json:<sp/>from<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*res<sp/>=<sp/>strchr<sp/>(json,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>res++;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>:<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user<sp/>=<sp/>(<ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*)string_to_struct<sp/>(res,<sp/>&amp;type);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*</highlight></codeline>
<codeline lineno="122" refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" refkind="member"><highlight class="normal"><ref refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" kindref="member">get_user_by_pid</ref><sp/>(pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>JSON<sp/>data<sp/>from<sp/>Redis<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;EXECUTING<sp/>\&quot;GET<sp/>pid:%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>redisReply<sp/>*luaReply</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GET<sp/>pid:%d&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply-&gt;type<sp/>==<sp/>REDIS_REPLY_STRING)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>=<sp/><ref refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" kindref="member">json_to_qm_user</ref><sp/>(luaReply-&gt;str);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Successful<sp/>retrieval!<sp/>PID:<sp/>%d,<sp/>User:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;<ref refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" kindref="member">pid</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-&gt;<ref refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" kindref="member">user</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>converting<sp/>JSON<sp/>to<sp/>struct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>type<sp/>error<sp/>%d<sp/>-&gt;<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaReply-&gt;type,<sp/>luaReply-&gt;str,<sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>-&gt;errstr);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freeReplyObject<sp/>(luaReply);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>error<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>-&gt;errstr);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*</highlight></codeline>
<codeline lineno="165" refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" refkind="member"><highlight class="normal"><ref refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" kindref="member">get_user_by_name</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>JSON<sp/>data<sp/>from<sp/>Redis<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;EXECUTING<sp/>\&quot;GET<sp/>name:%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>redisReply<sp/>*luaReply</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GET<sp/>name:%d&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply-&gt;type<sp/>==<sp/>REDIS_REPLY_STRING)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>=<sp/><ref refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" kindref="member">json_to_qm_user</ref><sp/>(luaReply-&gt;str);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Successful<sp/>retrieval!<sp/>PID:<sp/>%d,<sp/>User:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;<ref refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" kindref="member">pid</ref>,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-&gt;<ref refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" kindref="member">user</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>converting<sp/>JSON<sp/>to<sp/>struct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>type<sp/>error<sp/>%d<sp/>-&gt;<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaReply-&gt;type,<sp/>luaReply-&gt;str,<sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>-&gt;errstr);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freeReplyObject<sp/>(luaReply);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>error<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>-&gt;errstr);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" refkind="member"><highlight class="normal"><ref refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" kindref="member">insert</ref><sp/>(<ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>structure<sp/>to<sp/>JSON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json<sp/>=<sp/>struct_to_json<sp/>(USER,<sp/>user);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>converting<sp/>qm_user<sp/>to<sp/>JSON&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>to<sp/>Redis<sp/>with<sp/>key<sp/>&quot;pid_str&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tDB:<sp/>\&quot;SET<sp/>pid:%d<sp/>json:%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>user-&gt;<ref refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" kindref="member">pid</ref>,<sp/>json);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>redisReply<sp/>*reply_pid<sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SET<sp/>pid:%d<sp/>json:%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;<ref refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" kindref="member">pid</ref>,<sp/>json);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_pid)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>saving<sp/>to<sp/>Redis<sp/>(pid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)json);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>freeReplyObject<sp/>(reply_pid);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>to<sp/>Redis<sp/>with<sp/>key<sp/>&quot;user&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>redisReply<sp/>*reply_user<sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SET<sp/>user:%s<sp/>json:%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;<ref refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" kindref="member">user</ref>,<sp/>json);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_user)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>saving<sp/>to<sp/>Redis<sp/>(user)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)json);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>freeReplyObject<sp/>(reply_user);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>allocated<sp/>JSON<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)json);<sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>qualifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" refkind="member"><highlight class="normal"><ref refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" kindref="member">remove_by_pid</ref><sp/>(pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user_tmp<sp/>=<sp/><ref refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" kindref="member">get_user_by_pid</ref><sp/>(pid);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>structure<sp/>by<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tDB:<sp/>\&quot;DEL<sp/>pid:%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>redisReply<sp/>*reply_pid</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>pid:%d&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_pid)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>structure<sp/>by<sp/>PID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>freeReplyObject<sp/>(reply_pid);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>remove<sp/>the<sp/>corresponding<sp/>key<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tDB:<sp/>\&quot;DEL<sp/>user:%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>user_tmp-&gt;<ref refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" kindref="member">user</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>redisReply<sp/>*reply_name</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>user:%s&quot;</highlight><highlight class="normal">,<sp/>user_tmp-&gt;<ref refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" kindref="member">user</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_name)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>key<sp/>by<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>free<sp/>(user_tmp);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>freeReplyObject<sp/>(reply_name);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" refkind="member"><highlight class="normal"><ref refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" kindref="member">remove_by_user</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user_tmp<sp/>=<sp/><ref refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" kindref="member">get_user_by_name</ref><sp/>(name);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>structure<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key_name[64];<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>size<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>snprintf<sp/>(key_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(key_name),<sp/></highlight><highlight class="stringliteral">&quot;user:%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>redisReply<sp/>*reply_name</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>key_name);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_name)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>structure<sp/>by<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>freeReplyObject<sp/>(reply_name);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>remove<sp/>the<sp/>corresponding<sp/>key<sp/>by<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>redisReply<sp/>*reply_pid</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(redisReply<sp/>*)redisCommand<sp/>(<ref refid="redis_8c_1a71ea645922f3e5dcc69b644656c79a99" kindref="member">context</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>user_tmp-&gt;<ref refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" kindref="member">pid</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_pid)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>key<sp/>by<sp/>PID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>freeReplyObject<sp/>(reply_pid);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="daemon/daemon_utils/common_utils/db/redis.c"/>
  </compounddef>
</doxygen>
