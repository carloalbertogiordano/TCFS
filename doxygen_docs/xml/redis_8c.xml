<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="redis_8c" kind="file" language="C++">
    <compoundname>redis.c</compoundname>
    <includes refid="redis_8h" local="yes">redis.h</includes>
    <includes refid="print__utils_8h" local="yes">../print/print_utils.h</includes>
    <includes refid="json__tools_8h" local="yes">../json/json_tools.h</includes>
    <includes local="no">hiredis/hiredis.h</includes>
    <incdepgraph>
      <node id="3">
        <label>../../common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/db/redis.c</label>
        <link refid="redis_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>redis.h</label>
        <link refid="redis_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../json/json_tools.h</label>
        <link refid="json__tools_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../print/print_utils.h</label>
        <link refid="print__utils_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>errno.h</label>
      </node>
      <node id="6">
        <label>fcntl.h</label>
      </node>
      <node id="16">
        <label>hiredis/hiredis.h</label>
      </node>
      <node id="7">
        <label>mqueue.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>sys/stat.h</label>
      </node>
      <node id="5">
        <label>sys/types.h</label>
      </node>
      <node id="12">
        <label>systemd/sd-journal.h</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2" prot="public" static="no">
        <name>PORT</name>
        <initializer>6380</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="26" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="redis_8c_1a0cc05631b755191d8d1c64c74c77894b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char HOST[]</definition>
        <argsstring>[]</argsstring>
        <name>HOST</name>
        <initializer>= &quot;127.0.0.1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="19" column="12" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="redis_8c_1ace869d36dc1b4de4b6d046c0c71486cb" prot="public" static="no" mutable="no">
        <type>redisContext *</type>
        <definition>redisContext* context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="33" column="14" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="redis_8c_1a7b5eb746d92734b57a71ce552363283d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_all_keys</definition>
        <argsstring>()</argsstring>
        <name>print_all_keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="40" column="6" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="40" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_context</definition>
        <argsstring>()</argsstring>
        <name>init_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="60" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="60" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_context</definition>
        <argsstring>()</argsstring>
        <name>free_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="78" column="6" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * json_to_qm_user</definition>
        <argsstring>(char *json)</argsstring>
        <name>json_to_qm_user</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="88" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="88" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * get_user_by_pid</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>get_user_by_pid</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="104" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="104" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
        <definition>qm_user * get_user_by_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>get_user_by_name</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="133" column="9" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="133" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int insert</definition>
        <argsstring>(qm_user *user)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structqm__user" kindref="compound">qm_user</ref> *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="164" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="164" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int remove_by_pid</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>remove_by_pid</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="205" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="205" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int remove_by_user</definition>
        <argsstring>(char *name)</argsstring>
        <name>remove_by_user</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/db/redis.c" line="235" column="5" bodyfile="daemon/daemon_utils/common_utils/db/redis.c" bodystart="235" bodyend="255"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;redis.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../print/print_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../json/json_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hiredis/hiredis.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>HOST[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORT<sp/>6380</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">redisContext<sp/>*context;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_all_keys()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*keys_reply<sp/>=<sp/>(redisReply<sp/>*)redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;KEYS<sp/>*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys_reply)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys_reply-&gt;type<sp/>==<sp/>REDIS_REPLY_ARRAY)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keys_reply-&gt;elements;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;\tKey:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>keys_reply-&gt;element[i]-&gt;str);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>retrieving<sp/>keys:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>keys_reply-&gt;str);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeReplyObject(keys_reply);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>executing<sp/>KEYS<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init_context()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>not<sp/>reinit<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>context<sp/>=<sp/>redisConnect(HOST,<sp/>PORT);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;err)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Connection<sp/>error:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>context-&gt;errstr);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_context()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>redisFree(context);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*json_to_qm_user(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;DEBUG:<sp/>Converting<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>json);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>qm_type<sp/>type;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Redis<sp/>return<sp/>the<sp/>value<sp/>as<sp/>json:{actual<sp/>json}<sp/>so<sp/>we<sp/>need<sp/>to<sp/>eliminate<sp/>the<sp/>json:<sp/>from<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*res<sp/>=<sp/>strchr(json,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>res++;<sp/></highlight><highlight class="comment">//Skip<sp/>the<sp/>:<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user<sp/>=<sp/>(<ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*)string_to_struct(res,<sp/>&amp;type);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*get_user_by_pid(pid_t<sp/>pid)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>JSON<sp/>data<sp/>from<sp/>Redis<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;EXECUTING<sp/>\&quot;GET<sp/>pid:%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*luaReply<sp/>=<sp/>(redisReply<sp/>*)redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;GET<sp/>pid:%d&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply-&gt;type<sp/>==<sp/>REDIS_REPLY_STRING)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>=<sp/>json_to_qm_user(luaReply-&gt;str);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;Successful<sp/>retrieval!<sp/>PID:<sp/>%d,<sp/>User:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;pid,<sp/>user-&gt;user);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>converting<sp/>JSON<sp/>to<sp/>struct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>type<sp/>error<sp/>%d<sp/>-&gt;<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaReply-&gt;type,<sp/>luaReply-&gt;str,context-&gt;errstr);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeReplyObject(luaReply);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>error<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>context-&gt;errstr);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*get_user_by_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>JSON<sp/>data<sp/>from<sp/>Redis<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;EXECUTING<sp/>\&quot;GET<sp/>name:%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*luaReply<sp/>=<sp/>(redisReply<sp/>*)redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;GET<sp/>name:%d&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(luaReply-&gt;type<sp/>==<sp/>REDIS_REPLY_STRING)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>=<sp/>json_to_qm_user(luaReply-&gt;str);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;Successful<sp/>retrieval!<sp/>PID:<sp/>%d,<sp/>User:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;pid,<sp/>user-&gt;user);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>converting<sp/>JSON<sp/>to<sp/>struct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>type<sp/>error<sp/>%d<sp/>-&gt;<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaReply-&gt;type,<sp/>luaReply-&gt;str,context-&gt;errstr);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeReplyObject(luaReply);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Reply<sp/>error<sp/>executing<sp/>HGET\n\tErrString:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>context-&gt;errstr);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>insert(<ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>structure<sp/>to<sp/>JSON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json<sp/>=<sp/>struct_to_json(USER,<sp/>user);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>converting<sp/>qm_user<sp/>to<sp/>JSON&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>to<sp/>Redis<sp/>with<sp/>key<sp/>&quot;pid_str&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;\tDB:<sp/>\&quot;SET<sp/>pid:%d<sp/>json:%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>user-&gt;pid,<sp/>json);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*reply_pid<sp/>=(redisReply<sp/>*)<sp/>redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;SET<sp/>pid:%d<sp/>json:%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;pid,<sp/>json);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_pid)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>saving<sp/>to<sp/>Redis<sp/>(pid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)json);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>freeReplyObject(reply_pid);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>to<sp/>Redis<sp/>with<sp/>key<sp/>&quot;user&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*reply_user<sp/>=(redisReply<sp/>*)<sp/>redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;SET<sp/>user:%s<sp/>json:%s&quot;</highlight><highlight class="normal">,<sp/>user-&gt;user,<sp/>json);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_user)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>saving<sp/>to<sp/>Redis<sp/>(user)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)json);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>freeReplyObject(reply_user);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>allocated<sp/>JSON<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)json);<sp/></highlight><highlight class="comment">//Discard<sp/>qualifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remove_by_pid(pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user_tmp<sp/>=<sp/>get_user_by_pid(pid);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>structure<sp/>by<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;\tDB:<sp/>\&quot;DEL<sp/>pid:%d\&quot;&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*reply_pid<sp/>=(redisReply<sp/>*)<sp/>redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>pid:%d&quot;</highlight><highlight class="normal">,<sp/>pid);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_pid)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>structure<sp/>by<sp/>PID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>freeReplyObject(reply_pid);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>remove<sp/>the<sp/>corresponding<sp/>key<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref>(</highlight><highlight class="stringliteral">&quot;\tDB:<sp/>\&quot;DEL<sp/>user:%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>user_tmp-&gt;user);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*reply_name<sp/>=(redisReply<sp/>*)<sp/>redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>user:%s&quot;</highlight><highlight class="normal">,<sp/>user_tmp-&gt;user);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_name)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>key<sp/>by<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>free(user_tmp);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>freeReplyObject(reply_name);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remove_by_user(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqm__user" kindref="compound">qm_user</ref><sp/>*user_tmp<sp/>=<sp/>get_user_by_name(name);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>structure<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key_name[64];<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>size<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(key_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key_name),<sp/></highlight><highlight class="stringliteral">&quot;user:%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*reply_name<sp/>=(redisReply<sp/>*)<sp/>redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>key_name);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_name)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>structure<sp/>by<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>freeReplyObject(reply_name);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>remove<sp/>the<sp/>corresponding<sp/>key<sp/>by<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>redisReply<sp/>*reply_pid<sp/>=(redisReply<sp/>*)<sp/>redisCommand(context,<sp/></highlight><highlight class="stringliteral">&quot;DEL<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>user_tmp-&gt;pid);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reply_pid)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>removing<sp/>key<sp/>by<sp/>PID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>freeReplyObject(reply_pid);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="daemon/daemon_utils/common_utils/db/redis.c"/>
  </compounddef>
</doxygen>
