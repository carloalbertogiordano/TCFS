<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="json__tools_8h" kind="file" language="C++">
    <compoundname>json_tools.h</compoundname>
    <includes refid="common_8h" local="yes">../../common.h</includes>
    <includedby refid="redis_8c" local="yes">daemon/daemon_utils/common_utils/db/redis.c</includedby>
    <includedby refid="queue_8h" local="yes">daemon/daemon_utils/queue/queue.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>../../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/json/json_tools.h</label>
        <link refid="json__tools_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>errno.h</label>
      </node>
      <node id="5">
        <label>fcntl.h</label>
      </node>
      <node id="6">
        <label>mqueue.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="3">
        <label>sys/stat.h</label>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>daemon/daemon_utils/common_utils/db/redis.c</label>
        <link refid="redis_8c"/>
      </node>
      <node id="5">
        <label>daemon/daemon_utils/common_utils/db/user_db.c</label>
        <link refid="user__db_8c"/>
      </node>
      <node id="4">
        <label>daemon/daemon_utils/common_utils/db/user_db.h</label>
        <link refid="user__db_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/json/json_tools.h</label>
        <link refid="json__tools_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>daemon/daemon_utils/daemon_tools/tcfs_daemon_tools.c</label>
        <link refid="tcfs__daemon__tools_8c"/>
      </node>
      <node id="7">
        <label>daemon/daemon_utils/daemon_tools/tcfs_daemon_tools.h</label>
        <link refid="tcfs__daemon__tools_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>daemon/daemon_utils/message_handler/message_handler.c</label>
        <link refid="message__handler_8c"/>
      </node>
      <node id="10">
        <label>daemon/daemon_utils/queue/queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="3">
        <label>daemon/daemon_utils/queue/queue.h</label>
        <link refid="queue_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>daemon/tcfs_daemon.c</label>
        <link refid="tcfs__daemon_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="json__tools_8h_1a6d8f7b16cc20fb98cb9a3feda51705be" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * struct_to_json</definition>
        <argsstring>(qm_type qmt, void *q_mess)</argsstring>
        <name>struct_to_json</name>
        <param>
          <type><ref refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4c" kindref="member">qm_type</ref></type>
          <declname>qmt</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>q_mess</declname>
        </param>
        <briefdescription>
<para>Cast a <ref refid="structqm__user" kindref="compound">qm_user</ref>, <ref refid="structqm__shared" kindref="compound">qm_shared</ref> or <ref refid="structqm__broad" kindref="compound">qm_broad</ref> struct to a json string representing the struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qmt</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="common_8h" kindref="compound">common.h</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_mess</parametername>
</parameternamelist>
<parameterdescription>
<para>The structure from which the json will be built </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char* The json string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/json/json_tools.h" line="3" column="19" bodyfile="daemon/daemon_utils/common_utils/json/json_tools.cpp" bodystart="27" bodyend="79" declfile="daemon/daemon_utils/common_utils/json/json_tools.h" declline="3" declcolumn="19"/>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4ca78386e426adecb3fd26350119a3cb7c2" compoundref="common_8h" startline="41">BROADCAST</references>
        <references refid="structqm__broad_1a59096b6c11d45cf9addecfb629b55978" compoundref="common_8h" startline="87">qm_broad::data</references>
        <references refid="structqm__shared_1ac6ce7156e06279b3194acb24e4face96" compoundref="common_8h" startline="76">qm_shared::fd</references>
        <references refid="structqm__shared_1afef3f8b7e15af861010c6e0d66de659e" compoundref="common_8h" startline="78">qm_shared::keypart</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="63">qm_user::pid</references>
        <references refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" compoundref="print__utils_8c" startline="100" endline="111">print_msg</references>
        <references refid="structqm__user_1ad718cfba201afae89c596111bd508d5f" compoundref="common_8h" startline="65">qm_user::pubkey</references>
        <references refid="common_8h_1ad30dd7f5c8fc3f0027bbddc111c652b8aceb7c305772dab23a260960771180df3" compoundref="common_8h" startline="52">REGISTER</references>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4ca9c46e16a4ab019339596acadeefc8c53" compoundref="common_8h" startline="40">SHARED</references>
        <references refid="common_8h_1ad30dd7f5c8fc3f0027bbddc111c652b8ad46a7713a16573956ea43782ac970154" compoundref="common_8h" startline="53">UNREGISTER</references>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4cae2d30a195cee6b2961cc2c23ea4b520b" compoundref="common_8h" startline="39">USER</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="64">qm_user::user</references>
        <references refid="structqm__user_1a4b5bbaaf885c62f44f265eeba461303d" compoundref="common_8h" startline="62">qm_user::user_op</references>
        <references refid="structqm__shared_1af2a26858d769e4a816d0567b51ce0ed5" compoundref="common_8h" startline="77">qm_shared::userlist</references>
        <referencedby refid="queue_8c_1ac51f5d595a9d7376eb0448116c99e1f4" compoundref="queue_8c" startline="66" endline="79">enqueue</referencedby>
        <referencedby refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" compoundref="redis_8c" startline="211" endline="245">insert</referencedby>
      </memberdef>
      <memberdef kind="function" id="json__tools_8h_1a513edf914a6a6141c7892d193d0c1f52" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * string_to_struct</definition>
        <argsstring>(const char *json_string, qm_type *type)</argsstring>
        <name>string_to_struct</name>
        <param>
          <type>const char *</type>
          <declname>json_string</declname>
        </param>
        <param>
          <type><ref refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4c" kindref="member">qm_type</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Cast a json string to a struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json_string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string containing the json that represents the struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the type of the struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void* This is the actual allocated structure, casted to void </para>
</simplesect>
<simplesect kind="note"><para>To cast the returned param to the structure you probably need to use a switch(type) and cast it to a struct </para>
</simplesect>
<simplesect kind="see"><para><ref refid="common_8h" kindref="compound">common.h</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/json/json_tools.h" line="4" column="13" bodyfile="daemon/daemon_utils/common_utils/json/json_tools.cpp" bodystart="92" bodyend="150" declfile="daemon/daemon_utils/common_utils/json/json_tools.h" declline="4" declcolumn="13"/>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4ca78386e426adecb3fd26350119a3cb7c2" compoundref="common_8h" startline="41">BROADCAST</references>
        <references refid="structqm__broad_1a59096b6c11d45cf9addecfb629b55978" compoundref="common_8h" startline="87">qm_broad::data</references>
        <references refid="structqm__shared_1ac6ce7156e06279b3194acb24e4face96" compoundref="common_8h" startline="76">qm_shared::fd</references>
        <references refid="structqm__shared_1afef3f8b7e15af861010c6e0d66de659e" compoundref="common_8h" startline="78">qm_shared::keypart</references>
        <references refid="structqm__user_1aa69546c3a6a2124be9f964329c951a84" compoundref="common_8h" startline="63">qm_user::pid</references>
        <references refid="structqm__user_1ad718cfba201afae89c596111bd508d5f" compoundref="common_8h" startline="65">qm_user::pubkey</references>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4ca84fb91aba870f3033713d9e4b638f006" compoundref="common_8h" startline="42">QM_TYPE_UNDEFINED</references>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4ca9c46e16a4ab019339596acadeefc8c53" compoundref="common_8h" startline="40">SHARED</references>
        <references refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4cae2d30a195cee6b2961cc2c23ea4b520b" compoundref="common_8h" startline="39">USER</references>
        <references refid="structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4" compoundref="common_8h" startline="64">qm_user::user</references>
        <references refid="structqm__user_1a4b5bbaaf885c62f44f265eeba461303d" compoundref="common_8h" startline="62">qm_user::user_op</references>
        <references refid="structqm__shared_1af2a26858d769e4a816d0567b51ce0ed5" compoundref="common_8h" startline="77">qm_shared::userlist</references>
        <referencedby refid="queue_8c_1a1874b6e320d1e54d571c89766d046602" compoundref="queue_8c" startline="94" endline="110">dequeue</referencedby>
        <referencedby refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" compoundref="redis_8c" startline="104" endline="114">json_to_qm_user</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../../common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="json__tools_8cpp_1abe22bc6ace23fc8f7e186a824784765f" kindref="member">struct_to_json</ref><sp/>(<ref refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4c" kindref="member">qm_type</ref><sp/>qmt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*q_mess);</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="json__tools_8cpp_1a513edf914a6a6141c7892d193d0c1f52" kindref="member">string_to_struct</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json_string,<sp/><ref refid="common_8h_1ab2c144fca6129807a9fe4bad66970c4c" kindref="member">qm_type</ref><sp/>*type);</highlight></codeline>
    </programlisting>
    <location file="daemon/daemon_utils/common_utils/json/json_tools.h"/>
  </compounddef>
</doxygen>
