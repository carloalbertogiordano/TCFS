<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="print__utils_8c" kind="file" language="C++">
    <compoundname>print_utils.c</compoundname>
    <includes refid="print__utils_8h" local="yes">print_utils.h</includes>
    <incdepgraph>
      <node id="1">
        <label>daemon/daemon_utils/common_utils/print/print_utils.c</label>
        <link refid="print__utils_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>print_utils.h</label>
        <link refid="print__utils_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
      <node id="7">
        <label>systemd/sd-journal.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="print__utils_8c_1a887e8bdd9deeb0866ce86067cdba5fcc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cleared</definition>
        <argsstring></argsstring>
        <name>cleared</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>If it is 0 the log file will be cleared, if is 1 the log file will we open as append. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/print/print_utils.c" line="14" column="5" bodyfile="daemon/daemon_utils/common_utils/print/print_utils.c" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_err</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>print_err</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Format and print data as an error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *format the string that will formatted and printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[ARGUMENTS]...</parametername>
</parameternamelist>
<parameterdescription>
<para>Print optional ARGUMENT(s) according to format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
<simplesect kind="note"><para>Will also log using systemD </para>
</simplesect>
<simplesect kind="note"><para>"ERROR=" will be prepended to format </para>
</simplesect>
<simplesect kind="note"><para>"Err_Numebr:d" will be appended to the formatted string describing the error number </para>
</simplesect>
<simplesect kind="note"><para>after Err_Number "-&gt; s" will be appended printing the std-error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/print/print_utils.c" line="79" column="1" bodyfile="daemon/daemon_utils/common_utils/print/print_utils.c" bodystart="79" bodyend="91"/>
        <referencedby refid="queue_8c_1a1874b6e320d1e54d571c89766d046602" compoundref="queue_8c" startline="95" endline="111">dequeue</referencedby>
        <referencedby refid="queue_8c_1ac51f5d595a9d7376eb0448116c99e1f4" compoundref="queue_8c" startline="67" endline="80">enqueue</referencedby>
        <referencedby refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</referencedby>
        <referencedby refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</referencedby>
        <referencedby refid="redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea" compoundref="redis_8c" startline="72" endline="85">init_context</referencedby>
        <referencedby refid="queue_8c_1a6997b2cacf3d2e49bc848d0274e24b13" compoundref="queue_8c" startline="27" endline="52">init_queue</referencedby>
        <referencedby refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" compoundref="redis_8c" startline="211" endline="245">insert</referencedby>
        <referencedby refid="tcfs__daemon_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="tcfs__daemon_8c" startline="56" endline="150">main</referencedby>
        <referencedby refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" compoundref="redis_8c" startline="256" endline="281">remove_by_pid</referencedby>
        <referencedby refid="redis_8c_1a2678c0575f2b6c944fd261255aeaebff" compoundref="redis_8c" startline="292" endline="316">remove_by_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_msg</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>print_msg</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Format and print data as a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *format the string that will formatted and printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[ARGUMENTS]...</parametername>
</parameternamelist>
<parameterdescription>
<para>Print optional ARGUMENT(s) according to format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
<simplesect kind="note"><para>Will also log using systemD </para>
</simplesect>
<simplesect kind="note"><para>"MESSAGE=" will be prepended to format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/print/print_utils.c" line="101" column="1" bodyfile="daemon/daemon_utils/common_utils/print/print_utils.c" bodystart="101" bodyend="112"/>
        <referencedby refid="queue_8c_1a1874b6e320d1e54d571c89766d046602" compoundref="queue_8c" startline="95" endline="111">dequeue</referencedby>
        <referencedby refid="user__db_8c_1ab57ffd0f0b23a847e766e762906af22e" compoundref="user__db_8c" startline="45" endline="49">disconnect_db</referencedby>
        <referencedby refid="queue_8c_1ac51f5d595a9d7376eb0448116c99e1f4" compoundref="queue_8c" startline="67" endline="80">enqueue</referencedby>
        <referencedby refid="redis_8c_1a73711c0a9d0060337409d15dc44f5ad1" compoundref="redis_8c" startline="165" endline="200">get_user_by_name</referencedby>
        <referencedby refid="redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9" compoundref="redis_8c" startline="122" endline="157">get_user_by_pid</referencedby>
        <referencedby refid="tcfs__daemon_8c_1a93d1097e4dd3c0735da3da2e89410090" compoundref="tcfs__daemon_8c" startline="40" endline="45">handle_termination</referencedby>
        <referencedby refid="queue_8c_1a6997b2cacf3d2e49bc848d0274e24b13" compoundref="queue_8c" startline="27" endline="52">init_queue</referencedby>
        <referencedby refid="redis_8c_1ac9878ee09b53700eb08c1f175873c30b" compoundref="redis_8c" startline="211" endline="245">insert</referencedby>
        <referencedby refid="redis_8c_1a8e6e1687d6351741ac3e353d23425f71" compoundref="redis_8c" startline="104" endline="114">json_to_qm_user</referencedby>
        <referencedby refid="tcfs__daemon_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="tcfs__daemon_8c" startline="56" endline="150">main</referencedby>
        <referencedby refid="redis_8c_1a7b5eb746d92734b57a71ce552363283d" compoundref="redis_8c" startline="42" endline="64">print_all_keys</referencedby>
        <referencedby refid="user__db_8c_1a2ae8a82033440194ad80949cd4493971" compoundref="user__db_8c" startline="15" endline="24">register_user</referencedby>
        <referencedby refid="redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216" compoundref="redis_8c" startline="256" endline="281">remove_by_pid</referencedby>
        <referencedby refid="user__db_8c_1a6e2fcf4aa637e61f69b1b601981663cf" compoundref="user__db_8c" startline="31" endline="36">unregister_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="print__utils_8c_1ae39065df491deead21b0375a8ce1a4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_warn</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>print_warn</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Format and print data as a waring. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *format the string that will formatted and printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[ARGUMENTS]...</parametername>
</parameternamelist>
<parameterdescription>
<para>Print optional ARGUMENT(s) according to format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
<simplesect kind="note"><para>Will also log using systemD </para>
</simplesect>
<simplesect kind="note"><para>"WARNING=" will be prepended to format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/print/print_utils.c" line="123" column="1" bodyfile="daemon/daemon_utils/common_utils/print/print_utils.c" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="print__utils_8c_1ad808dc3fd801407dcc907bdea848a47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_debug</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>print_debug</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Format and print data as a debug. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *format the string that will formatted and printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[ARGUMENTS]...</parametername>
</parameternamelist>
<parameterdescription>
<para>Print optional ARGUMENT(s) according to format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
<simplesect kind="note"><para>Will also log using systemD </para>
</simplesect>
<simplesect kind="note"><para>"DEBUG=" will be prepended to format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="daemon/daemon_utils/common_utils/print/print_utils.c" line="145" column="1" bodyfile="daemon/daemon_utils/common_utils/print/print_utils.c" bodystart="145" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This file defines some QoL functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;print_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="print__utils_8c_1a887e8bdd9deeb0866ce86067cdba5fcc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="print__utils_8c_1a887e8bdd9deeb0866ce86067cdba5fcc" kindref="member">cleared</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">log_message<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*log)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>log);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>of<sp/>the<sp/>log<sp/>folder<sp/>and<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*logFolder<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/var/log/tcfs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*logFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/var/log/tcfs/log.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>folder<sp/>exists,<sp/>otherwise<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>(logFolder,<sp/>&amp;st)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mkdir<sp/>(logFolder,<sp/>0700);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>FILE<sp/>*file;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="print__utils_8c_1a887e8bdd9deeb0866ce86067cdba5fcc" kindref="member">cleared</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print__utils_8c_1a887e8bdd9deeb0866ce86067cdba5fcc" kindref="member">cleared</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>fopen<sp/>(logFile,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>fopen<sp/>(logFile,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>log<sp/>file<sp/>in<sp/>append<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>the<sp/>log<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>message<sp/>to<sp/>the<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>fprintf<sp/>(file,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>log);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>fclose<sp/>(file);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" refkind="member"><highlight class="normal"><ref refid="print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded" kindref="member">print_err</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>va_start<sp/>(args,<sp/>format);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[1024];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>vsnprintf<sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>va_end<sp/>(args);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>log_message<sp/>(buffer);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>sd_journal_print<sp/>(LOG_ERR,<sp/></highlight><highlight class="stringliteral">&quot;ERROR=%s<sp/>Err_Number:%d<sp/>-&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>errno,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" refkind="member"><highlight class="normal"><ref refid="print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0" kindref="member">print_msg</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>va_start<sp/>(args,<sp/>format);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[1024];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>vsnprintf<sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>va_end<sp/>(args);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>log_message<sp/>(buffer);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>sd_journal_send<sp/>(</highlight><highlight class="stringliteral">&quot;MESSAGE=%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>NULL);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="print__utils_8c_1ae39065df491deead21b0375a8ce1a4d6" refkind="member"><highlight class="normal"><ref refid="print__utils_8c_1ae39065df491deead21b0375a8ce1a4d6" kindref="member">print_warn</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>va_start<sp/>(args,<sp/>format);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[1024];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>vsnprintf<sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>va_end<sp/>(args);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>log_message<sp/>(buffer);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>sd_journal_print<sp/>(LOG_WARNING,<sp/></highlight><highlight class="stringliteral">&quot;WARNING=%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>NULL);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="print__utils_8c_1ad808dc3fd801407dcc907bdea848a47e" refkind="member"><highlight class="normal"><ref refid="print__utils_8c_1ad808dc3fd801407dcc907bdea848a47e" kindref="member">print_debug</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>va_start<sp/>(args,<sp/>format);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[1024];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>vsnprintf<sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>va_end<sp/>(args);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>log_message<sp/>(buffer);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>sd_journal_print<sp/>(LOG_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG=%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>NULL);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="daemon/daemon_utils/common_utils/print/print_utils.c"/>
  </compounddef>
</doxygen>
