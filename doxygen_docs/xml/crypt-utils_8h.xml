<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="crypt-utils_8h" kind="file" language="C++">
    <compoundname>crypt-utils.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">openssl/aes.h</includes>
    <includes local="no">openssl/bio.h</includes>
    <includes local="no">openssl/buffer.h</includes>
    <includes local="no">openssl/evp.h</includes>
    <includes local="no">openssl/rand.h</includes>
    <includes refid="tcfs__utils_8h" local="yes">../tcfs_utils/tcfs_utils.h</includes>
    <includedby refid="tcfs_8c" local="yes">userspace-module/tcfs.c</includedby>
    <includedby refid="crypt-utils_8c" local="yes">userspace-module/utils/crypt-utils/crypt-utils.c</includedby>
    <includedby refid="tcfs__utils_8c" local="yes">userspace-module/utils/tcfs_utils/tcfs_utils.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>userspace-module/utils/crypt-utils/crypt-utils.h</label>
        <link refid="crypt-utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../tcfs_utils/tcfs_utils.h</label>
        <link refid="tcfs__utils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>errno.h</label>
      </node>
      <node id="7">
        <label>openssl/aes.h</label>
      </node>
      <node id="8">
        <label>openssl/bio.h</label>
      </node>
      <node id="9">
        <label>openssl/buffer.h</label>
      </node>
      <node id="10">
        <label>openssl/evp.h</label>
      </node>
      <node id="11">
        <label>openssl/rand.h</label>
      </node>
      <node id="14">
        <label>pwd.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>sys/mman.h</label>
      </node>
      <node id="15">
        <label>sys/xattr.h</label>
      </node>
      <node id="6">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>userspace-module/tcfs.c</label>
        <link refid="tcfs_8c"/>
      </node>
      <node id="3">
        <label>userspace-module/utils/crypt-utils/crypt-utils.c</label>
        <link refid="crypt-utils_8c"/>
      </node>
      <node id="1">
        <label>userspace-module/utils/crypt-utils/crypt-utils.h</label>
        <link refid="crypt-utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>userspace-module/utils/tcfs_utils/tcfs_utils.c</label>
        <link refid="tcfs__utils_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="crypt-utils_8h_1afcf795f5a96fd55561abe69f56224630" prot="public" static="no">
        <name>BLOCKSIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="15" column="9" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" prot="public" static="no">
        <name>ENCRYPT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Signifies that the selected action is encryption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="20" column="9" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" prot="public" static="no">
        <name>DECRYPT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Signifies that the selected action is decryption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="25" column="9" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="crypt-utils_8h_1a94b5b388b3f00982ccee72b192077e76" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_crypt</definition>
        <argsstring>(FILE *in, FILE *out, int action, unsigned char *key_str)</argsstring>
        <name>do_crypt</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>key_str</declname>
        </param>
        <briefdescription>
<para>High level function interface for performing AES encryption on FILE pointers Uses OpenSSL libcrypto EVP API <linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>By Andy Sayler (www.andysayler.com) <linebreak/>
 Created 04/17/12 <linebreak/>
 </para>
</simplesect>
<simplesect kind="author"><para>Modified 18/10/23 by [Carlo Alberto Giordano] <linebreak/>
</para>
</simplesect>
Derived from OpenSSL.org EVP_Encrypt_* Manpage Examples <linebreak/>
 <ulink url="http://www.openssl.org/docs/crypto/EVP_EncryptInit.html#EXAMPLES">http://www.openssl.org/docs/crypto/EVP_EncryptInit.html#EXAMPLES</ulink> <linebreak/>
 With additional information from Saju Pillai&apos;s OpenSSL AES Example <linebreak/>
 <ulink url="http://saju.net.in/blog/?p=36">http://saju.net.in/blog/?p=36</ulink> <linebreak/>
 <ulink url="http://saju.net.in/code/misc/openssl_aes.c.txt">http://saju.net.in/code/misc/openssl_aes.c.txt</ulink> <linebreak/>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines if the action to do on the input file should be of encryption or decryption. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" kindref="member">ENCRYPT</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" kindref="member">DECRYPT</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key_str</parametername>
</parameternamelist>
<parameterdescription>
<para>The key that must be AES 256 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by print_err() function, </para>
</simplesect>
<simplesect kind="see"><para>print_err </para>
</simplesect>
<simplesect kind="note"><para>This function cyphers using AES 256 CBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="27" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="54" bodyend="157" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="27" declcolumn="12"/>
        <references refid="crypt-utils_8c_1afcf795f5a96fd55561abe69f56224630" compoundref="crypt-utils_8c" startline="12">BLOCKSIZE</references>
        <references refid="crypt-utils_8c_1ad7bb30dbf5882fdf05331918e8a0cc84" compoundref="crypt-utils_8c" startline="19">IV_SIZE</references>
        <references refid="crypt-utils_8c_1a2d996237e082b78b41771b5aa1a6eae1" compoundref="crypt-utils_8c" startline="25">KEY_SIZE</references>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="357" endline="436">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="439" endline="522">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a8845f5705eaafda836aac91d5881876f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_key</definition>
        <argsstring>(unsigned char *destination)</argsstring>
        <name>generate_key</name>
        <param>
          <type>unsigned char *</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Generate a new AES 256 key for a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the string in which the generated key will be saved. If an error occurs it will be set to NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="29" column="6" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="232" bodyend="263" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="29" declcolumn="6"/>
        <references refid="crypt-utils_8c_1a53b5762e00daafcc3644c03e2fd9b2c4" compoundref="crypt-utils_8c" startline="199" endline="223">add_entropy</references>
        <references refid="crypt-utils_8c_1aa377df016f593aa771013264acc9b86b" compoundref="crypt-utils_8c" startline="169" endline="188">check_entropy</references>
        <references refid="crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97" compoundref="crypt-utils_8c" startline="360" endline="367">is_valid_key</references>
        <references refid="tcfs__utils_8c_1a8c1c24299a2b01f6157b051cb56ebc52" compoundref="tcfs__utils_8c" startline="170" endline="178">print_aes_key</references>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="553" endline="617">tcfs_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a8bf9483dae26e9c0a1c45d77b8f1dce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * encrypt_string</definition>
        <argsstring>(unsigned char *plaintext, const char *key, int *encrypted_len)</argsstring>
        <name>encrypt_string</name>
        <param>
          <type>unsigned char *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>encrypted_len</declname>
          <defname>encrypted_key_len</defname>
        </param>
        <briefdescription>
<para>Encrypt the *plaintext string using a AES 256 key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the string to encrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The AES 256 KEY </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encrypted_len</parametername>
</parameternamelist>
<parameterdescription>
<para>This will be set to the encrypted string length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unsigned char * The encrypted string will be allocated and then returned </para>
</simplesect>
<simplesect kind="note"><para>After the use remember to free the result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="31" column="15" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="275" bodyend="314" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="31" declcolumn="15"/>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="553" endline="617">tcfs_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a02ee5ac64d2d2d441edcca915e480503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * decrypt_string</definition>
        <argsstring>(unsigned char *base64_ciphertext, const char *key)</argsstring>
        <name>decrypt_string</name>
        <param>
          <type>unsigned char *</type>
          <declname>base64_ciphertext</declname>
          <defname>ciphertext</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Decrypt the *ciphertext string using a AES 256 key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the string to decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The AES 256 KEY </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unsigned char * The plaintext string will be allocated and then returned </para>
</simplesect>
<simplesect kind="note"><para>After the use remember to free the result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="34" column="15" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="325" bodyend="351" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="34" declcolumn="15"/>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="357" endline="436">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="439" endline="522">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a36c2342a7c47b8f41bf628bf473b1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_valid_key</definition>
        <argsstring>(const unsigned char *key)</argsstring>
        <name>is_valid_key</name>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Check if a given key is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to validate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by print_err() function, </para>
</simplesect>
<simplesect kind="see"><para>print_err </para>
</simplesect>
<simplesect kind="note"><para>This function only checks for key length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="37" column="5" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="360" bodyend="367" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="37" declcolumn="5"/>
        <referencedby refid="crypt-utils_8c_1a8845f5705eaafda836aac91d5881876f" compoundref="crypt-utils_8c" startline="232" endline="263">generate_key</referencedby>
        <referencedby refid="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="tcfs_8c" startline="768" endline="824">main</referencedby>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="553" endline="617">tcfs_create</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/aes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rand.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../tcfs_utils/tcfs_utils.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//TODO:<sp/>Remove,<sp/>for<sp/>debugging<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="crypt-utils_8h_1afcf795f5a96fd55561abe69f56224630" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLOCKSIZE<sp/>1024</highlight></codeline>
<codeline lineno="20" refid="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENCRYPT<sp/>1</highlight></codeline>
<codeline lineno="25" refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECRYPT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crypt-utils_8h_1a94b5b388b3f00982ccee72b192077e76" kindref="member">do_crypt</ref><sp/>(FILE<sp/>*in,<sp/>FILE<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_str);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="crypt-utils_8h_1a8845f5705eaafda836aac91d5881876f" kindref="member">generate_key</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destination);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a8bf9483dae26e9c0a1c45d77b8f1dce8" kindref="member">encrypt_string</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*plaintext,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*encrypted_len);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a02ee5ac64d2d2d441edcca915e480503" kindref="member">decrypt_string</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base64_ciphertext,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crypt-utils_8h_1a36c2342a7c47b8f41bf628bf473b1c97" kindref="member">is_valid_key</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="40"><highlight class="comment">int<sp/>rebuild_key(char<sp/>*key,<sp/>char<sp/>*cert,<sp/>char<sp/>*dest);</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*/</highlight></codeline>
    </programlisting>
    <location file="userspace-module/utils/crypt-utils/crypt-utils.h"/>
  </compounddef>
</doxygen>
