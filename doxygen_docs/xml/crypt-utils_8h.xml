<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="crypt-utils_8h" kind="file" language="C++">
    <compoundname>crypt-utils.h</compoundname>
    <includes local="no">ctype.h</includes>
    <includes local="no">libgen.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">openssl/aes.h</includes>
    <includes local="no">openssl/bio.h</includes>
    <includes local="no">openssl/buffer.h</includes>
    <includes local="no">openssl/evp.h</includes>
    <includes local="no">openssl/rand.h</includes>
    <includes refid="tcfs__utils_8h" local="yes">../tcfs_utils/tcfs_utils.h</includes>
    <includedby refid="tcfs_8c" local="yes">userspace-module/tcfs.c</includedby>
    <includedby refid="crypt-utils_8c" local="yes">userspace-module/utils/crypt-utils/crypt-utils.c</includedby>
    <includedby refid="tcfs__utils_8c" local="yes">userspace-module/utils/tcfs_utils/tcfs_utils.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>userspace-module/utils/crypt-utils/crypt-utils.h</label>
        <link refid="crypt-utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../tcfs_utils/tcfs_utils.h</label>
        <link refid="tcfs__utils_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ctype.h</label>
      </node>
      <node id="15">
        <label>errno.h</label>
      </node>
      <node id="3">
        <label>libgen.h</label>
      </node>
      <node id="9">
        <label>openssl/aes.h</label>
      </node>
      <node id="10">
        <label>openssl/bio.h</label>
      </node>
      <node id="11">
        <label>openssl/buffer.h</label>
      </node>
      <node id="12">
        <label>openssl/evp.h</label>
      </node>
      <node id="13">
        <label>openssl/rand.h</label>
      </node>
      <node id="16">
        <label>pwd.h</label>
      </node>
      <node id="18">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>sys/mman.h</label>
      </node>
      <node id="17">
        <label>sys/xattr.h</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>userspace-module/tcfs.c</label>
        <link refid="tcfs_8c"/>
      </node>
      <node id="3">
        <label>userspace-module/utils/crypt-utils/crypt-utils.c</label>
        <link refid="crypt-utils_8c"/>
      </node>
      <node id="1">
        <label>userspace-module/utils/crypt-utils/crypt-utils.h</label>
        <link refid="crypt-utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>userspace-module/utils/tcfs_utils/tcfs_utils.c</label>
        <link refid="tcfs__utils_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" prot="public" static="no">
        <name>ENCRYPT</name>
        <initializer>true</initializer>
        <briefdescription>
<para>Signifies that the selected action is encryption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="27" column="9" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" prot="public" static="no">
        <name>DECRYPT</name>
        <initializer>false</initializer>
        <briefdescription>
<para>Signifies that the selected action is decryption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="32" column="9" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.h" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="crypt-utils_8h_1a94b5b388b3f00982ccee72b192077e76" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_crypt</definition>
        <argsstring>(FILE *in, FILE *out, int action, unsigned char *key_str)</argsstring>
        <name>do_crypt</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>key_str</declname>
        </param>
        <briefdescription>
<para>High level function interface for performing AES encryption on FILE pointers Uses OpenSSL libcrypto EVP API <linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>By Andy Sayler (www.andysayler.com) <linebreak/>
 Created 04/17/12 <linebreak/>
 </para>
</simplesect>
<simplesect kind="author"><para>Modified 18/10/23 by [Carlo Alberto Giordano] <linebreak/>
</para>
</simplesect>
Derived from OpenSSL.org EVP_Encrypt_* Manpage Examples <linebreak/>
 <ulink url="http://www.openssl.org/docs/crypto/EVP_EncryptInit.html#EXAMPLES">http://www.openssl.org/docs/crypto/EVP_EncryptInit.html#EXAMPLES</ulink> <linebreak/>
 With additional information from Saju Pillai&apos;s OpenSSL AES Example <linebreak/>
 <ulink url="http://saju.net.in/blog/?p=36">http://saju.net.in/blog/?p=36</ulink> <linebreak/>
 <ulink url="http://saju.net.in/code/misc/openssl_aes.c.txt">http://saju.net.in/code/misc/openssl_aes.c.txt</ulink> <linebreak/>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines if the action to do on the input file should be of encryption or decryption. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" kindref="member">ENCRYPT</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" kindref="member">DECRYPT</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key_str</parametername>
</parameternamelist>
<parameterdescription>
<para>The key that must be AES 256 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by print_err() function, </para>
</simplesect>
<simplesect kind="see"><para>print_err </para>
</simplesect>
<simplesect kind="note"><para>This function cyphers using AES 256 CBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="34" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="63" bodyend="164" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="34" declcolumn="12"/>
        <references refid="crypt-utils_8c_1afcf795f5a96fd55561abe69f56224630" compoundref="crypt-utils_8c" startline="21">BLOCKSIZE</references>
        <references refid="crypt-utils_8c_1ad7bb30dbf5882fdf05331918e8a0cc84" compoundref="crypt-utils_8c" startline="28">IV_SIZE</references>
        <references refid="crypt-utils_8c_1a2d996237e082b78b41771b5aa1a6eae1" compoundref="crypt-utils_8c" startline="34">KEY_SIZE</references>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a8845f5705eaafda836aac91d5881876f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_key</definition>
        <argsstring>(unsigned char *destination)</argsstring>
        <name>generate_key</name>
        <param>
          <type>unsigned char *</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Generate a new AES 256 key for a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the string in which the generated key will be saved. If an error occurs it will be set to NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="36" column="6" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="235" bodyend="266" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="36" declcolumn="6"/>
        <references refid="crypt-utils_8c_1a53b5762e00daafcc3644c03e2fd9b2c4" compoundref="crypt-utils_8c" startline="202" endline="226">add_entropy</references>
        <references refid="crypt-utils_8c_1aa377df016f593aa771013264acc9b86b" compoundref="crypt-utils_8c" startline="174" endline="193">check_entropy</references>
        <references refid="crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97" compoundref="crypt-utils_8c" startline="388" endline="395">is_valid_key</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs__utils_8c_1a8c1c24299a2b01f6157b051cb56ebc52" compoundref="tcfs__utils_8c" startline="165" endline="173">print_aes_key</references>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a8bf9483dae26e9c0a1c45d77b8f1dce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * encrypt_string</definition>
        <argsstring>(unsigned char *plaintext, const char *key, int *encrypted_len)</argsstring>
        <name>encrypt_string</name>
        <param>
          <type>unsigned char *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>encrypted_len</declname>
          <defname>encrypted_key_len</defname>
        </param>
        <briefdescription>
<para>Encrypt the *plaintext string using a AES 256 key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the string to encrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The AES 256 KEY </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encrypted_len</parametername>
</parameternamelist>
<parameterdescription>
<para>This will be set to the encrypted string length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unsigned char * The encrypted string will be allocated and then returned </para>
</simplesect>
<simplesect kind="note"><para>After the use remember to free the result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="38" column="15" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="278" bodyend="319" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="38" declcolumn="15"/>
        <referencedby refid="crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e" compoundref="crypt-utils_8c" startline="398" endline="403">encrypt_file_name_with_hex</referencedby>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a02ee5ac64d2d2d441edcca915e480503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * decrypt_string</definition>
        <argsstring>(unsigned char *base64_ciphertext, const char *key)</argsstring>
        <name>decrypt_string</name>
        <param>
          <type>unsigned char *</type>
          <declname>base64_ciphertext</declname>
          <defname>ciphertext</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Decrypt the *ciphertext string using a AES 256 key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the string to decrypt in HEX format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The AES 256 KEY </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unsigned char * The plaintext string will be allocated and then returned </para>
</simplesect>
<simplesect kind="note"><para>After the use remember to free the result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="41" column="15" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="330" bodyend="379" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="41" declcolumn="15"/>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <referencedby refid="crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34" compoundref="crypt-utils_8c" startline="406" endline="410">decrypt_file_name_with_hex</referencedby>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a36c2342a7c47b8f41bf628bf473b1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_valid_key</definition>
        <argsstring>(const unsigned char *key)</argsstring>
        <name>is_valid_key</name>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Check if a given key is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to validate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise. An error might be printen by print_err() function, </para>
</simplesect>
<simplesect kind="see"><para>print_err </para>
</simplesect>
<simplesect kind="note"><para>This function only checks for key length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="44" column="5" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="388" bodyend="395" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="44" declcolumn="5"/>
        <referencedby refid="crypt-utils_8c_1a8845f5705eaafda836aac91d5881876f" compoundref="crypt-utils_8c" startline="235" endline="266">generate_key</referencedby>
        <referencedby refid="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="tcfs_8c" startline="1412" endline="1461">main</referencedby>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1aa4a7facde8c6f63a7225c07e92232b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * encrypt_file_name_with_hex</definition>
        <argsstring>(const char *file, const char *key)</argsstring>
        <name>encrypt_file_name_with_hex</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="46" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="398" bodyend="403" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="46" declcolumn="12"/>
        <references refid="crypt-utils_8c_1aa926098a8843cf0ab6bd7eb8b3bbd2e6" compoundref="crypt-utils_8c" startline="278" endline="319">encrypt_string</references>
        <references refid="tcfs__utils_8c_1a819d57d5c053a25772508a943d1bcc48" compoundref="tcfs__utils_8c" startline="182" endline="209">string_to_hex</references>
        <referencedby refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</referencedby>
        <referencedby refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a3b003481e5c188ac1d6f63e09e6f3a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * decrypt_file_name_with_hex</definition>
        <argsstring>(const char *enc_file, const char *key)</argsstring>
        <name>decrypt_file_name_with_hex</name>
        <param>
          <type>const char *</type>
          <declname>enc_file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="48" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="406" bodyend="410" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="48" declcolumn="12"/>
        <references refid="crypt-utils_8c_1a22f528907ee4f078e333501b747d5435" compoundref="crypt-utils_8c" startline="330" endline="379">decrypt_string</references>
        <references refid="tcfs__utils_8c_1a6de1cb8448198da94080ad32d7e4eabf" compoundref="tcfs__utils_8c" startline="218" endline="251">hex_to_string</references>
        <referencedby refid="crypt-utils_8c_1a1899c23a523d11ed1cb5601eabdb023d" compoundref="crypt-utils_8c" startline="645" endline="747">decrypt_path</referencedby>
        <referencedby refid="crypt-utils_8c_1a373f8aedbcd8b6ce22fe7bdfeb2961c2" compoundref="crypt-utils_8c" startline="759" endline="862">decrypt_path_and_filename</referencedby>
        <referencedby refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" compoundref="tcfs_8c" startline="196" endline="273">tcfs_readdir</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1ad9b10366ade9f2129ec2613fdc76df80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * encrypt_path</definition>
        <argsstring>(const char *path, const char *key)</argsstring>
        <name>encrypt_path</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Encrypts each part of the given path using a specified key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The input path to be encrypted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A dynamically allocated string containing the encrypted path. It is the responsibility of the caller to free this memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="50" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="420" bodyend="521" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="50" declcolumn="12"/>
        <references refid="crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e" compoundref="crypt-utils_8c" startline="398" endline="403">encrypt_file_name_with_hex</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <referencedby refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" compoundref="tcfs_8c" startline="132" endline="149">tcfs_access</referencedby>
        <referencedby refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" compoundref="tcfs_8c" startline="497" endline="516">tcfs_chmod</referencedby>
        <referencedby refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" compoundref="tcfs_8c" startline="530" endline="546">tcfs_chown</referencedby>
        <referencedby refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" compoundref="tcfs_8c" startline="99" endline="120">tcfs_getattr</referencedby>
        <referencedby refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" compoundref="tcfs_8c" startline="324" endline="340">tcfs_mkdir</referencedby>
        <referencedby refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" compoundref="tcfs_8c" startline="286" endline="312">tcfs_mknod</referencedby>
        <referencedby refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" compoundref="tcfs_8c" startline="651" endline="670">tcfs_open</referencedby>
        <referencedby refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" compoundref="tcfs_8c" startline="67" endline="86">tcfs_opendir</referencedby>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" compoundref="tcfs_8c" startline="196" endline="273">tcfs_readdir</referencedby>
        <referencedby refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" compoundref="tcfs_8c" startline="162" endline="180">tcfs_readlink</referencedby>
        <referencedby refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" compoundref="tcfs_8c" startline="377" endline="392">tcfs_rmdir</referencedby>
        <referencedby refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" compoundref="tcfs_8c" startline="979" endline="992">tcfs_setxattr</referencedby>
        <referencedby refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" compoundref="tcfs_8c" startline="559" endline="577">tcfs_truncate</referencedby>
        <referencedby refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" compoundref="tcfs_8c" startline="351" endline="366">tcfs_unlink</referencedby>
        <referencedby refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" compoundref="tcfs_8c" startline="612" endline="638">tcfs_utimens</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a5c45db4d3db3ef274fb6356e1a95e644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * encrypt_path_and_filename</definition>
        <argsstring>(const char *path, const char *key)</argsstring>
        <name>encrypt_path_and_filename</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Encrypts the given filename with its path using a specified key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The input path to be encrypted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A dynamically allocated string containing the encrypted path with the encrypted filename. It is the responsibility of the caller to free this memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="52" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="532" bodyend="635" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="52" declcolumn="12"/>
        <references refid="crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e" compoundref="crypt-utils_8c" startline="398" endline="403">encrypt_file_name_with_hex</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
        <referencedby refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" compoundref="tcfs_8c" startline="1140" endline="1161">tcfs_fsync</referencedby>
        <referencedby refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" compoundref="tcfs_8c" startline="1199" endline="1215">tcfs_getxattr</referencedby>
        <referencedby refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" compoundref="tcfs_8c" startline="465" endline="484">tcfs_link</referencedby>
        <referencedby refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" compoundref="tcfs_8c" startline="1229" endline="1243">tcfs_listxattr</referencedby>
        <referencedby refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" compoundref="tcfs_8c" startline="1111" endline="1127">tcfs_release</referencedby>
        <referencedby refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" compoundref="tcfs_8c" startline="1273" endline="1287">tcfs_removexattr</referencedby>
        <referencedby refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" compoundref="tcfs_8c" startline="436" endline="453">tcfs_rename</referencedby>
        <referencedby refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" compoundref="tcfs_8c" startline="404" endline="423">tcfs_symlink</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a1899c23a523d11ed1cb5601eabdb023d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * decrypt_path</definition>
        <argsstring>(const char *encrypted_path, const char *key)</argsstring>
        <name>decrypt_path</name>
        <param>
          <type>const char *</type>
          <declname>encrypted_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Decrypts each part of the given encrypted path using a specified key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encrypted_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The input encrypted path to be decrypted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The decryption key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A dynamically allocated string containing the decrypted path. It is the responsibility of the caller to free this memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="54" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="645" bodyend="747" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="54" declcolumn="12"/>
        <references refid="crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34" compoundref="crypt-utils_8c" startline="406" endline="410">decrypt_file_name_with_hex</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <referencedby refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" compoundref="tcfs_8c" startline="196" endline="273">tcfs_readdir</referencedby>
      </memberdef>
      <memberdef kind="function" id="crypt-utils_8h_1a373f8aedbcd8b6ce22fe7bdfeb2961c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * decrypt_path_and_filename</definition>
        <argsstring>(const char *encrypted_path, const char *key)</argsstring>
        <name>decrypt_path_and_filename</name>
        <param>
          <type>const char *</type>
          <declname>encrypted_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Decrypts the given encrypted filename with its path using a specified key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encrypted_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The input encrypted path to be decrypted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The decryption key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A dynamically allocated string containing the decrypted path with the decrypted filename. It is the responsibility of the caller to free this memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/utils/crypt-utils/crypt-utils.h" line="56" column="12" bodyfile="userspace-module/utils/crypt-utils/crypt-utils.c" bodystart="759" bodyend="862" declfile="userspace-module/utils/crypt-utils/crypt-utils.h" declline="56" declcolumn="12"/>
        <references refid="crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34" compoundref="crypt-utils_8c" startline="406" endline="410">decrypt_file_name_with_hex</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Header file for <ref refid="crypt-utils_8c" kindref="compound">crypt-utils.c</ref>, which provides functions for encryption and decryption using AES-256, as well as other utility functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libgen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/aes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rand.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../tcfs_utils/tcfs_utils.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//TODO:<sp/>Remove,<sp/>for<sp/>debugging<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENCRYPT<sp/>true</highlight></codeline>
<codeline lineno="32" refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECRYPT<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crypt-utils_8h_1a94b5b388b3f00982ccee72b192077e76" kindref="member">do_crypt</ref><sp/>(FILE<sp/>*in,<sp/>FILE<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_str);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="crypt-utils_8h_1a8845f5705eaafda836aac91d5881876f" kindref="member">generate_key</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destination);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a8bf9483dae26e9c0a1c45d77b8f1dce8" kindref="member">encrypt_string</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*plaintext,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*encrypted_len);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a02ee5ac64d2d2d441edcca915e480503" kindref="member">decrypt_string</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base64_ciphertext,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crypt-utils_8h_1a36c2342a7c47b8f41bf628bf473b1c97" kindref="member">is_valid_key</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1aa4a7facde8c6f63a7225c07e92232b2e" kindref="member">encrypt_file_name_with_hex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a3b003481e5c188ac1d6f63e09e6f3a34" kindref="member">decrypt_file_name_with_hex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a1899c23a523d11ed1cb5601eabdb023d" kindref="member">decrypt_path</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encrypted_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="crypt-utils_8h_1a373f8aedbcd8b6ce22fe7bdfeb2961c2" kindref="member">decrypt_path_and_filename</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encrypted_path,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
    </programlisting>
    <location file="userspace-module/utils/crypt-utils/crypt-utils.h"/>
  </compounddef>
</doxygen>
