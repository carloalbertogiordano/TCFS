<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tcfs_8c" kind="file" language="C++">
    <compoundname>tcfs.c</compoundname>
    <includes refid="crypt-utils_8h" local="yes">utils/crypt-utils/crypt-utils.h</includes>
    <includes refid="tcfs__utils_8h" local="yes">utils/tcfs_utils/tcfs_utils.h</includes>
    <includes local="no">argp.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">fuse3/fuse.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">linux/limits.h</includes>
    <includes local="no">pwd.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/xattr.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="1">
        <label>userspace-module/tcfs.c</label>
        <link refid="tcfs_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>utils/crypt-utils/crypt-utils.h</label>
        <link refid="crypt-utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../tcfs_utils/tcfs_utils.h</label>
        <link refid="tcfs__utils_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>argp.h</label>
      </node>
      <node id="3">
        <label>ctype.h</label>
      </node>
      <node id="21">
        <label>dirent.h</label>
      </node>
      <node id="16">
        <label>errno.h</label>
      </node>
      <node id="22">
        <label>fcntl.h</label>
      </node>
      <node id="23">
        <label>fuse3/fuse.h</label>
      </node>
      <node id="4">
        <label>libgen.h</label>
      </node>
      <node id="24">
        <label>limits.h</label>
      </node>
      <node id="25">
        <label>linux/limits.h</label>
      </node>
      <node id="10">
        <label>openssl/aes.h</label>
      </node>
      <node id="11">
        <label>openssl/bio.h</label>
      </node>
      <node id="12">
        <label>openssl/buffer.h</label>
      </node>
      <node id="13">
        <label>openssl/evp.h</label>
      </node>
      <node id="14">
        <label>openssl/rand.h</label>
      </node>
      <node id="17">
        <label>pwd.h</label>
      </node>
      <node id="19">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>sys/mman.h</label>
      </node>
      <node id="26">
        <label>sys/stat.h</label>
      </node>
      <node id="27">
        <label>sys/time.h</label>
      </node>
      <node id="18">
        <label>sys/xattr.h</label>
      </node>
      <node id="28">
        <label>time.h</label>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structarguments" prot="public">arguments</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="tcfs_8c_1a0919197af2e154da2c05727b6d87cbda" prot="public" static="no">
        <name>FUSE_USE_VERSION</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="6" column="9" bodyfile="userspace-module/tcfs.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcfs_8c_1ace5cb10bf13b2a61c0d3e01b4e0590a2" prot="public" static="no">
        <name>HAVE_SETXATTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="7" column="9" bodyfile="userspace-module/tcfs.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcfs_8c_1a78c99ffd76a7bb3c8c74db76207e9ab4" prot="public" static="no">
        <name>_XOPEN_SOURCE</name>
        <initializer>500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="17" column="10" bodyfile="userspace-module/tcfs.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" prot="public" static="no">
        <name>TCFS_SUCCESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="20" column="9" bodyfile="userspace-module/tcfs.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcfs_8c_1ae05f9a61e45517eaca7278909e7959ec" prot="public" static="no">
        <name>ERR_inval_arg_len</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="21" column="9" bodyfile="userspace-module/tcfs.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcfs_8c_1ac9de09fb2e7784a5778dec8a36db8ffa" prot="public" static="no">
        <name>ERR_inval_key</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="22" column="9" bodyfile="userspace-module/tcfs.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcfs_8c_1a37991e6ea390ac4a4d0f4e63c2a71146" prot="public" static="no">
        <name>ERR_invalid_enc_dir_name</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="23" column="9" bodyfile="userspace-module/tcfs.c" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>root_path</definition>
        <argsstring></argsstring>
        <name>root_path</name>
        <briefdescription>
<para>Contains the fullpath to the mounted directory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="47" column="6" bodyfile="userspace-module/tcfs.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="tcfs_8c" startline="1412" endline="1461">main</referencedby>
        <referencedby refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" compoundref="tcfs_8c" startline="132" endline="149">tcfs_access</referencedby>
        <referencedby refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" compoundref="tcfs_8c" startline="497" endline="516">tcfs_chmod</referencedby>
        <referencedby refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" compoundref="tcfs_8c" startline="530" endline="546">tcfs_chown</referencedby>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
        <referencedby refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" compoundref="tcfs_8c" startline="1140" endline="1161">tcfs_fsync</referencedby>
        <referencedby refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" compoundref="tcfs_8c" startline="99" endline="120">tcfs_getattr</referencedby>
        <referencedby refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" compoundref="tcfs_8c" startline="1199" endline="1215">tcfs_getxattr</referencedby>
        <referencedby refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" compoundref="tcfs_8c" startline="465" endline="484">tcfs_link</referencedby>
        <referencedby refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" compoundref="tcfs_8c" startline="1229" endline="1243">tcfs_listxattr</referencedby>
        <referencedby refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" compoundref="tcfs_8c" startline="324" endline="340">tcfs_mkdir</referencedby>
        <referencedby refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" compoundref="tcfs_8c" startline="286" endline="312">tcfs_mknod</referencedby>
        <referencedby refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" compoundref="tcfs_8c" startline="651" endline="670">tcfs_open</referencedby>
        <referencedby refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" compoundref="tcfs_8c" startline="67" endline="86">tcfs_opendir</referencedby>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" compoundref="tcfs_8c" startline="196" endline="273">tcfs_readdir</referencedby>
        <referencedby refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" compoundref="tcfs_8c" startline="162" endline="180">tcfs_readlink</referencedby>
        <referencedby refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" compoundref="tcfs_8c" startline="1111" endline="1127">tcfs_release</referencedby>
        <referencedby refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" compoundref="tcfs_8c" startline="1273" endline="1287">tcfs_removexattr</referencedby>
        <referencedby refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" compoundref="tcfs_8c" startline="436" endline="453">tcfs_rename</referencedby>
        <referencedby refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" compoundref="tcfs_8c" startline="377" endline="392">tcfs_rmdir</referencedby>
        <referencedby refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" compoundref="tcfs_8c" startline="979" endline="992">tcfs_setxattr</referencedby>
        <referencedby refid="tcfs_8c_1ae14ebf4581d4cbc45737ae75af82a887" compoundref="tcfs_8c" startline="952" endline="964">tcfs_statfs</referencedby>
        <referencedby refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" compoundref="tcfs_8c" startline="404" endline="423">tcfs_symlink</referencedby>
        <referencedby refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" compoundref="tcfs_8c" startline="559" endline="577">tcfs_truncate</referencedby>
        <referencedby refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" compoundref="tcfs_8c" startline="351" endline="366">tcfs_unlink</referencedby>
        <referencedby refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" compoundref="tcfs_8c" startline="612" endline="638">tcfs_utimens</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>password</definition>
        <argsstring></argsstring>
        <name>password</name>
        <briefdescription>
<para>Contains the password passed to TCFS when started. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="52" column="6" bodyfile="userspace-module/tcfs.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="tcfs_8c" startline="1412" endline="1461">main</referencedby>
        <referencedby refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" compoundref="tcfs_8c" startline="132" endline="149">tcfs_access</referencedby>
        <referencedby refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" compoundref="tcfs_8c" startline="497" endline="516">tcfs_chmod</referencedby>
        <referencedby refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" compoundref="tcfs_8c" startline="530" endline="546">tcfs_chown</referencedby>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
        <referencedby refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" compoundref="tcfs_8c" startline="1140" endline="1161">tcfs_fsync</referencedby>
        <referencedby refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" compoundref="tcfs_8c" startline="99" endline="120">tcfs_getattr</referencedby>
        <referencedby refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" compoundref="tcfs_8c" startline="1199" endline="1215">tcfs_getxattr</referencedby>
        <referencedby refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" compoundref="tcfs_8c" startline="465" endline="484">tcfs_link</referencedby>
        <referencedby refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" compoundref="tcfs_8c" startline="1229" endline="1243">tcfs_listxattr</referencedby>
        <referencedby refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" compoundref="tcfs_8c" startline="324" endline="340">tcfs_mkdir</referencedby>
        <referencedby refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" compoundref="tcfs_8c" startline="286" endline="312">tcfs_mknod</referencedby>
        <referencedby refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" compoundref="tcfs_8c" startline="651" endline="670">tcfs_open</referencedby>
        <referencedby refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" compoundref="tcfs_8c" startline="67" endline="86">tcfs_opendir</referencedby>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" compoundref="tcfs_8c" startline="196" endline="273">tcfs_readdir</referencedby>
        <referencedby refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" compoundref="tcfs_8c" startline="162" endline="180">tcfs_readlink</referencedby>
        <referencedby refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" compoundref="tcfs_8c" startline="1111" endline="1127">tcfs_release</referencedby>
        <referencedby refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" compoundref="tcfs_8c" startline="1273" endline="1287">tcfs_removexattr</referencedby>
        <referencedby refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" compoundref="tcfs_8c" startline="436" endline="453">tcfs_rename</referencedby>
        <referencedby refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" compoundref="tcfs_8c" startline="377" endline="392">tcfs_rmdir</referencedby>
        <referencedby refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" compoundref="tcfs_8c" startline="979" endline="992">tcfs_setxattr</referencedby>
        <referencedby refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" compoundref="tcfs_8c" startline="404" endline="423">tcfs_symlink</referencedby>
        <referencedby refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" compoundref="tcfs_8c" startline="559" endline="577">tcfs_truncate</referencedby>
        <referencedby refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" compoundref="tcfs_8c" startline="351" endline="366">tcfs_unlink</referencedby>
        <referencedby refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" compoundref="tcfs_8c" startline="612" endline="638">tcfs_utimens</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1a53c12b201809f3165da8a2779d152b3a" prot="public" static="yes" mutable="no">
        <type>struct fuse_operations</type>
        <definition>struct fuse_operations tcfs_oper</definition>
        <argsstring></argsstring>
        <name>tcfs_oper</name>
        <initializer>= {
  .opendir = <ref refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" kindref="member">tcfs_opendir</ref>,
  .getattr = <ref refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" kindref="member">tcfs_getattr</ref>,
  .access = <ref refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" kindref="member">tcfs_access</ref>,
  .readlink = <ref refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" kindref="member">tcfs_readlink</ref>,
  .readdir = <ref refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" kindref="member">tcfs_readdir</ref>,
  .mknod = <ref refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" kindref="member">tcfs_mknod</ref>,
  .mkdir = <ref refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" kindref="member">tcfs_mkdir</ref>,
  .symlink = <ref refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" kindref="member">tcfs_symlink</ref>,
  .unlink = <ref refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" kindref="member">tcfs_unlink</ref>,
  .rmdir = <ref refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" kindref="member">tcfs_rmdir</ref>,
  .rename = <ref refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" kindref="member">tcfs_rename</ref>,
  .link = <ref refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" kindref="member">tcfs_link</ref>,
  .chmod = <ref refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" kindref="member">tcfs_chmod</ref>,
  .chown = <ref refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" kindref="member">tcfs_chown</ref>,
  .truncate = <ref refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" kindref="member">tcfs_truncate</ref>,
  .utimens = <ref refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" kindref="member">tcfs_utimens</ref>,
  .open = <ref refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" kindref="member">tcfs_open</ref>,
  .read = <ref refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" kindref="member">tcfs_read</ref>,
  .write = <ref refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" kindref="member">tcfs_write</ref>,
  .statfs = <ref refid="tcfs_8c_1ae14ebf4581d4cbc45737ae75af82a887" kindref="member">tcfs_statfs</ref>,
  .create = <ref refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" kindref="member">tcfs_create</ref>,
  .release = <ref refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" kindref="member">tcfs_release</ref>,
  .fsync = <ref refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" kindref="member">tcfs_fsync</ref>,
  .setxattr = <ref refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" kindref="member">tcfs_setxattr</ref>,
  .getxattr = <ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref>,
  .listxattr = <ref refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" kindref="member">tcfs_listxattr</ref>,
  .removexattr = <ref refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" kindref="member">tcfs_removexattr</ref>,
}</initializer>
        <briefdescription>
<para>TCFS file system operations. </para>
        </briefdescription>
        <detaileddescription>
<para>This structure defines the operations supported by the TCFS file system. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1294" column="29" bodyfile="userspace-module/tcfs.c" bodystart="1294" bodyend="1322"/>
        <referencedby refid="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="tcfs_8c" startline="1412" endline="1461">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1a62f73ea01c816f1996aed4c66f57c4fb" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* argp_program_version</definition>
        <argsstring></argsstring>
        <name>argp_program_version</name>
        <initializer>= &quot;TCFS Alpha&quot;</initializer>
        <briefdescription>
<para>TCFS version information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1327" column="12" bodyfile="userspace-module/tcfs.c" bodystart="1327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1aaa037e59f26a80a8a2e35e6f2364004d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* argp_program_bug_address</definition>
        <argsstring></argsstring>
        <name>argp_program_bug_address</name>
        <initializer>= &quot;carloalbertogiordano@duck.com&quot;</initializer>
        <briefdescription>
<para>TCFS bug report email address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1332" column="12" bodyfile="userspace-module/tcfs.c" bodystart="1332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1af6164deb8a824f8cb2b9147cfc3174f5" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char doc[]</definition>
        <argsstring>[]</argsstring>
        <name>doc</name>
        <initializer>= &quot;This is an implementation on TCFS\ntcfs -s &lt;source_path&gt; &quot;
                    &quot;-d &lt;dest_path&gt; -p &lt;<ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>&gt; [fuse <ref refid="structarguments" kindref="compound">arguments</ref>]&quot;</initializer>
        <briefdescription>
<para>Documentation string for TCFS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1337" column="13" bodyfile="userspace-module/tcfs.c" bodystart="1337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1a91b08784b3668a8a1fbe2eec1947fb9d" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char args_doc[]</definition>
        <argsstring>[]</argsstring>
        <name>args_doc</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
<para>Argument documentation string for TCFS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1343" column="13" bodyfile="userspace-module/tcfs.c" bodystart="1343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1abc1fd3a47aea6a8944038c9100eb9135" prot="public" static="yes" mutable="no">
        <type>struct argp_option</type>
        <definition>struct argp_option options[]</definition>
        <argsstring>[]</argsstring>
        <name>options</name>
        <initializer>= { { &quot;source&quot;, &apos;s&apos;, &quot;SOURCE&quot;, 0, &quot;Source file path&quot;, -1 },
        { &quot;destination&quot;, &apos;d&apos;, &quot;DESTINATION&quot;, 0, &quot;Destination file path&quot;, -1 },
        { &quot;password&quot;, &apos;p&apos;, &quot;PASSWORD&quot;, 0, &quot;Password&quot;, -1 },
        { NULL } }</initializer>
        <briefdescription>
<para>TCFS command-line options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1348" column="25" bodyfile="userspace-module/tcfs.c" bodystart="1349" bodyend="1352"/>
      </memberdef>
      <memberdef kind="variable" id="tcfs_8c_1ab70c96531b1b652d70c221cfaf3207f3" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structargp" kindref="compound">argp</ref></type>
        <definition>struct argp argp</definition>
        <argsstring></argsstring>
        <name>argp</name>
        <initializer>= { <ref refid="user__tcfs_8c_1ac88b371bbf7f89ab6440cb9fe629288c" kindref="member">options</ref>, <ref refid="user__tcfs_8c_1a35ee63236273ebb9325c444cacf00159" kindref="member">parse_opt</ref>, <ref refid="tcfs_8c_1a91b08784b3668a8a1fbe2eec1947fb9d" kindref="member">args_doc</ref>, <ref refid="user__tcfs_8c_1a3a72da5720995770156f9f9879ce6fa9" kindref="member">doc</ref>, 0, NULL, NULL }</initializer>
        <briefdescription>
<para>TCFS argp structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1401" column="18" bodyfile="userspace-module/tcfs.c" bodystart="1401" bodyend="1401"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_getxattr</definition>
        <argsstring>(const char *fuse_path, const char *name, char *value, size_t size)</argsstring>
        <name>tcfs_getxattr</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Get extended attribute data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to retrieve the value of an extended attribute for a specified file or directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file or directory within the TCFS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the extended attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value of the extended attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the extended attribute value on success, negative error code on failure.</para>
</simplesect>
The <computeroutput>getxattr</computeroutput> function is invoked to obtain the value of an extended attribute associated with a file or directory within the TCFS file system. The attribute value is stored in the provided buffer (<computeroutput>value</computeroutput>) with a specified size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file or directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the extended attribute to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value of the extended attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, the function returns the size of the extended attribute value. On failure, it returns a negative error code representing the type of error encountered.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The function must ensure that the attribute value is properly retrieved and stored in the provided buffer.</para>
</listitem><listitem><para>Verify that the correct error codes are returned in case of failures or insufficient buffer size.</para>
</listitem><listitem><para>Implement appropriate checks to handle different scenarios and edge cases. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1199" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1199" bodyend="1215" declfile="userspace-module/tcfs.c" declline="54" declcolumn="12"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_opendir</definition>
        <argsstring>(const char *fuse_path, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_opendir</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Opens a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when a directory is opened.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="67" column="1" bodyfile="userspace-module/tcfs.c" bodystart="67" bodyend="86"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_getattr</definition>
        <argsstring>(const char *fuse_path, struct stat *stbuf, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_getattr</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>stbuf</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Gets file attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to get attributes for a file or directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file/directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to fill with attributes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="99" column="1" bodyfile="userspace-module/tcfs.c" bodystart="99" bodyend="120"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_access</definition>
        <argsstring>(const char *fuse_path, int mask)</argsstring>
        <name>tcfs_access</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Checks file access permissions. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to check file access permissions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file/directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested access permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="132" column="1" bodyfile="userspace-module/tcfs.c" bodystart="132" bodyend="149"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_readlink</definition>
        <argsstring>(const char *fuse_path, char *buf, size_t size)</argsstring>
        <name>tcfs_readlink</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reads the target of a symbolic link. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to read the target of a symbolic link.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to fill with the link target. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="162" column="1" bodyfile="userspace-module/tcfs.c" bodystart="162" bodyend="180"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_readdir</definition>
        <argsstring>(const char *fuse_path, void *buf, fuse_fill_dir_t filler, off_t offset, struct fuse_file_info *fi, enum fuse_readdir_flags frdf)</argsstring>
        <name>tcfs_readdir</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>fuse_fill_dir_t</type>
          <declname>filler</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <param>
          <type>enum fuse_readdir_flags</type>
          <declname>frdf</declname>
        </param>
        <briefdescription>
<para>Reads a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to read the contents of a directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to fill with directory entries. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filler</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to add entries to the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset within the directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frdf</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional flags for readdir operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="196" column="1" bodyfile="userspace-module/tcfs.c" bodystart="196" bodyend="273"/>
        <references refid="crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34" compoundref="crypt-utils_8c" startline="406" endline="410">decrypt_file_name_with_hex</references>
        <references refid="crypt-utils_8c_1a1899c23a523d11ed1cb5601eabdb023d" compoundref="crypt-utils_8c" startline="645" endline="747">decrypt_path</references>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs_8c_1a37991e6ea390ac4a4d0f4e63c2a71146" compoundref="tcfs_8c" startline="23">ERR_invalid_enc_dir_name</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_mknod</definition>
        <argsstring>(const char *fuse_path, mode_t mode, dev_t rdev)</argsstring>
        <name>tcfs_mknod</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>dev_t</type>
          <declname>rdev</declname>
        </param>
        <briefdescription>
<para>Creates a regular file or a special file (block or character). </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to create a regular file or a special file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>File mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rdev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device numbers (if the file is a special file). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="286" column="1" bodyfile="userspace-module/tcfs.c" bodystart="286" bodyend="312"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_mkdir</definition>
        <argsstring>(const char *fuse_path, mode_t mode)</argsstring>
        <name>tcfs_mkdir</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Creates a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to create a directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Directory mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="324" column="1" bodyfile="userspace-module/tcfs.c" bodystart="324" bodyend="340"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_unlink</definition>
        <argsstring>(const char *fuse_path)</argsstring>
        <name>tcfs_unlink</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <briefdescription>
<para>Removes a file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to remove a file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="351" column="1" bodyfile="userspace-module/tcfs.c" bodystart="351" bodyend="366"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_rmdir</definition>
        <argsstring>(const char *fuse_path)</argsstring>
        <name>tcfs_rmdir</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <briefdescription>
<para>Removes a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to remove a directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the directory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="377" column="1" bodyfile="userspace-module/tcfs.c" bodystart="377" bodyend="392"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_symlink</definition>
        <argsstring>(const char *from, const char *to)</argsstring>
        <name>tcfs_symlink</name>
        <param>
          <type>const char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Creates a symbolic link. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to create a symbolic link.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Source path of the symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>Target path of the symbolic link. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="404" column="1" bodyfile="userspace-module/tcfs.c" bodystart="404" bodyend="423"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_rename</definition>
        <argsstring>(const char *from, const char *to, unsigned int flags)</argsstring>
        <name>tcfs_rename</name>
        <param>
          <type>const char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Renames a file or a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to rename a file or a directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Source path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>Target path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for the rename operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="436" column="1" bodyfile="userspace-module/tcfs.c" bodystart="436" bodyend="453"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_link</definition>
        <argsstring>(const char *from, const char *to)</argsstring>
        <name>tcfs_link</name>
        <param>
          <type>const char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Creates a hard link. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to create a hard link.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Source path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>Target path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="465" column="1" bodyfile="userspace-module/tcfs.c" bodystart="465" bodyend="484"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_chmod</definition>
        <argsstring>(const char *fuse_path, mode_t mode, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_chmod</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Changes the permissions of a file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to change the permissions of a file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>New file mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="497" column="1" bodyfile="userspace-module/tcfs.c" bodystart="497" bodyend="516"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_chown</definition>
        <argsstring>(const char *fuse_path, uid_t uid, gid_t gid, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_chown</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>uid_t</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>gid_t</type>
          <declname>gid</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Changes the owner and group of a file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to change the owner and group of a file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>New user ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gid</parametername>
</parameternamelist>
<parameterdescription>
<para>New group ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="530" column="1" bodyfile="userspace-module/tcfs.c" bodystart="530" bodyend="546"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_truncate</definition>
        <argsstring>(const char *fuse_path, off_t size, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_truncate</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Truncates or extends the size of a file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to truncate or extend the size of a file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>New size of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="559" column="1" bodyfile="userspace-module/tcfs.c" bodystart="559" bodyend="577"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_utimens</definition>
        <argsstring>(const char *fuse_path, const struct timespec ts[2], struct fuse_file_info *fi)</argsstring>
        <name>tcfs_utimens</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>const struct timespec</type>
          <declname>ts</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Modify the access and modification timestamps of a file in the TCFS file system. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the <computeroutput>utimens</computeroutput> operation is performed on a file in the TCFS.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the encrypted file for which timestamps need to be modified. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of two timespec structures containing the new access and modification timestamps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information structure provided by FUSE. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, negative error code on failure.</para>
</simplesect>
The <computeroutput>tcfs_utimens</computeroutput> function is invoked to modify the access and modification timestamps of a file within the TCFS. It decodes the encrypted file path, translates it into the actual file path on the underlying file system, and then uses the <computeroutput>utimes</computeroutput> function to apply the changes to the file timestamps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the encrypted file within the TCFS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>An array containing two timespec structures. The first structure represents the new access timestamp, and the second represents the new modification timestamp. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information provided by FUSE, which may be used to obtain additional details about the file if needed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success. On failure, it returns a negative error code representing the type of error encountered. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="612" column="1" bodyfile="userspace-module/tcfs.c" bodystart="612" bodyend="638"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_open</definition>
        <argsstring>(const char *fuse_path, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_open</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Opens a file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to open a file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="651" column="1" bodyfile="userspace-module/tcfs.c" bodystart="651" bodyend="670"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int file_size</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>file_size</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Get the size of a file in the TCFS file system. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the <computeroutput>getattr</computeroutput> operation is performed on a file in the TCFS to obtain file attributes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the encrypted file for which the size is requested. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the file attributes, including the size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information structure provided by FUSE. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, negative error code on failure.</para>
</simplesect>
The <computeroutput>tcfs_file_size</computeroutput> function is invoked to retrieve the size of a file within the TCFS. It decodes the encrypted file path, translates it into the actual file path on the underlying file system, and then uses the <computeroutput>getattr</computeroutput> function to obtain the file attributes, including the file size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the encrypted file within the TCFS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the file attributes, including the file size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information provided by FUSE, which may be used to obtain additional details about the file if needed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success. On failure, it returns a negative error code representing the type of error encountered.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The function is a crucial part of file attribute retrieval, and the size is a fundamental attribute of a file.</para>
</listitem><listitem><para>The correct functioning of this function is essential for providing accurate information about the file size.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="warning"><para><itemizedlist>
<listitem><para>Ensure that the function correctly translates the encrypted file path into the actual file path on the underlying file system.</para>
</listitem><listitem><para>Verify that the file attributes, especially the size, are accurately retrieved and reported in the <computeroutput>stbuf</computeroutput> buffer. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="711" column="1" bodyfile="userspace-module/tcfs.c" bodystart="711" bodyend="719"/>
        <referencedby refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" compoundref="tcfs_8c" startline="734" endline="815">tcfs_read</referencedby>
        <referencedby refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" compoundref="tcfs_8c" startline="830" endline="915">tcfs_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a745384a010e20b082db26e16702a0129" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_read</definition>
        <argsstring>(const char *fuse_path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_read</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Reads data from an open file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to read data from an open file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to fill with data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes read, or a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="734" column="1" bodyfile="userspace-module/tcfs.c" bodystart="734" bodyend="815"/>
        <references refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" compoundref="crypt-utils_8h" startline="32">DECRYPT</references>
        <references refid="crypt-utils_8c_1a22f528907ee4f078e333501b747d5435" compoundref="crypt-utils_8c" startline="330" endline="379">decrypt_string</references>
        <references refid="crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76" compoundref="crypt-utils_8c" startline="63" endline="164">do_crypt</references>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" compoundref="tcfs_8c" startline="711" endline="719">file_size</references>
        <references refid="tcfs__utils_8c_1aac1b7fab3a13b4cfcc0b34eb7511df55" compoundref="tcfs__utils_8c" startline="19" endline="27">get_user_name</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" compoundref="tcfs_8c" startline="1199" endline="1215">tcfs_getxattr</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_write</definition>
        <argsstring>(const char *fuse_path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_write</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Writes data to an open file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to write data to an open file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written, or a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="830" column="1" bodyfile="userspace-module/tcfs.c" bodystart="830" bodyend="915"/>
        <references refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" compoundref="crypt-utils_8h" startline="32">DECRYPT</references>
        <references refid="crypt-utils_8c_1a22f528907ee4f078e333501b747d5435" compoundref="crypt-utils_8c" startline="330" endline="379">decrypt_string</references>
        <references refid="crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76" compoundref="crypt-utils_8c" startline="63" endline="164">do_crypt</references>
        <references refid="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" compoundref="crypt-utils_8h" startline="27">ENCRYPT</references>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" compoundref="tcfs_8c" startline="711" endline="719">file_size</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" compoundref="tcfs_8c" startline="132" endline="149">tcfs_access</references>
        <references refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" compoundref="tcfs_8c" startline="1199" endline="1215">tcfs_getxattr</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1ae14ebf4581d4cbc45737ae75af82a887" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_statfs</definition>
        <argsstring>(const char *fuse_path, struct statvfs *stbuf)</argsstring>
        <name>tcfs_statfs</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>struct statvfs *</type>
          <declname>stbuf</declname>
        </param>
        <briefdescription>
<para>Get file system statistics. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the <computeroutput>statfs</computeroutput> operation is performed to obtain statistics about the TCFS file system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file system for which statistics are requested. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store file system statistics. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, negative error code on failure.</para>
</simplesect>
The <computeroutput>tcfs_statfs</computeroutput> function is invoked to retrieve statistics about the TCFS file system. It may include information such as the total size, free space, and available space.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file system within the TCFS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the file system statistics.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success. On failure, it returns a negative error code representing the type of error encountered.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The function is essential for providing information about the overall status of the TCFS file system.</para>
</listitem><listitem><para>Ensure that the file system statistics are accurately retrieved and reported in the <computeroutput>stbuf</computeroutput> buffer.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="warning"><para><itemizedlist>
<listitem><para>Verify that the function correctly handles errors and returns the appropriate error codes.</para>
</listitem><listitem><para>The accuracy of the reported statistics is crucial for applications that rely on file system information. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="952" column="1" bodyfile="userspace-module/tcfs.c" bodystart="952" bodyend="964"/>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_setxattr</definition>
        <argsstring>(const char *fuse_path, const char *name, const char *value, size_t size, int flags)</argsstring>
        <name>tcfs_setxattr</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Sets extended attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to set extended attributes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for the setxattr operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="979" column="1" bodyfile="userspace-module/tcfs.c" bodystart="979" bodyend="992"/>
        <references refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" compoundref="crypt-utils_8c" startline="420" endline="521">encrypt_path</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
        <referencedby refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" compoundref="tcfs_8c" startline="1031" endline="1099">tcfs_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_create</definition>
        <argsstring>(const char *fuse_path, mode_t mode, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_create</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Create and open a file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when a new file is created in the TCFS file system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file to be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode of the file (permissions). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information, including flags and an open file handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, negative error code on failure.</para>
</simplesect>
The <computeroutput>create</computeroutput> function is invoked when a new file is created in the TCFS file system. It is responsible for setting up the necessary data structures, allocating resources, and opening the file for subsequent read and write operations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file within the TCFS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode of the file, specifying permissions and other attributes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information containing flags and an open file handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success. On failure, it returns a negative error code representing the type of error encountered.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The function must create the file and return an open file handle in the <computeroutput>fi</computeroutput> structure.</para>
</listitem><listitem><para>Ensure proper handling of file permissions, resource allocation, and any other relevant attributes.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="warning"><para><itemizedlist>
<listitem><para>Verify that the function correctly handles errors and returns the appropriate error codes.</para>
</listitem><listitem><para>Implement necessary checks to ensure the file is created successfully and is ready for subsequent operations. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1031" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1031" bodyend="1099"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="crypt-utils_8c_1aa926098a8843cf0ab6bd7eb8b3bbd2e6" compoundref="crypt-utils_8c" startline="278" endline="319">encrypt_string</references>
        <references refid="crypt-utils_8c_1a8845f5705eaafda836aac91d5881876f" compoundref="crypt-utils_8c" startline="235" endline="266">generate_key</references>
        <references refid="crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97" compoundref="crypt-utils_8c" startline="388" endline="395">is_valid_key</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" compoundref="tcfs_8c" startline="979" endline="992">tcfs_setxattr</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_release</definition>
        <argsstring>(const char *fuse_path, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_release</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Releases an open file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to release an open file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1111" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1111" bodyend="1127"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_fsync</definition>
        <argsstring>(const char *fuse_path, int isdatasync, struct fuse_file_info *fi)</argsstring>
        <name>tcfs_fsync</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isdatasync</declname>
        </param>
        <param>
          <type>struct fuse_file_info *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Synchronizes file contents. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to synchronize file contents.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datasync</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether to sync only data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>File information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1140" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1140" bodyend="1161"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_listxattr</definition>
        <argsstring>(const char *fuse_path, char *list, size_t size)</argsstring>
        <name>tcfs_listxattr</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Lists extended attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to list extended attributes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to fill with the attribute list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the attribute list on success, a negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1229" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1229" bodyend="1243"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tcfs_removexattr</definition>
        <argsstring>(const char *fuse_path, const char *name)</argsstring>
        <name>tcfs_removexattr</name>
        <param>
          <type>const char *</type>
          <declname>fuse_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove an extended attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called to remove an extended attribute for a specified file or directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file or directory within the TCFS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the extended attribute to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TCFS_SUCCESS on success, negative error code on failure.</para>
</simplesect>
The <computeroutput>removexattr</computeroutput> function is invoked to remove the specified extended attribute associated with a file or directory within the TCFS file system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fuse_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file or directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the extended attribute to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, the function returns TCFS_SUCCESS. On failure, it returns a negative error code representing the type of error encountered.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The function must ensure the proper removal of the specified extended attribute.</para>
</listitem><listitem><para>Verify that the correct error codes are returned in case of failures.</para>
</listitem><listitem><para>Implement appropriate checks to handle different scenarios and edge cases. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1273" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1273" bodyend="1287"/>
        <references refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" compoundref="crypt-utils_8c" startline="532" endline="635">encrypt_path_and_filename</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" compoundref="tcfs__utils_8c" startline="53" endline="85">prefix_path</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a35ee63236273ebb9325c444cacf00159" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>error_t</type>
        <definition>static error_t parse_opt</definition>
        <argsstring>(int key, char *arg, struct argp_state *state)</argsstring>
        <name>parse_opt</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>struct argp_state *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Parse command-line options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Option key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Option argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Parser state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1374" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1374" bodyend="1396"/>
        <references refid="structarguments_1a29ff8292026649ead806d06e83728699" compoundref="tcfs_8c" startline="1360">arguments::destination</references>
        <references refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" compoundref="tcfs_8c" startline="1361">arguments::password</references>
        <references refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" compoundref="tcfs_8c" startline="1359">arguments::source</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Main entry point for TCFS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of command-line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of command-line arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="userspace-module/tcfs.c" line="1412" column="1" bodyfile="userspace-module/tcfs.c" bodystart="1412" bodyend="1461"/>
        <references refid="structarguments_1a29ff8292026649ead806d06e83728699" compoundref="tcfs_8c" startline="1360">arguments::destination</references>
        <references refid="tcfs_8c_1ae05f9a61e45517eaca7278909e7959ec" compoundref="tcfs_8c" startline="21">ERR_inval_arg_len</references>
        <references refid="tcfs_8c_1ac9de09fb2e7784a5778dec8a36db8ffa" compoundref="tcfs_8c" startline="22">ERR_inval_key</references>
        <references refid="crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97" compoundref="crypt-utils_8c" startline="388" endline="395">is_valid_key</references>
        <references refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" compoundref="tcfs__utils_8c" startline="262" endline="314">logMessage</references>
        <references refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" compoundref="tcfs_8c" startline="52">password</references>
        <references refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" compoundref="tcfs_8c" startline="1361">arguments::password</references>
        <references refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" compoundref="tcfs_8c" startline="47">root_path</references>
        <references refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" compoundref="tcfs_8c" startline="1359">arguments::source</references>
        <references refid="tcfs_8c_1a53c12b201809f3165da8a2779d152b3a" compoundref="tcfs_8c" startline="1294" endline="1322">tcfs_oper</references>
        <references refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" compoundref="tcfs_8c" startline="20">TCFS_SUCCESS</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="tcfs_8c_1a0919197af2e154da2c05727b6d87cbda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUSE_USE_VERSION<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="tcfs_8c_1ace5cb10bf13b2a61c0d3e01b4e0590a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_SETXATTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>pread()/pwrite()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_XOPEN_SOURCE<sp/>600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="tcfs_8c_1a78c99ffd76a7bb3c8c74db76207e9ab4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_XOPEN_SOURCE<sp/>500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STDC_VERSION__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCFS_SUCCESS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="tcfs_8c_1ae05f9a61e45517eaca7278909e7959ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_inval_arg_len<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="tcfs_8c_1ac9de09fb2e7784a5778dec8a36db8ffa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_inval_key<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="tcfs_8c_1a37991e6ea390ac4a4d0f4e63c2a71146" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_invalid_enc_dir_name<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="crypt-utils_8h" kindref="compound">utils/crypt-utils/crypt-utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tcfs__utils_8h" kindref="compound">utils/tcfs_utils/tcfs_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;argp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Definition<sp/>of<sp/>AT_*<sp/>constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fuse3/fuse.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pwd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/xattr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>;</highlight></codeline>
<codeline lineno="52" refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" kindref="member">tcfs_opendir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>opendir<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fuse_path);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\topendir<sp/>new_path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>new_path);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>DIR<sp/>*dp<sp/>=<sp/>opendir<sp/>(new_path);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>the<sp/>directory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>closedir<sp/>(dp);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" kindref="member">tcfs_getattr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*stbuf,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>getattr<sp/>on<sp/>%s%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>,<sp/>fuse_path);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tgetattr<sp/>enc_fuse_path:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>enc_fuse_path);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tgetattr<sp/>new_path<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>new_path);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>stat<sp/>(new_path,<sp/>stbuf);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\taccess:<sp/>Stat<sp/>returned<sp/>-1,<sp/>err:%d\n&quot;</highlight><highlight class="normal">,<sp/>-errno);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;getattr<sp/>err&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" kindref="member">tcfs_access</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Callen<sp/>access<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fuse_path);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\taccess<sp/>encrypt_path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>full_path);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>access<sp/>(full_path,<sp/>mask);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;access<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" kindref="member">tcfs_readlink</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;called<sp/>readlink\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\treadlink<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>readlink<sp/>(path,<sp/>buf,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1UL)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;readlink<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>buf[res]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" kindref="member">tcfs_readdir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>fuse_fill_dir_t<sp/>filler,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off_t<sp/>offset,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>fuse_readdir_flags<sp/>frdf)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>(void)offset;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>(void)frdf;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>readdir<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fuse_path);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;readdir<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>DIR<sp/>*dp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*de;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>dp<sp/>=<sp/>opendir<sp/>(path);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dp<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>the<sp/>directory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Dir<sp/>%s<sp/>opened\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((de<sp/>=<sp/>readdir<sp/>(dp))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(&amp;st,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(st));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st.st_ino<sp/>=<sp/>de-&gt;d_ino;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st.st_mode<sp/>=<sp/>de-&gt;d_type<sp/>&lt;&lt;<sp/>12;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filler_res<sp/>=<sp/>-1,<sp/>can_break<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strcmp<sp/>(de-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp<sp/>(de-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>strcmp<sp/>(de-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;ONE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filler_res<sp/>=<sp/>filler<sp/>(buf,<sp/>de-&gt;d_name,<sp/>&amp;st,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filler_res<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_break<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tchecking<sp/>for<sp/>%s<sp/>is<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>de-&gt;d_name,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34" kindref="member">decrypt_file_name_with_hex</ref><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)de-&gt;d_name,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dec_dirname<sp/>=<sp/><ref refid="crypt-utils_8c_1a1899c23a523d11ed1cb5601eabdb023d" kindref="member">decrypt_path</ref><sp/>(de-&gt;d_name,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dec_dirname<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>decipher<sp/>dir<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="tcfs_8c_1a37991e6ea390ac4a4d0f4e63c2a71146" kindref="member">ERR_invalid_enc_dir_name</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>avoid<sp/>the<sp/>initial<sp/>/<sp/>of<sp/>dec_dirname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filler_res<sp/>=<sp/>filler<sp/>(buf,<sp/>dec_dirname<sp/>+<sp/>1,<sp/>&amp;st,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filler_res<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_break<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;FILLER<sp/>RES:<sp/>%d,<sp/>CAN<sp/>BREAK<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>filler_res,<sp/>can_break);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(can_break)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Breaking<sp/>out\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;readdir<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir<sp/>(dp);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>closedir<sp/>(dp);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" kindref="member">tcfs_mknod</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/>mode_t<sp/>mode,<sp/>dev_t<sp/>rdev)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>mknod\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tmknod<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>Linux<sp/>this<sp/>could<sp/>just<sp/>be<sp/>&apos;mknod(path,<sp/>mode,<sp/>rdev)&apos;<sp/>but<sp/>this</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>is<sp/>more<sp/>portable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISREG<sp/>(mode))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>open<sp/>(path,<sp/>O_CREAT<sp/>|<sp/>O_EXCL<sp/>|<sp/>O_WRONLY,<sp/>mode);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>close<sp/>(res);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISFIFO<sp/>(mode))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>mkfifo<sp/>(path,<sp/>mode);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>mknod<sp/>(path,<sp/>mode,<sp/>rdev);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" kindref="member">tcfs_mkdir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;!!!<sp/>Called<sp/>mkdir<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fuse_path);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tmkdir<sp/>prefix_path<sp/>(%s,<sp/>%s)\n&quot;</highlight><highlight class="normal">,<sp/>enc_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tmkdir<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>mkdir<sp/>(path,<sp/>mode);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" kindref="member">tcfs_unlink</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>unlink\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tunlink<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>unlink<sp/>(path);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" kindref="member">tcfs_rmdir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>rmdir\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\trmdir<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>rmdir<sp/>(path);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" kindref="member">tcfs_symlink</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*to)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>symlink<sp/>%s-&gt;%s\n&quot;</highlight><highlight class="normal">,<sp/>from,<sp/>to);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_from_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(from,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_from<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_from_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_to_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(to,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_to<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_to_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\trmdir<sp/>from<sp/>%s<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>enc_from_path,<sp/>enc_to_path);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>symlink<sp/>(enc_from,<sp/>enc_to);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;symlink<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" kindref="member">tcfs_rename</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*to,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>(void)flags;<sp/></highlight><highlight class="comment">//<sp/>FUSE<sp/>does<sp/>not<sp/>use<sp/>this<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>rename\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_from_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(from,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_from<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_from_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_to_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(to,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_to<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_to_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\trmdir<sp/>from<sp/>%s<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>enc_from_path,<sp/>enc_to_path);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>rename<sp/>(enc_from,<sp/>enc_to);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" kindref="member">tcfs_link</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*to)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>link\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_from_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(from,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_from<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_from_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_to_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(to,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_to<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_to_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\trmdir<sp/>from<sp/>%s<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>enc_from,<sp/>enc_to);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>link<sp/>(enc_from,<sp/>enc_to);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;link<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" kindref="member">tcfs_chmod</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/>mode_t<sp/>mode,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>chmod\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\taccess<sp/>encrypt_path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>chmod<sp/>(path,<sp/>mode);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;chmod<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" kindref="member">tcfs_chown</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/>uid_t<sp/>uid,<sp/>gid_t<sp/>gid,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>chown\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tchown<sp/>encrypt_path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>lchown<sp/>(path,<sp/>uid,<sp/>gid);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" kindref="member">tcfs_truncate</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/>off_t<sp/>size,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>truncate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\ttruncate<sp/>encrypt_path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>truncate<sp/>(path,<sp/>size);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;truncate<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>HAVE_UTIMENSAT</highlight></codeline>
<codeline lineno="611"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" kindref="member">tcfs_utimens</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>ts[2],</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>utimens\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tutimesns<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv[2];</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>tv[0].tv_sec<sp/>=<sp/>ts[0].tv_sec;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>tv[0].tv_usec<sp/>=<sp/>ts[0].tv_nsec<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>tv[1].tv_sec<sp/>=<sp/>ts[1].tv_sec;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>tv[1].tv_usec<sp/>=<sp/>ts[1].tv_nsec<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>utimes<sp/>(path,<sp/>tv);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;utimes<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" kindref="member">tcfs_open</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>open\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\topen<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>open<sp/>(path,<sp/>fi-&gt;flags);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;open<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>close<sp/>(res);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" kindref="member">file_size</ref><sp/>(FILE<sp/>*file)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fstat<sp/>(fileno<sp/>(file),<sp/>&amp;st)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st.st_size;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" kindref="member">tcfs_read</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>off_t<sp/>offset,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>(void)size;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Calling<sp/>read\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>FILE<sp/>*path_ptr,<sp/>*tmpf;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>username</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>username_buf[1024];</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>username_buf_size<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1aac1b7fab3a13b4cfcc0b34eb7511df55" kindref="member">get_user_name</ref><sp/>(username_buf,<sp/>username_buf_size);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tread<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>path_ptr<sp/>=<sp/>fopen<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>tmpf<sp/>=<sp/>tmpfile<sp/>();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>key<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*size_key_char<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.key_len&quot;</highlight><highlight class="normal">,<sp/>size_key_char,<sp/>20)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>file<sp/>key<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>ssize_t<sp/>size_key<sp/>=<sp/>strtol<sp/>(size_key_char,<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrive<sp/>the<sp/>file<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encrypted_key<sp/>=<sp/>malloc<sp/>((size_key<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>encrypted_key[size_key]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.key&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)encrypted_key,<sp/>size_key)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>encrypted<sp/>key<sp/>for<sp/>file<sp/>in<sp/>tcfs_read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrypt<sp/>the<sp/>file<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*decrypted_key;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>decrypted_key<sp/>=<sp/><ref refid="crypt-utils_8c_1a22f528907ee4f078e333501b747d5435" kindref="member">decrypt_string</ref><sp/>(encrypted_key,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrypt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76" kindref="member">do_crypt</ref><sp/>(path_ptr,<sp/>tmpf,<sp/><ref refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" kindref="member">DECRYPT</ref>,<sp/>decrypted_key)<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>do_crypt<sp/>cannot<sp/>decrypt<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Something<sp/>went<sp/>terribly<sp/>wrong<sp/>if<sp/>this<sp/>is<sp/>the<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_ptr<sp/>==<sp/>NULL<sp/>||<sp/>tmpf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fflush<sp/>(tmpf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>Cannot<sp/>flush<sp/>file<sp/>in<sp/>read<sp/>process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek<sp/>(tmpf,<sp/>offset,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>cannot<sp/>fseek<sp/>while<sp/>reading<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>our<sp/>tmpfile<sp/>into<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>fread<sp/>(buf,<sp/>1,<sp/><ref refid="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" kindref="member">file_size</ref><sp/>(tmpf),<sp/>tmpf);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>cannot<sp/>fread<sp/>whine<sp/>in<sp/>read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>-errno;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>fclose<sp/>(tmpf);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>fclose<sp/>(path_ptr);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>free<sp/>(encrypted_key);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>free<sp/>(decrypted_key);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" kindref="member">tcfs_write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>off_t<sp/>offset,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>write\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>FILE<sp/>*path_ptr,<sp/>*tmpf;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmpf_descriptor;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\twrite<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>path_ptr<sp/>=<sp/>fopen<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>tmpf<sp/>=<sp/>tmpfile<sp/>();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>tmpf_descriptor<sp/>=<sp/>fileno<sp/>(tmpf);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>key<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*size_key_char<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.key_len&quot;</highlight><highlight class="normal">,<sp/>size_key_char,<sp/>20)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>file<sp/>key<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>ssize_t<sp/>size_key<sp/>=<sp/>strtol<sp/>(size_key_char,<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>file<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encrypted_key</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>(size_key<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>encrypted_key[size_key]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.key&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)encrypted_key,<sp/>size_key)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>file<sp/>encrypted<sp/>key<sp/>in<sp/>tcfs<sp/>write&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrypt<sp/>the<sp/>file<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*decrypted_key<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>33);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>decrypted_key[32]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>decrypted_key<sp/>=<sp/><ref refid="crypt-utils_8c_1a22f528907ee4f078e333501b747d5435" kindref="member">decrypt_string</ref><sp/>(encrypted_key,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Something<sp/>went<sp/>terribly<sp/>wrong<sp/>if<sp/>this<sp/>is<sp/>the<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_ptr<sp/>==<sp/>NULL<sp/>||<sp/>tmpf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Something<sp/>went<sp/>terribly<sp/>wrong,<sp/>cannot<sp/>create<sp/>new<sp/>files&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>file<sp/>to<sp/>write<sp/>to<sp/>exists,<sp/>read<sp/>it<sp/>into<sp/>the<sp/>tempfile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" kindref="member">tcfs_access</ref><sp/>(fuse_path,<sp/>R_OK)<sp/>==<sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref><sp/>&amp;&amp;<sp/><ref refid="tcfs_8c_1a996d4e078d075e74e800288e6c92fd59" kindref="member">file_size</ref><sp/>(path_ptr)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76" kindref="member">do_crypt</ref><sp/>(path_ptr,<sp/>tmpf,<sp/><ref refid="crypt-utils_8h_1a36fab47015485191712a579a059a7c20" kindref="member">DECRYPT</ref>,<sp/>decrypted_key)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;do_crypt:<sp/>Cannot<sp/>cypher<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>--errno;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rewind<sp/>(path_ptr);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rewind<sp/>(tmpf);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>our<sp/>tmpfile<sp/>into<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>pwrite<sp/>(tmpf_descriptor,<sp/>buf,<sp/>size,<sp/>offset);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>res);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;pwrite:<sp/>cannot<sp/>read<sp/>tmpfile<sp/>into<sp/>the<sp/>buffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>-errno;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encrypt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76" kindref="member">do_crypt</ref><sp/>(tmpf,<sp/>path_ptr,<sp/><ref refid="crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19" kindref="member">ENCRYPT</ref>,<sp/>decrypted_key)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;do_crypt<sp/>2:<sp/>cannot<sp/>cypher<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>fclose<sp/>(tmpf);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>fclose<sp/>(path_ptr);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>free<sp/>(encrypted_key);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>free<sp/>(decrypted_key);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="tcfs_8c_1ae14ebf4581d4cbc45737ae75af82a887" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1ae14ebf4581d4cbc45737ae75af82a887" kindref="member">tcfs_statfs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>statvfs<sp/>*stbuf)</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>statfs\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>statvfs<sp/>(path,<sp/>stbuf);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" kindref="member">tcfs_setxattr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80" kindref="member">encrypt_path</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tsetxattr<sp/>encrypt_path<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>lsetxattr<sp/>(path,<sp/>name,<sp/>value,<sp/>size,<sp/>flags))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;tcfs_lsetxattr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" kindref="member">tcfs_create</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/>mode_t<sp/>mode,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>(void)fi;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>(void)mode;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>create<sp/>on<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fuse_path);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fullpath<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tcreating<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fullpath);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>FILE<sp/>*res;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>fopen<sp/>(fullpath,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>file<sp/>as<sp/>encrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" kindref="member">tcfs_setxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.encrypted&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>0)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>)<sp/></highlight><highlight class="comment">//(fsetxattr(fileno(res),<sp/>&quot;user.encrypted&quot;,<sp/>&quot;true&quot;,<sp/>4,<sp/>0)<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose<sp/>(res);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>and<sp/>set<sp/>a<sp/>new<sp/>encrypted<sp/>key<sp/>for<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>33);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>key[32]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><ref refid="crypt-utils_8c_1a8845f5705eaafda836aac91d5881876f" kindref="member">generate_key</ref><sp/>(key);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;cannot<sp/>generate<sp/>file<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97" kindref="member">is_valid_key</ref><sp/>(key)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Generated<sp/>key<sp/>size<sp/>invalid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Encrypt<sp/>the<sp/>generated<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encrypted_key_len;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encrypted_key</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="crypt-utils_8c_1aa926098a8843cf0ab6bd7eb8b3bbd2e6" kindref="member">encrypt_string</ref><sp/>(key,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>,<sp/>&amp;encrypted_key_len);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>file<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" kindref="member">tcfs_setxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.key&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)encrypted_key,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encrypted_key_len,<sp/>0)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//(fsetxattr(fileno(res),<sp/>&quot;user.key&quot;,<sp/>encrypted_key,<sp/>32,<sp/>0)<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Err<sp/>setting<sp/>key<sp/>xattr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>key<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>encrypted_key_len_char[20];</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>snprintf<sp/>(encrypted_key_len_char,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(encrypted_key_len_char),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encrypted_key_len);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" kindref="member">tcfs_setxattr</ref><sp/>(fuse_path,<sp/></highlight><highlight class="stringliteral">&quot;user.key_len&quot;</highlight><highlight class="normal">,<sp/>encrypted_key_len_char,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(encrypted_key_len_char),<sp/>0)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>)<sp/></highlight><highlight class="comment">//(fsetxattr(fileno(res),<sp/>&quot;user.key&quot;,<sp/>encrypted_key,<sp/>32,<sp/>0)<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Err<sp/>setting<sp/>key_len<sp/>xattr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>free<sp/>(encrypted_key);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>free<sp/>(key);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>fclose<sp/>(res);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" kindref="member">tcfs_release</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\trelease<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>close<sp/>(fi-&gt;fh);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)path);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)enc_fuse_path);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" kindref="member">tcfs_fsync</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isdatasync,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>fuse_file_info<sp/>*fi)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>real<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tfsync<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Synchronize<sp/>the<sp/>file&apos;s<sp/>in-core<sp/>state<sp/>with<sp/>storage<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdatasync)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>fdatasync<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)fi-&gt;fh);<sp/></highlight><highlight class="comment">//<sp/>God,<sp/>please<sp/>do<sp/>not<sp/>let<sp/>this<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>fsync<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)fi-&gt;fh);<sp/></highlight><highlight class="comment">//<sp/>Also<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)path);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199" refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tgetxattr<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>getxattr<sp/>on<sp/>%s<sp/>name:%s<sp/>size:%zu\n&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>name,<sp/>size);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>(int)lgetxattr<sp/>(path,<sp/>name,<sp/>value,<sp/>size);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>xattr<sp/>for<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" kindref="member">tcfs_listxattr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>listxattr\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tlistxattr<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>ssize_t<sp/>res<sp/>=<sp/>llistxattr<sp/>(path,<sp/>list,<sp/>size);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1L)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;listxattr<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)res;<sp/></highlight><highlight class="comment">//<sp/>FUSE<sp/>wants<sp/>an<sp/>int<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273" refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" kindref="member">tcfs_removexattr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fuse_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Called<sp/>removexattr\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_fuse_path<sp/>=<sp/><ref refid="crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644" kindref="member">encrypt_path_and_filename</ref><sp/>(fuse_path,<sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/><ref refid="tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8" kindref="member">prefix_path</ref><sp/>(enc_fuse_path,<sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref>);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\tremovexattr<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>lremovexattr<sp/>(path,<sp/>name);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;removexattr<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294" refid="tcfs_8c_1a53c12b201809f3165da8a2779d152b3a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fuse_operations<sp/><ref refid="tcfs_8c_1a53c12b201809f3165da8a2779d152b3a" kindref="member">tcfs_oper</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>.opendir<sp/>=<sp/><ref refid="tcfs_8c_1a92ebab5be45b159c2850a47a5072b58d" kindref="member">tcfs_opendir</ref>,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>.getattr<sp/>=<sp/><ref refid="tcfs_8c_1a411eac4511d0eae4ce78a2fd3d22ac8c" kindref="member">tcfs_getattr</ref>,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>.access<sp/>=<sp/><ref refid="tcfs_8c_1a76af7857833338c73b9cafdce59ca01d" kindref="member">tcfs_access</ref>,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>.readlink<sp/>=<sp/><ref refid="tcfs_8c_1acb1e081efcbf61b6f34e8bbdf7af8979" kindref="member">tcfs_readlink</ref>,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>.readdir<sp/>=<sp/><ref refid="tcfs_8c_1a1a713549c892f56a6522e6487c581d69" kindref="member">tcfs_readdir</ref>,</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>.mknod<sp/>=<sp/><ref refid="tcfs_8c_1a151f53359474a95c52f5e79d438869bd" kindref="member">tcfs_mknod</ref>,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>.mkdir<sp/>=<sp/><ref refid="tcfs_8c_1a682b553345b6d872453d1ace7339bb9e" kindref="member">tcfs_mkdir</ref>,</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>.symlink<sp/>=<sp/><ref refid="tcfs_8c_1ac1d223f9b998d5af6bec3947d03be0fc" kindref="member">tcfs_symlink</ref>,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>.unlink<sp/>=<sp/><ref refid="tcfs_8c_1ac6d3a8a626363a6f98de64e585968b09" kindref="member">tcfs_unlink</ref>,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>.rmdir<sp/>=<sp/><ref refid="tcfs_8c_1a2853593dded66a922afbdc36afb15a50" kindref="member">tcfs_rmdir</ref>,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>.rename<sp/>=<sp/><ref refid="tcfs_8c_1aee96b732a1569a607e63bac6fbe5c403" kindref="member">tcfs_rename</ref>,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>.link<sp/>=<sp/><ref refid="tcfs_8c_1a271df7bd878f5ed132e1f98487e8aebd" kindref="member">tcfs_link</ref>,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>.chmod<sp/>=<sp/><ref refid="tcfs_8c_1a3cb10be0f6147667dc0e757636e9892f" kindref="member">tcfs_chmod</ref>,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>.chown<sp/>=<sp/><ref refid="tcfs_8c_1afff31b61fa0723502cf85922816f14f9" kindref="member">tcfs_chown</ref>,</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>.truncate<sp/>=<sp/><ref refid="tcfs_8c_1a7e7f7a65b4e76cc96505d0c6d62fba9c" kindref="member">tcfs_truncate</ref>,</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>.utimens<sp/>=<sp/><ref refid="tcfs_8c_1aca5dccf989dfc270ca31e1d8b20bb60e" kindref="member">tcfs_utimens</ref>,</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>.open<sp/>=<sp/><ref refid="tcfs_8c_1af0c6a7d66189cc1e9fbfafba5255e60d" kindref="member">tcfs_open</ref>,</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>.read<sp/>=<sp/><ref refid="tcfs_8c_1a745384a010e20b082db26e16702a0129" kindref="member">tcfs_read</ref>,</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>.write<sp/>=<sp/><ref refid="tcfs_8c_1adaba2baa5a036b8f77ec187599498a66" kindref="member">tcfs_write</ref>,</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>.statfs<sp/>=<sp/><ref refid="tcfs_8c_1ae14ebf4581d4cbc45737ae75af82a887" kindref="member">tcfs_statfs</ref>,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>.create<sp/>=<sp/><ref refid="tcfs_8c_1ad973ad9d6ab7d6276bf85cd8fecd0657" kindref="member">tcfs_create</ref>,</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>.release<sp/>=<sp/><ref refid="tcfs_8c_1a1241e1fcfe6bb4a5d49d8c8d4e737bcd" kindref="member">tcfs_release</ref>,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>.fsync<sp/>=<sp/><ref refid="tcfs_8c_1a014853840814f4d5225e2e28e129f9e5" kindref="member">tcfs_fsync</ref>,</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>.setxattr<sp/>=<sp/><ref refid="tcfs_8c_1ad3c328fdcd93c8203e1ce9c785fd3a14" kindref="member">tcfs_setxattr</ref>,</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>.getxattr<sp/>=<sp/><ref refid="tcfs_8c_1a6a031c4e3c6dd59051c09789c4666657" kindref="member">tcfs_getxattr</ref>,</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>.listxattr<sp/>=<sp/><ref refid="tcfs_8c_1ae6edcf6a80467925a9a2112172395de1" kindref="member">tcfs_listxattr</ref>,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>.removexattr<sp/>=<sp/><ref refid="tcfs_8c_1acfe2c6a9467bd25a5ba6dc1a65209262" kindref="member">tcfs_removexattr</ref>,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327" refid="tcfs_8c_1a62f73ea01c816f1996aed4c66f57c4fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="tcfs_8c_1a62f73ea01c816f1996aed4c66f57c4fb" kindref="member">argp_program_version</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TCFS<sp/>Alpha&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332" refid="tcfs_8c_1aaa037e59f26a80a8a2e35e6f2364004d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="tcfs_8c_1aaa037e59f26a80a8a2e35e6f2364004d" kindref="member">argp_program_bug_address</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;carloalbertogiordano@duck.com&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337" refid="tcfs_8c_1af6164deb8a824f8cb2b9147cfc3174f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1af6164deb8a824f8cb2b9147cfc3174f5" kindref="member">doc</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>implementation<sp/>on<sp/>TCFS\ntcfs<sp/>-s<sp/>&lt;source_path&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-d<sp/>&lt;dest_path&gt;<sp/>-p<sp/>&lt;password&gt;<sp/>[fuse<sp/>arguments]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343" refid="tcfs_8c_1a91b08784b3668a8a1fbe2eec1947fb9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1a91b08784b3668a8a1fbe2eec1947fb9d" kindref="member">args_doc</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348" refid="tcfs_8c_1abc1fd3a47aea6a8944038c9100eb9135" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">argp_option<sp/><ref refid="tcfs_8c_1abc1fd3a47aea6a8944038c9100eb9135" kindref="member">options</ref>[]</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>=<sp/>{<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SOURCE&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Source<sp/>file<sp/>path&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DESTINATION&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Destination<sp/>file<sp/>path&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PASSWORD&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Password&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarguments" kindref="compound">arguments</ref></highlight></codeline>
<codeline lineno="1358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1359" refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="1360" refid="structarguments_1a29ff8292026649ead806d06e83728699" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structarguments_1a29ff8292026649ead806d06e83728699" kindref="member">destination</ref>;</highlight></codeline>
<codeline lineno="1361" refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>error_t</highlight></codeline>
<codeline lineno="1374" refid="tcfs_8c_1a35ee63236273ebb9325c444cacf00159" refkind="member"><highlight class="normal"><ref refid="tcfs_8c_1a35ee63236273ebb9325c444cacf00159" kindref="member">parse_opt</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>argp_state<sp/>*state)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarguments" kindref="compound">arguments</ref><sp/>*<ref refid="structarguments" kindref="compound">arguments</ref><sp/>=<sp/>state-&gt;input;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(key)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structarguments" kindref="compound">arguments</ref>-&gt;<ref refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" kindref="member">source</ref><sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structarguments" kindref="compound">arguments</ref>-&gt;<ref refid="structarguments_1a29ff8292026649ead806d06e83728699" kindref="member">destination</ref><sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structarguments" kindref="compound">arguments</ref>-&gt;<ref refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" kindref="member">password</ref><sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ARGP_KEY_ARG:</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ARGP_ERR_UNKNOWN;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ARGP_ERR_UNKNOWN;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401" refid="tcfs_8c_1ab70c96531b1b652d70c221cfaf3207f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structargp" kindref="compound">argp</ref><sp/><ref refid="structargp" kindref="compound">argp</ref><sp/>=<sp/>{<sp/><ref refid="tcfs_8c_1abc1fd3a47aea6a8944038c9100eb9135" kindref="member">options</ref>,<sp/><ref refid="tcfs_8c_1a35ee63236273ebb9325c444cacf00159" kindref="member">parse_opt</ref>,<sp/><ref refid="tcfs_8c_1a91b08784b3668a8a1fbe2eec1947fb9d" kindref="member">args_doc</ref>,<sp/><ref refid="tcfs_8c_1af6164deb8a824f8cb2b9147cfc3174f5" kindref="member">doc</ref>,<sp/>0,<sp/>NULL,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412" refid="tcfs_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"><ref refid="namespacemain" kindref="compound">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>umask<sp/>(0);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarguments" kindref="compound">arguments</ref><sp/><ref refid="structarguments" kindref="compound">arguments</ref>;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" kindref="member">source</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a29ff8292026649ead806d06e83728699" kindref="member">destination</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" kindref="member">password</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>argp_parse<sp/>(&amp;<ref refid="structargp" kindref="compound">argp</ref>,<sp/>argc,<sp/>argv,<sp/>0,<sp/>0,<sp/>&amp;<ref refid="structarguments" kindref="compound">arguments</ref>);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" kindref="member">source</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a29ff8292026649ead806d06e83728699" kindref="member">destination</ref><sp/>==<sp/>NULL</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" kindref="member">password</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Err:<sp/>You<sp/>need<sp/>to<sp/>specify<sp/>at<sp/>least<sp/>3<sp/>arguments\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="tcfs_8c_1ae05f9a61e45517eaca7278909e7959ec" kindref="member">ERR_inval_arg_len</ref>;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Source:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Destination:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a29ff8292026649ead806d06e83728699" kindref="member">destination</ref>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><ref refid="tcfs_8c_1ab33cf7205359ee0f91488c87df1577a0" kindref="member">root_path</ref><sp/>=<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a53fda996abfaa79d9c6376292bcbd5da" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97" kindref="member">is_valid_key</ref><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" kindref="member">password</ref>)<sp/>==<sp/><ref refid="tcfs_8c_1afa4c673b6383ea6994b5e5c95a7cc213" kindref="member">TCFS_SUCCESS</ref>)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;ERR:<sp/>Inserted<sp/>key<sp/>not<sp/>valid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="tcfs_8c_1ac9de09fb2e7784a5778dec8a36db8ffa" kindref="member">ERR_inval_key</ref>;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fuse_args<sp/>args_fuse<sp/>=<sp/>FUSE_ARGS_INIT<sp/>(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>fuse_opt_add_arg<sp/>(&amp;args_fuse,<sp/></highlight><highlight class="stringliteral">&quot;./tcfs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>fuse_opt_add_arg<sp/>(&amp;args_fuse,<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a29ff8292026649ead806d06e83728699" kindref="member">destination</ref>);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>fuse_opt_add_arg<sp/>(&amp;args_fuse,</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-f&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>is<sp/>forced<sp/>for<sp/>now,<sp/>but<sp/>will<sp/>be<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>options<sp/>in<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>fuse_opt_add_arg<sp/>(&amp;args_fuse,</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-s&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>is<sp/>forced<sp/>for<sp/>now,<sp/>but<sp/>will<sp/>be<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>options<sp/>in<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>what<sp/>we<sp/>are<sp/>passing<sp/>to<sp/>fuse<sp/>TODO:<sp/>This<sp/>will<sp/>be<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>args_fuse.argc;<sp/>i++)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>args_fuse.argv[i]);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><ref refid="tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b" kindref="member">logMessage</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><ref refid="tcfs_8c_1a9dbb300e28bc21c8dab41b01883918eb" kindref="member">password</ref><sp/>=<sp/><ref refid="structarguments" kindref="compound">arguments</ref>.<ref refid="structarguments_1a1efc30f669fcaf8c5943cbb3e8124ee7" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fuse_main<sp/>(args_fuse.argc,<sp/>args_fuse.argv,<sp/>&amp;<ref refid="tcfs_8c_1a53c12b201809f3165da8a2779d152b3a" kindref="member">tcfs_oper</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="userspace-module/tcfs.c"/>
  </compounddef>
</doxygen>
