<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_redis_8c_source" xml:lang="en-US">
<title>redis.c</title>
<indexterm><primary>daemon/daemon_utils/common_utils/db/redis.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_redis_8c_source_1l00001"/>00001 
<anchor xml:id="_redis_8c_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;redis.h&quot;</emphasis>
<anchor xml:id="_redis_8c_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;../json/json_tools.h&quot;</emphasis>
<anchor xml:id="_redis_8c_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;../print/print_utils.h&quot;</emphasis>
<anchor xml:id="_redis_8c_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;hiredis/hiredis.h&gt;</emphasis>
<anchor xml:id="_redis_8c_source_1l00013"/>00013 
<anchor xml:id="_redis_8c_source_1l00020"/>00020 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;HOST[]&#32;=&#32;<emphasis role="stringliteral">&quot;127.0.0.1&quot;</emphasis>;
<anchor xml:id="_redis_8c_source_1l00027"/><link linkend="_redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2">00027</link> <emphasis role="preprocessor">#define&#32;PORT&#32;6380</emphasis>
<anchor xml:id="_redis_8c_source_1l00028"/>00028 
<anchor xml:id="_redis_8c_source_1l00034"/><link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">00034</link> redisContext&#32;*<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>;
<anchor xml:id="_redis_8c_source_1l00035"/>00035 
<anchor xml:id="_redis_8c_source_1l00041"/>00041 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_redis_8c_source_1l00042"/><link linkend="_redis_8c_1a7b5eb746d92734b57a71ce552363283d">00042</link> <link linkend="_redis_8c_1a7b5eb746d92734b57a71ce552363283d">print_all_keys</link>&#32;()
<anchor xml:id="_redis_8c_source_1l00043"/>00043 {
<anchor xml:id="_redis_8c_source_1l00044"/>00044 &#32;&#32;redisReply&#32;*keys_reply&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;KEYS&#32;*&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00045"/>00045 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keys_reply)
<anchor xml:id="_redis_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keys_reply-&gt;type&#32;==&#32;REDIS_REPLY_ARRAY)
<anchor xml:id="_redis_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;keys_reply-&gt;elements;&#32;++i)
<anchor xml:id="_redis_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;\tKey:&#32;%s&quot;</emphasis>,&#32;keys_reply-&gt;element[i]-&gt;str);
<anchor xml:id="_redis_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;retrieving&#32;keys:&#32;%s&quot;</emphasis>,&#32;keys_reply-&gt;str);
<anchor xml:id="_redis_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;freeReplyObject&#32;(keys_reply);
<anchor xml:id="_redis_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00060"/>00060 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;executing&#32;KEYS&#32;command&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00064"/>00064 }
<anchor xml:id="_redis_8c_source_1l00071"/>00071 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_redis_8c_source_1l00072"/><link linkend="_redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea">00072</link> <link linkend="_redis_8c_1a1f6dc2f98a71a88567fe11fd9e2585ea">init_context</link>&#32;()
<anchor xml:id="_redis_8c_source_1l00073"/>00073 {
<anchor xml:id="_redis_8c_source_1l00074"/>00074 &#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;reinit&#32;the&#32;context</emphasis>
<anchor xml:id="_redis_8c_source_1l00075"/>00075 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>&#32;!=&#32;NULL)
<anchor xml:id="_redis_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_redis_8c_source_1l00077"/>00077 
<anchor xml:id="_redis_8c_source_1l00078"/>00078 &#32;&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>&#32;=&#32;redisConnect&#32;(HOST,&#32;<link linkend="_redis_8c_1a614217d263be1fb1a5f76e2ff7be19a2">PORT</link>);
<anchor xml:id="_redis_8c_source_1l00079"/>00079 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>-&gt;err)
<anchor xml:id="_redis_8c_source_1l00080"/>00080 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Connection&#32;error:&#32;%s&quot;</emphasis>,&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>-&gt;errstr);
<anchor xml:id="_redis_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_redis_8c_source_1l00085"/>00085 }
<anchor xml:id="_redis_8c_source_1l00091"/>00091 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_redis_8c_source_1l00092"/><link linkend="_redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a">00092</link> <link linkend="_redis_8c_1ae19d8c90888a6ed078d6e835bb11e67a">free_context</link>&#32;()
<anchor xml:id="_redis_8c_source_1l00093"/>00093 {
<anchor xml:id="_redis_8c_source_1l00094"/>00094 &#32;&#32;redisFree&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>);
<anchor xml:id="_redis_8c_source_1l00095"/>00095 }
<anchor xml:id="_redis_8c_source_1l00103"/>00103 <link linkend="_structqm__user">qm_user</link>&#32;*
<anchor xml:id="_redis_8c_source_1l00104"/><link linkend="_redis_8c_1a8e6e1687d6351741ac3e353d23425f71">00104</link> <link linkend="_redis_8c_1a8e6e1687d6351741ac3e353d23425f71">json_to_qm_user</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*json)
<anchor xml:id="_redis_8c_source_1l00105"/>00105 {
<anchor xml:id="_redis_8c_source_1l00106"/>00106 &#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;DEBUG:&#32;Converting&#32;%s&quot;</emphasis>,&#32;json);
<anchor xml:id="_redis_8c_source_1l00107"/>00107 &#32;&#32;qm_type&#32;type;
<anchor xml:id="_redis_8c_source_1l00108"/>00108 &#32;&#32;<emphasis role="comment">//&#32;Redis&#32;return&#32;the&#32;value&#32;as&#32;json:{actual&#32;json}&#32;so&#32;we&#32;need&#32;to&#32;eliminate&#32;the</emphasis>
<anchor xml:id="_redis_8c_source_1l00109"/>00109 &#32;&#32;<emphasis role="comment">//&#32;json:&#32;from&#32;the&#32;string</emphasis>
<anchor xml:id="_redis_8c_source_1l00110"/>00110 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*res&#32;=&#32;strchr&#32;(json,&#32;<emphasis role="charliteral">&apos;:&apos;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00111"/>00111 &#32;&#32;res++;&#32;<emphasis role="comment">//&#32;Skip&#32;the&#32;:&#32;char</emphasis>
<anchor xml:id="_redis_8c_source_1l00112"/>00112 &#32;&#32;<link linkend="_structqm__user">qm_user</link>&#32;*user&#32;=&#32;(<link linkend="_structqm__user">qm_user</link>&#32;*)string_to_struct&#32;(res,&#32;&amp;type);
<anchor xml:id="_redis_8c_source_1l00113"/>00113 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;user;
<anchor xml:id="_redis_8c_source_1l00114"/>00114 }
<anchor xml:id="_redis_8c_source_1l00121"/>00121 <link linkend="_structqm__user">qm_user</link>&#32;*
<anchor xml:id="_redis_8c_source_1l00122"/><link linkend="_redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9">00122</link> <link linkend="_redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9">get_user_by_pid</link>&#32;(pid_t&#32;pid)
<anchor xml:id="_redis_8c_source_1l00123"/>00123 {
<anchor xml:id="_redis_8c_source_1l00124"/>00124 &#32;&#32;<link linkend="_structqm__user">qm_user</link>&#32;*user&#32;=&#32;NULL;
<anchor xml:id="_redis_8c_source_1l00125"/>00125 &#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;the&#32;JSON&#32;data&#32;from&#32;Redis&#32;hash</emphasis>
<anchor xml:id="_redis_8c_source_1l00126"/>00126 &#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;EXECUTING&#32;\&quot;GET&#32;pid:%d\&quot;&quot;</emphasis>,&#32;pid);
<anchor xml:id="_redis_8c_source_1l00127"/>00127 &#32;&#32;redisReply&#32;*luaReply
<anchor xml:id="_redis_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;GET&#32;pid:%d&quot;</emphasis>,&#32;pid);
<anchor xml:id="_redis_8c_source_1l00129"/>00129 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(luaReply)
<anchor xml:id="_redis_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(luaReply-&gt;type&#32;==&#32;REDIS_REPLY_STRING)
<anchor xml:id="_redis_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user&#32;=&#32;<link linkend="_redis_8c_1a8e6e1687d6351741ac3e353d23425f71">json_to_qm_user</link>&#32;(luaReply-&gt;str);
<anchor xml:id="_redis_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(user)
<anchor xml:id="_redis_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;Successful&#32;retrieval!&#32;PID:&#32;%d,&#32;User:&#32;%s&quot;</emphasis>,&#32;user-&gt;<link linkend="_structqm__user_1aa69546c3a6a2124be9f964329c951a84">pid</link>,
<anchor xml:id="_redis_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user-&gt;<link linkend="_structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4">user</link>);
<anchor xml:id="_redis_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;converting&#32;JSON&#32;to&#32;struct&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Reply&#32;type&#32;error&#32;%d&#32;-&gt;&#32;executing&#32;HGET\n\tErrString:&#32;%s&quot;</emphasis>,
<anchor xml:id="_redis_8c_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;luaReply-&gt;type,&#32;luaReply-&gt;str,&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>-&gt;errstr);
<anchor xml:id="_redis_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;freeReplyObject&#32;(luaReply);
<anchor xml:id="_redis_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00151"/>00151 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Reply&#32;error&#32;executing&#32;HGET\n\tErrString:&#32;%s&quot;</emphasis>,
<anchor xml:id="_redis_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>-&gt;errstr);
<anchor xml:id="_redis_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;user;
<anchor xml:id="_redis_8c_source_1l00157"/>00157 }
<anchor xml:id="_redis_8c_source_1l00164"/>00164 <link linkend="_structqm__user">qm_user</link>&#32;*
<anchor xml:id="_redis_8c_source_1l00165"/><link linkend="_redis_8c_1a73711c0a9d0060337409d15dc44f5ad1">00165</link> <link linkend="_redis_8c_1a73711c0a9d0060337409d15dc44f5ad1">get_user_by_name</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*name)
<anchor xml:id="_redis_8c_source_1l00166"/>00166 {
<anchor xml:id="_redis_8c_source_1l00167"/>00167 &#32;&#32;<link linkend="_structqm__user">qm_user</link>&#32;*user&#32;=&#32;NULL;
<anchor xml:id="_redis_8c_source_1l00168"/>00168 &#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;the&#32;JSON&#32;data&#32;from&#32;Redis&#32;hash</emphasis>
<anchor xml:id="_redis_8c_source_1l00169"/>00169 &#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;EXECUTING&#32;\&quot;GET&#32;name:%d\&quot;&quot;</emphasis>,&#32;name);
<anchor xml:id="_redis_8c_source_1l00170"/>00170 &#32;&#32;redisReply&#32;*luaReply
<anchor xml:id="_redis_8c_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;GET&#32;name:%d&quot;</emphasis>,&#32;name);
<anchor xml:id="_redis_8c_source_1l00172"/>00172 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(luaReply)
<anchor xml:id="_redis_8c_source_1l00173"/>00173 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(luaReply-&gt;type&#32;==&#32;REDIS_REPLY_STRING)
<anchor xml:id="_redis_8c_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user&#32;=&#32;<link linkend="_redis_8c_1a8e6e1687d6351741ac3e353d23425f71">json_to_qm_user</link>&#32;(luaReply-&gt;str);
<anchor xml:id="_redis_8c_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(user)
<anchor xml:id="_redis_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;Successful&#32;retrieval!&#32;PID:&#32;%d,&#32;User:&#32;%s&quot;</emphasis>,&#32;user-&gt;<link linkend="_structqm__user_1aa69546c3a6a2124be9f964329c951a84">pid</link>,
<anchor xml:id="_redis_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user-&gt;<link linkend="_structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4">user</link>);
<anchor xml:id="_redis_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;converting&#32;JSON&#32;to&#32;struct&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Reply&#32;type&#32;error&#32;%d&#32;-&gt;&#32;executing&#32;HGET\n\tErrString:&#32;%s&quot;</emphasis>,
<anchor xml:id="_redis_8c_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;luaReply-&gt;type,&#32;luaReply-&gt;str,&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>-&gt;errstr);
<anchor xml:id="_redis_8c_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;freeReplyObject&#32;(luaReply);
<anchor xml:id="_redis_8c_source_1l00193"/>00193 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00194"/>00194 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_redis_8c_source_1l00195"/>00195 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Reply&#32;error&#32;executing&#32;HGET\n\tErrString:&#32;%s&quot;</emphasis>,
<anchor xml:id="_redis_8c_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>-&gt;errstr);
<anchor xml:id="_redis_8c_source_1l00198"/>00198 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00199"/>00199 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;user;
<anchor xml:id="_redis_8c_source_1l00200"/>00200 }
<anchor xml:id="_redis_8c_source_1l00210"/>00210 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_redis_8c_source_1l00211"/><link linkend="_redis_8c_1ac9878ee09b53700eb08c1f175873c30b">00211</link> <link linkend="_redis_8c_1ac9878ee09b53700eb08c1f175873c30b">insert</link>&#32;(<link linkend="_structqm__user">qm_user</link>&#32;*user)
<anchor xml:id="_redis_8c_source_1l00212"/>00212 {
<anchor xml:id="_redis_8c_source_1l00213"/>00213 &#32;&#32;<emphasis role="comment">//&#32;Convert&#32;the&#32;structure&#32;to&#32;JSON</emphasis>
<anchor xml:id="_redis_8c_source_1l00214"/>00214 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*json&#32;=&#32;struct_to_json&#32;(USER,&#32;user);
<anchor xml:id="_redis_8c_source_1l00215"/>00215 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!json)
<anchor xml:id="_redis_8c_source_1l00216"/>00216 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;converting&#32;qm_user&#32;to&#32;JSON&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00219"/>00219 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00220"/>00220 &#32;&#32;<emphasis role="comment">//&#32;Save&#32;to&#32;Redis&#32;with&#32;key&#32;&quot;pid_str&quot;</emphasis>
<anchor xml:id="_redis_8c_source_1l00221"/>00221 &#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;\tDB:&#32;\&quot;SET&#32;pid:%d&#32;json:%s\&quot;&quot;</emphasis>,&#32;user-&gt;<link linkend="_structqm__user_1aa69546c3a6a2124be9f964329c951a84">pid</link>,&#32;json);
<anchor xml:id="_redis_8c_source_1l00222"/>00222 &#32;&#32;redisReply&#32;*reply_pid&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(
<anchor xml:id="_redis_8c_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;SET&#32;pid:%d&#32;json:%s&quot;</emphasis>,&#32;user-&gt;<link linkend="_structqm__user_1aa69546c3a6a2124be9f964329c951a84">pid</link>,&#32;json);
<anchor xml:id="_redis_8c_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!reply_pid)
<anchor xml:id="_redis_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;saving&#32;to&#32;Redis&#32;(pid)&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;free&#32;((<emphasis role="keywordtype">void</emphasis>&#32;*)json);
<anchor xml:id="_redis_8c_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00229"/>00229 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00230"/>00230 &#32;&#32;freeReplyObject&#32;(reply_pid);
<anchor xml:id="_redis_8c_source_1l00231"/>00231 
<anchor xml:id="_redis_8c_source_1l00232"/>00232 &#32;&#32;<emphasis role="comment">//&#32;Save&#32;to&#32;Redis&#32;with&#32;key&#32;&quot;user&quot;</emphasis>
<anchor xml:id="_redis_8c_source_1l00233"/>00233 &#32;&#32;redisReply&#32;*reply_user&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(
<anchor xml:id="_redis_8c_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;SET&#32;user:%s&#32;json:%s&quot;</emphasis>,&#32;user-&gt;<link linkend="_structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4">user</link>,&#32;json);
<anchor xml:id="_redis_8c_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!reply_user)
<anchor xml:id="_redis_8c_source_1l00236"/>00236 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;saving&#32;to&#32;Redis&#32;(user)&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;free&#32;((<emphasis role="keywordtype">void</emphasis>&#32;*)json);
<anchor xml:id="_redis_8c_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00240"/>00240 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00241"/>00241 &#32;&#32;freeReplyObject&#32;(reply_user);
<anchor xml:id="_redis_8c_source_1l00242"/>00242 &#32;&#32;<emphasis role="comment">//&#32;Free&#32;the&#32;allocated&#32;JSON&#32;memory</emphasis>
<anchor xml:id="_redis_8c_source_1l00243"/>00243 &#32;&#32;free&#32;((<emphasis role="keywordtype">void</emphasis>&#32;*)json);&#32;<emphasis role="comment">//&#32;Discard&#32;qualifier</emphasis>
<anchor xml:id="_redis_8c_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_redis_8c_source_1l00245"/>00245 }
<anchor xml:id="_redis_8c_source_1l00255"/>00255 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_redis_8c_source_1l00256"/><link linkend="_redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216">00256</link> <link linkend="_redis_8c_1a6b18d7ad2f1e8275106a5b39c0c7d216">remove_by_pid</link>&#32;(pid_t&#32;pid)
<anchor xml:id="_redis_8c_source_1l00257"/>00257 {
<anchor xml:id="_redis_8c_source_1l00258"/>00258 &#32;&#32;<link linkend="_structqm__user">qm_user</link>&#32;*user_tmp&#32;=&#32;<link linkend="_redis_8c_1af0bf1bfc99afc940619371e3c76ab4f9">get_user_by_pid</link>&#32;(pid);
<anchor xml:id="_redis_8c_source_1l00259"/>00259 &#32;&#32;<emphasis role="comment">//&#32;Remove&#32;the&#32;structure&#32;by&#32;PID</emphasis>
<anchor xml:id="_redis_8c_source_1l00260"/>00260 &#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;\tDB:&#32;\&quot;DEL&#32;pid:%d\&quot;&quot;</emphasis>,&#32;pid);
<anchor xml:id="_redis_8c_source_1l00261"/>00261 &#32;&#32;redisReply&#32;*reply_pid
<anchor xml:id="_redis_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;DEL&#32;pid:%d&quot;</emphasis>,&#32;pid);
<anchor xml:id="_redis_8c_source_1l00263"/>00263 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!reply_pid)
<anchor xml:id="_redis_8c_source_1l00264"/>00264 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;removing&#32;structure&#32;by&#32;PID&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00268"/>00268 &#32;&#32;freeReplyObject&#32;(reply_pid);
<anchor xml:id="_redis_8c_source_1l00269"/>00269 &#32;&#32;<emphasis role="comment">//&#32;Also&#32;remove&#32;the&#32;corresponding&#32;key&#32;by&#32;name</emphasis>
<anchor xml:id="_redis_8c_source_1l00270"/>00270 &#32;&#32;<link linkend="_print__utils_8c_1a491dc14c94ed8cf706bb54880c50b2d0">print_msg</link>&#32;(<emphasis role="stringliteral">&quot;\tDB:&#32;\&quot;DEL&#32;user:%s\&quot;&quot;</emphasis>,&#32;user_tmp-&gt;<link linkend="_structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4">user</link>);
<anchor xml:id="_redis_8c_source_1l00271"/>00271 &#32;&#32;redisReply&#32;*reply_name
<anchor xml:id="_redis_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;DEL&#32;user:%s&quot;</emphasis>,&#32;user_tmp-&gt;<link linkend="_structqm__user_1a6c52d68724b65831ba6d95f3d7448ff4">user</link>);
<anchor xml:id="_redis_8c_source_1l00273"/>00273 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!reply_name)
<anchor xml:id="_redis_8c_source_1l00274"/>00274 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;removing&#32;key&#32;by&#32;name&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00277"/>00277 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00278"/>00278 &#32;&#32;free&#32;(user_tmp);
<anchor xml:id="_redis_8c_source_1l00279"/>00279 &#32;&#32;freeReplyObject&#32;(reply_name);
<anchor xml:id="_redis_8c_source_1l00280"/>00280 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_redis_8c_source_1l00281"/>00281 }
<anchor xml:id="_redis_8c_source_1l00291"/>00291 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_redis_8c_source_1l00292"/><link linkend="_redis_8c_1a2678c0575f2b6c944fd261255aeaebff">00292</link> <link linkend="_redis_8c_1a2678c0575f2b6c944fd261255aeaebff">remove_by_user</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*name)
<anchor xml:id="_redis_8c_source_1l00293"/>00293 {
<anchor xml:id="_redis_8c_source_1l00294"/>00294 &#32;&#32;<link linkend="_structqm__user">qm_user</link>&#32;*user_tmp&#32;=&#32;<link linkend="_redis_8c_1a73711c0a9d0060337409d15dc44f5ad1">get_user_by_name</link>&#32;(name);
<anchor xml:id="_redis_8c_source_1l00295"/>00295 &#32;&#32;<emphasis role="comment">//&#32;Remove&#32;the&#32;structure&#32;by&#32;name</emphasis>
<anchor xml:id="_redis_8c_source_1l00296"/>00296 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;key_name[64];&#32;<emphasis role="comment">//&#32;Adjust&#32;the&#32;size&#32;as&#32;needed</emphasis>
<anchor xml:id="_redis_8c_source_1l00297"/>00297 &#32;&#32;snprintf&#32;(key_name,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(key_name),&#32;<emphasis role="stringliteral">&quot;user:%s&quot;</emphasis>,&#32;name);
<anchor xml:id="_redis_8c_source_1l00298"/>00298 &#32;&#32;redisReply&#32;*reply_name
<anchor xml:id="_redis_8c_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;DEL&#32;%s&quot;</emphasis>,&#32;key_name);
<anchor xml:id="_redis_8c_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!reply_name)
<anchor xml:id="_redis_8c_source_1l00301"/>00301 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;removing&#32;structure&#32;by&#32;name&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00305"/>00305 &#32;&#32;freeReplyObject&#32;(reply_name);
<anchor xml:id="_redis_8c_source_1l00306"/>00306 &#32;&#32;<emphasis role="comment">//&#32;Also&#32;remove&#32;the&#32;corresponding&#32;key&#32;by&#32;PID</emphasis>
<anchor xml:id="_redis_8c_source_1l00307"/>00307 &#32;&#32;redisReply&#32;*reply_pid
<anchor xml:id="_redis_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(redisReply&#32;*)redisCommand&#32;(<link linkend="_redis_8c_1a71ea645922f3e5dcc69b644656c79a99">context</link>,&#32;<emphasis role="stringliteral">&quot;DEL&#32;%d&quot;</emphasis>,&#32;user_tmp-&gt;<link linkend="_structqm__user_1aa69546c3a6a2124be9f964329c951a84">pid</link>);
<anchor xml:id="_redis_8c_source_1l00309"/>00309 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!reply_pid)
<anchor xml:id="_redis_8c_source_1l00310"/>00310 &#32;&#32;&#32;&#32;{
<anchor xml:id="_redis_8c_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_print__utils_8c_1a650ab060ffe5dbc6c1a968a9cae3bded">print_err</link>&#32;(<emphasis role="stringliteral">&quot;Error&#32;removing&#32;key&#32;by&#32;PID&quot;</emphasis>);
<anchor xml:id="_redis_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_redis_8c_source_1l00313"/>00313 &#32;&#32;&#32;&#32;}
<anchor xml:id="_redis_8c_source_1l00314"/>00314 &#32;&#32;freeReplyObject&#32;(reply_pid);
<anchor xml:id="_redis_8c_source_1l00315"/>00315 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_redis_8c_source_1l00316"/>00316 }
</programlisting></section>
