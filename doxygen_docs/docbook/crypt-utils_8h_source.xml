<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_crypt-utils_8h_source" xml:lang="en-US">
<title>crypt-utils.h</title>
<indexterm><primary>userspace-module/utils/crypt-utils/crypt-utils.h</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="_crypt-utils_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;sys/mman.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00006"/>00006 
<anchor xml:id="_crypt-utils_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;openssl/evp.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;openssl/aes.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;openssl/rand.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;openssl/bio.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;openssl/buffer.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00012"/>00012 
<anchor xml:id="_crypt-utils_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;../tcfs_utils/tcfs_utils.h&quot;</emphasis>&#32;<emphasis role="comment">//TODO:&#32;Remove,&#32;for&#32;debugging&#32;only</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00014"/>00014 
<anchor xml:id="_crypt-utils_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#define&#32;BLOCKSIZE&#32;1024</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#define&#32;ENCRYPT&#32;1</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00017"/>00017 <emphasis role="preprocessor">#define&#32;DECRYPT&#32;0</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00018"/>00018 
<anchor xml:id="_crypt-utils_8h_source_1l00019"/>00019 <emphasis role="comment">/*&#32;int&#32;do_crypt(FILE*&#32;in,&#32;FILE*&#32;out,&#32;int&#32;action,&#32;char*&#32;key_str)</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;Purpose:&#32;Perform&#32;cipher&#32;on&#32;in&#32;File*&#32;and&#32;place&#32;result&#32;in&#32;out&#32;File*</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00021"/>00021 <emphasis role="comment">&#32;*&#32;Args:&#32;FILE*&#32;in&#32;&#32;&#32;&#32;&#32;&#32;:&#32;Input&#32;File&#32;Pointer</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;FILE*&#32;out&#32;&#32;&#32;&#32;&#32;:&#32;Output&#32;File&#32;Pointer</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;action&#32;&#32;&#32;&#32;:&#32;Cipher&#32;action&#32;(1=encrypt,&#32;0=decrypt,&#32;-1=pass-through&#32;(copy))</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00024"/>00024 <emphasis role="comment">&#32;*&#32;&#32;&#32;unsigned&#32;char&#32;*key_str&#32;:&#32;C-string&#32;containing&#32;passphrase&#32;from&#32;which&#32;key&#32;is&#32;derived</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;Return:&#32;0&#32;on&#32;error,&#32;1&#32;on&#32;success</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00027"/>00027 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;do_crypt(FILE*&#32;in,&#32;FILE*&#32;out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;action,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key_str);
<anchor xml:id="_crypt-utils_8h_source_1l00028"/>00028 
<anchor xml:id="_crypt-utils_8h_source_1l00029"/>00029 <emphasis role="comment">/*&#32;void&#32;generate_key(unsigned&#32;char&#32;*destination)</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00030"/>00030 <emphasis role="comment">&#32;*&#32;Purpose:&#32;Generate&#32;an&#32;AES&#32;256&#32;key&#32;of&#32;size&#32;32&#32;bytes</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00031"/>00031 <emphasis role="comment">&#32;*&#32;Args:&#32;unsigned&#32;char&#32;*destination&#32;&#32;&#32;&#32;:&#32;The&#32;destination&#32;for&#32;the&#32;generated&#32;key.&#32;it&#32;must&#32;be&#32;33&#32;bytes&#32;long&#32;to&#32;account&#32;for&#32;a&#32;\0</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00032"/>00032 <emphasis role="comment">&#32;*&#32;Return:&#32;void,&#32;if&#32;the&#32;generation&#32;failed&#32;an&#32;error&#32;will&#32;be&#32;thrown</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00033"/>00033 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00034"/>00034 <emphasis role="keywordtype">void</emphasis>&#32;generate_key(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*destination);
<anchor xml:id="_crypt-utils_8h_source_1l00035"/>00035 
<anchor xml:id="_crypt-utils_8h_source_1l00036"/>00036 <emphasis role="comment">/*unsigned&#32;char*&#32;encrypt_string(unsigned&#32;char*&#32;plaintext,&#32;const&#32;char*&#32;key,&#32;int&#32;*encrypted_len)</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00037"/>00037 <emphasis role="comment">&#32;*&#32;Purpose:&#32;Encrypt&#32;a&#32;string&#32;with&#32;AES-256</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00038"/>00038 <emphasis role="comment">&#32;*&#32;Args:&#32;unsigned&#32;char*&#32;plaintext&#32;&#32;&#32;:&#32;The&#32;plaintext&#32;to&#32;be&#32;encrypted</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00039"/>00039 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;char*&#32;key&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;The&#32;key&#32;for&#32;the&#32;encryption</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00040"/>00040 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;*encrypted_len&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;This&#32;will&#32;be&#32;filled&#32;with&#32;the&#32;encrypted&#32;text&#32;length</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00041"/>00041 <emphasis role="comment">&#32;*&#32;Return:&#32;The&#32;encrypted&#32;string&#32;+&#32;\0.&#32;On&#32;error&#32;null&#32;is&#32;returned</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00042"/>00042 <emphasis role="comment">&#32;*&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00043"/>00043 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;encrypt_string(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;plaintext,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*encrypted_len);
<anchor xml:id="_crypt-utils_8h_source_1l00044"/>00044 
<anchor xml:id="_crypt-utils_8h_source_1l00045"/>00045 <emphasis role="comment">/*unsigned&#32;char*&#32;decrypt_string(unsigned&#32;char*&#32;base64_ciphertext,&#32;const&#32;char*&#32;key);</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00046"/>00046 <emphasis role="comment">&#32;*&#32;Purpose:&#32;Decrypt&#32;a&#32;string&#32;with&#32;AES-256</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00047"/>00047 <emphasis role="comment">&#32;*&#32;Args:&#32;unsigned&#32;char*&#32;base64_ciphertext&#32;&#32;&#32;:&#32;The&#32;cyphertext&#32;to&#32;be&#32;decrypted</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00048"/>00048 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;char*&#32;key&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;The&#32;key&#32;for&#32;the&#32;decryption</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00049"/>00049 <emphasis role="comment">&#32;*&#32;Return:&#32;The&#32;decrypted&#32;string&#32;+&#32;\0.&#32;On&#32;error&#32;null&#32;is&#32;returned</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00050"/>00050 <emphasis role="comment">&#32;*&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00051"/>00051 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;decrypt_string(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;base64_ciphertext,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;key);
<anchor xml:id="_crypt-utils_8h_source_1l00052"/>00052 
<anchor xml:id="_crypt-utils_8h_source_1l00053"/>00053 <emphasis role="comment">/*int&#32;is_valid_key(const&#32;unsigned&#32;char*&#32;key);</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00054"/>00054 <emphasis role="comment">&#32;*&#32;Purpose:&#32;Check&#32;if&#32;a&#32;AES-256&#32;key&#32;is&#32;valid</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00055"/>00055 <emphasis role="comment">&#32;*&#32;Args:&#32;unsigned&#32;char*&#32;key&#32;&#32;&#32;:&#32;The&#32;key&#32;to&#32;be&#32;checked</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00056"/>00056 <emphasis role="comment">&#32;*&#32;Return:&#32;1&#32;if&#32;the&#32;key&#32;is&#32;valid,&#32;0&#32;if&#32;it&#32;is&#32;invalid</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00057"/>00057 <emphasis role="comment">&#32;*&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00058"/>00058 <emphasis role="keywordtype">int</emphasis>&#32;is_valid_key(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;key);
<anchor xml:id="_crypt-utils_8h_source_1l00059"/>00059 
<anchor xml:id="_crypt-utils_8h_source_1l00060"/>00060 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00061"/>00061 <emphasis role="comment">int&#32;rebuild_key(char&#32;*key,&#32;char&#32;*cert,&#32;char&#32;*dest);</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00062"/>00062 <emphasis role="comment">*/</emphasis>
</programlisting></section>
