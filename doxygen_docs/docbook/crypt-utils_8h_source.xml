<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_crypt-utils_8h_source" xml:lang="en-US">
<title>crypt-utils.h</title>
<indexterm><primary>userspace-module/utils/crypt-utils/crypt-utils.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_crypt-utils_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;sys/mman.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00006"/>00006 
<anchor xml:id="_crypt-utils_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;openssl/aes.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;openssl/bio.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;openssl/buffer.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;openssl/evp.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;openssl/rand.h&gt;</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00012"/>00012 
<anchor xml:id="_crypt-utils_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;../tcfs_utils/tcfs_utils.h&quot;</emphasis>&#32;<emphasis role="comment">//TODO:&#32;Remove,&#32;for&#32;debugging&#32;only</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00014"/>00014 
<anchor xml:id="_crypt-utils_8h_source_1l00015"/><link linkend="_crypt-utils_8h_1afcf795f5a96fd55561abe69f56224630">00015</link> <emphasis role="preprocessor">#define&#32;BLOCKSIZE&#32;1024</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00020"/><link linkend="_crypt-utils_8h_1a1cb0c60ca582db30ae87362ca43e8c19">00020</link> <emphasis role="preprocessor">#define&#32;ENCRYPT&#32;1</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00025"/><link linkend="_crypt-utils_8h_1a36fab47015485191712a579a059a7c20">00025</link> <emphasis role="preprocessor">#define&#32;DECRYPT&#32;0</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00026"/>00026 
<anchor xml:id="_crypt-utils_8h_source_1l00027"/>00027 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_crypt-utils_8h_1a94b5b388b3f00982ccee72b192077e76">do_crypt</link>&#32;(FILE&#32;*in,&#32;FILE&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;action,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key_str);
<anchor xml:id="_crypt-utils_8h_source_1l00028"/>00028 
<anchor xml:id="_crypt-utils_8h_source_1l00029"/>00029 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_crypt-utils_8h_1a8845f5705eaafda836aac91d5881876f">generate_key</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*destination);
<anchor xml:id="_crypt-utils_8h_source_1l00030"/>00030 
<anchor xml:id="_crypt-utils_8h_source_1l00031"/>00031 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_crypt-utils_8h_1a8bf9483dae26e9c0a1c45d77b8f1dce8">encrypt_string</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*plaintext,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key,
<anchor xml:id="_crypt-utils_8h_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*encrypted_len);
<anchor xml:id="_crypt-utils_8h_source_1l00033"/>00033 
<anchor xml:id="_crypt-utils_8h_source_1l00034"/>00034 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_crypt-utils_8h_1a02ee5ac64d2d2d441edcca915e480503">decrypt_string</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*base64_ciphertext,
<anchor xml:id="_crypt-utils_8h_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key);
<anchor xml:id="_crypt-utils_8h_source_1l00036"/>00036 
<anchor xml:id="_crypt-utils_8h_source_1l00037"/>00037 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_crypt-utils_8h_1a36c2342a7c47b8f41bf628bf473b1c97">is_valid_key</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key);
<anchor xml:id="_crypt-utils_8h_source_1l00038"/>00038 
<anchor xml:id="_crypt-utils_8h_source_1l00039"/>00039 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00040"/>00040 <emphasis role="comment">int&#32;rebuild_key(char&#32;*key,&#32;char&#32;*cert,&#32;char&#32;*dest);</emphasis>
<anchor xml:id="_crypt-utils_8h_source_1l00041"/>00041 <emphasis role="comment">*/</emphasis>
</programlisting></section>
