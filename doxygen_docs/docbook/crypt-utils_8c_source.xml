<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_crypt-utils_8c_source" xml:lang="en-US">
<title>crypt-utils.c</title>
<indexterm><primary>userspace-module/utils/crypt-utils/crypt-utils.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_crypt-utils_8c_source_1l00001"/>00001 
<anchor xml:id="_crypt-utils_8c_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_crypt-utils_8h">crypt-utils.h</link>&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00015"/>00015 
<anchor xml:id="_crypt-utils_8c_source_1l00021"/><link linkend="_crypt-utils_8c_1afcf795f5a96fd55561abe69f56224630">00021</link> <emphasis role="preprocessor">#define&#32;BLOCKSIZE&#32;1024</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00028"/><link linkend="_crypt-utils_8c_1ad7bb30dbf5882fdf05331918e8a0cc84">00028</link> <emphasis role="preprocessor">#define&#32;IV_SIZE&#32;32</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00034"/><link linkend="_crypt-utils_8c_1a2d996237e082b78b41771b5aa1a6eae1">00034</link> <emphasis role="preprocessor">#define&#32;KEY_SIZE&#32;32</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00035"/>00035 
<anchor xml:id="_crypt-utils_8c_source_1l00062"/>00062 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00063"/><link linkend="_crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76">00063</link> <link linkend="_crypt-utils_8c_1a94b5b388b3f00982ccee72b192077e76">do_crypt</link>&#32;(FILE&#32;*in,&#32;FILE&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;action,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key_str)
<anchor xml:id="_crypt-utils_8c_source_1l00064"/>00064 {
<anchor xml:id="_crypt-utils_8c_source_1l00065"/>00065 &#32;&#32;<emphasis role="comment">/*&#32;Buffers&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00066"/>00066 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;inbuf[<link linkend="_crypt-utils_8c_1afcf795f5a96fd55561abe69f56224630">BLOCKSIZE</link>];
<anchor xml:id="_crypt-utils_8c_source_1l00067"/>00067 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;inlen;
<anchor xml:id="_crypt-utils_8c_source_1l00068"/>00068 &#32;&#32;<emphasis role="comment">/*&#32;Allow&#32;enough&#32;space&#32;in&#32;output&#32;buffer&#32;for&#32;additional&#32;cipher&#32;block&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00069"/>00069 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;outbuf[<link linkend="_crypt-utils_8c_1afcf795f5a96fd55561abe69f56224630">BLOCKSIZE</link>&#32;+&#32;EVP_MAX_BLOCK_LENGTH];
<anchor xml:id="_crypt-utils_8c_source_1l00070"/>00070 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;outlen;
<anchor xml:id="_crypt-utils_8c_source_1l00071"/>00071 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;writelen;
<anchor xml:id="_crypt-utils_8c_source_1l00072"/>00072 
<anchor xml:id="_crypt-utils_8c_source_1l00073"/>00073 &#32;&#32;<emphasis role="comment">/*&#32;OpenSSL&#32;libcrypto&#32;vars&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00074"/>00074 &#32;&#32;EVP_CIPHER_CTX&#32;*ctx;
<anchor xml:id="_crypt-utils_8c_source_1l00075"/>00075 &#32;&#32;ctx&#32;=&#32;EVP_CIPHER_CTX_new&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00076"/>00076 
<anchor xml:id="_crypt-utils_8c_source_1l00077"/>00077 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;key[<link linkend="_crypt-utils_8c_1a2d996237e082b78b41771b5aa1a6eae1">KEY_SIZE</link>];
<anchor xml:id="_crypt-utils_8c_source_1l00078"/>00078 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;iv[<link linkend="_crypt-utils_8c_1ad7bb30dbf5882fdf05331918e8a0cc84">IV_SIZE</link>];
<anchor xml:id="_crypt-utils_8c_source_1l00079"/>00079 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nrounds&#32;=&#32;5;
<anchor xml:id="_crypt-utils_8c_source_1l00080"/>00080 
<anchor xml:id="_crypt-utils_8c_source_1l00081"/>00081 &#32;&#32;<emphasis role="comment">/*&#32;tmp&#32;vars&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00082"/>00082 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="_crypt-utils_8c_source_1l00083"/>00083 &#32;&#32;<emphasis role="comment">/*&#32;Setup&#32;Encryption&#32;Key&#32;and&#32;Cipher&#32;Engine&#32;if&#32;in&#32;cipher&#32;mode&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;&gt;=&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!key_str)
<anchor xml:id="_crypt-utils_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Error&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;Key_str&#32;must&#32;not&#32;be&#32;NULL\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Build&#32;Key&#32;from&#32;String&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;EVP_BytesToKey&#32;(EVP_aes_256_cbc&#32;(),&#32;EVP_sha1&#32;(),&#32;NULL,&#32;key_str,
<anchor xml:id="_crypt-utils_8c_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>)strlen&#32;((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)key_str),&#32;nrounds,&#32;key,
<anchor xml:id="_crypt-utils_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iv);
<anchor xml:id="_crypt-utils_8c_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;32)
<anchor xml:id="_crypt-utils_8c_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Error&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;Key&#32;size&#32;is&#32;%d&#32;bits&#32;-&#32;should&#32;be&#32;256&#32;bits\n&quot;</emphasis>,
<anchor xml:id="_crypt-utils_8c_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;*&#32;8);
<anchor xml:id="_crypt-utils_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Init&#32;Engine&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;EVP_CIPHER_CTX_init&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;EVP_CipherInit_ex&#32;(ctx,&#32;EVP_aes_256_cbc&#32;(),&#32;NULL,&#32;key,&#32;iv,&#32;action);
<anchor xml:id="_crypt-utils_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00107"/>00107 
<anchor xml:id="_crypt-utils_8c_source_1l00108"/>00108 &#32;&#32;<emphasis role="comment">/*&#32;Loop&#32;through&#32;Input&#32;File*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)
<anchor xml:id="_crypt-utils_8c_source_1l00110"/>00110 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Read&#32;Block&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;inlen&#32;=&#32;fread&#32;(inbuf,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(*inbuf),&#32;<link linkend="_crypt-utils_8c_1afcf795f5a96fd55561abe69f56224630">BLOCKSIZE</link>,&#32;in);
<anchor xml:id="_crypt-utils_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(inlen&#32;&lt;=&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;EOF&#32;-&gt;&#32;Break&#32;Loop&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00118"/>00118 
<anchor xml:id="_crypt-utils_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;in&#32;cipher&#32;mode,&#32;perform&#32;cipher&#32;transform&#32;on&#32;block&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;&gt;=&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EVP_CipherUpdate&#32;(ctx,&#32;outbuf,&#32;&amp;outlen,&#32;inbuf,&#32;inlen))
<anchor xml:id="_crypt-utils_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Error&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EVP_CIPHER_CTX_cleanup&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;in&#32;pass-through&#32;mode.&#32;copy&#32;block&#32;as&#32;is&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy&#32;(outbuf,&#32;inbuf,&#32;inlen);
<anchor xml:id="_crypt-utils_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outlen&#32;=&#32;inlen;
<anchor xml:id="_crypt-utils_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00135"/>00135 
<anchor xml:id="_crypt-utils_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Write&#32;Block&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;writelen&#32;=&#32;fwrite&#32;(outbuf,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(*outbuf),&#32;outlen,&#32;out);
<anchor xml:id="_crypt-utils_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(writelen&#32;!=&#32;outlen)
<anchor xml:id="_crypt-utils_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Error&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;fwrite&#32;error&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EVP_CIPHER_CTX_cleanup&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00145"/>00145 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00146"/>00146 
<anchor xml:id="_crypt-utils_8c_source_1l00147"/>00147 &#32;&#32;<emphasis role="comment">/*&#32;If&#32;in&#32;cipher&#32;mode,&#32;handle&#32;necessary&#32;padding&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;&gt;=&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Handle&#32;remaining&#32;cipher&#32;block&#32;+&#32;padding&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EVP_CipherFinal_ex&#32;(ctx,&#32;outbuf,&#32;&amp;outlen))
<anchor xml:id="_crypt-utils_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Error&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EVP_CIPHER_CTX_cleanup&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Write&#32;remainign&#32;cipher&#32;block&#32;+&#32;padding*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;fwrite&#32;(outbuf,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(*inbuf),&#32;outlen,&#32;out);
<anchor xml:id="_crypt-utils_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;EVP_CIPHER_CTX_cleanup&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00161"/>00161 
<anchor xml:id="_crypt-utils_8c_source_1l00162"/>00162 &#32;&#32;<emphasis role="comment">/*&#32;Success&#32;*/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00163"/>00163 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00164"/>00164 }
<anchor xml:id="_crypt-utils_8c_source_1l00165"/>00165 
<anchor xml:id="_crypt-utils_8c_source_1l00173"/>00173 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00174"/><link linkend="_crypt-utils_8c_1aa377df016f593aa771013264acc9b86b">00174</link> <link linkend="_crypt-utils_8c_1aa377df016f593aa771013264acc9b86b">check_entropy</link>&#32;(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00175"/>00175 {
<anchor xml:id="_crypt-utils_8c_source_1l00176"/>00176 &#32;&#32;FILE&#32;*entropy_file&#32;=&#32;fopen&#32;(<emphasis role="stringliteral">&quot;/proc/sys/kernel/random/entropy_avail&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00177"/>00177 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entropy_file&#32;==&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Err:&#32;Cannot&#32;open&#32;entropy&#32;file&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00182"/>00182 
<anchor xml:id="_crypt-utils_8c_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;entropy_value;
<anchor xml:id="_crypt-utils_8c_source_1l00184"/>00184 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fscanf&#32;(entropy_file,&#32;<emphasis role="stringliteral">&quot;%d&quot;</emphasis>,&#32;&amp;entropy_value)&#32;!=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00185"/>00185 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Err:&#32;Cannot&#32;estimate&#32;entropy&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;fclose&#32;(entropy_file);
<anchor xml:id="_crypt-utils_8c_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00190"/>00190 
<anchor xml:id="_crypt-utils_8c_source_1l00191"/>00191 &#32;&#32;fclose&#32;(entropy_file);
<anchor xml:id="_crypt-utils_8c_source_1l00192"/>00192 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;entropy_value;
<anchor xml:id="_crypt-utils_8c_source_1l00193"/>00193 }
<anchor xml:id="_crypt-utils_8c_source_1l00194"/>00194 
<anchor xml:id="_crypt-utils_8c_source_1l00201"/>00201 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00202"/><link linkend="_crypt-utils_8c_1a53b5762e00daafcc3644c03e2fd9b2c4">00202</link> <link linkend="_crypt-utils_8c_1a53b5762e00daafcc3644c03e2fd9b2c4">add_entropy</link>&#32;(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00203"/>00203 {
<anchor xml:id="_crypt-utils_8c_source_1l00204"/>00204 &#32;&#32;FILE&#32;*urandom&#32;=&#32;fopen&#32;(<emphasis role="stringliteral">&quot;/dev/urandom&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00205"/>00205 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(urandom&#32;==&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00206"/>00206 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Err:&#32;Cannot&#32;open&#32;/dev/urandom&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00209"/>00209 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00210"/>00210 
<anchor xml:id="_crypt-utils_8c_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;random_data[32];
<anchor xml:id="_crypt-utils_8c_source_1l00212"/>00212 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytes_read&#32;=&#32;fread&#32;(random_data,&#32;1,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(random_data),&#32;urandom);
<anchor xml:id="_crypt-utils_8c_source_1l00213"/>00213 &#32;&#32;fclose&#32;(urandom);
<anchor xml:id="_crypt-utils_8c_source_1l00214"/>00214 
<anchor xml:id="_crypt-utils_8c_source_1l00215"/>00215 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytes_read&#32;!=&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(random_data))
<anchor xml:id="_crypt-utils_8c_source_1l00216"/>00216 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;Err:&#32;Cannot&#32;read&#32;data\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00219"/>00219 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00220"/>00220 
<anchor xml:id="_crypt-utils_8c_source_1l00221"/>00221 &#32;&#32;<emphasis role="comment">//&#32;Use&#32;random&#32;data&#32;to&#32;fill&#32;up&#32;entropy</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00222"/>00222 &#32;&#32;RAND_add&#32;(random_data,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(random_data),
<anchor xml:id="_crypt-utils_8c_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.5);&#32;<emphasis role="comment">//&#32;0.5&#32;is&#32;an&#32;arbitrary&#32;weight</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00224"/>00224 
<anchor xml:id="_crypt-utils_8c_source_1l00225"/>00225 &#32;&#32;fprintf&#32;(stdout,&#32;<emphasis role="stringliteral">&quot;Entropy&#32;added&#32;successfully!\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00226"/>00226 }
<anchor xml:id="_crypt-utils_8c_source_1l00227"/>00227 
<anchor xml:id="_crypt-utils_8c_source_1l00234"/>00234 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00235"/><link linkend="_crypt-utils_8c_1a8845f5705eaafda836aac91d5881876f">00235</link> <link linkend="_crypt-utils_8c_1a8845f5705eaafda836aac91d5881876f">generate_key</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*destination)
<anchor xml:id="_crypt-utils_8c_source_1l00236"/>00236 {
<anchor xml:id="_crypt-utils_8c_source_1l00237"/>00237 &#32;&#32;fprintf&#32;(stdout,&#32;<emphasis role="stringliteral">&quot;Generating&#32;a&#32;new&#32;key...\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00238"/>00238 
<anchor xml:id="_crypt-utils_8c_source_1l00239"/>00239 &#32;&#32;<emphasis role="comment">//&#32;Why?&#32;Because&#32;if&#32;we&#32;try&#32;to&#32;create&#32;a&#32;large&#32;number&#32;of&#32;files&#32;there&#32;might&#32;not</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00240"/>00240 &#32;&#32;<emphasis role="comment">//&#32;be&#32;enough&#32;random&#32;bytes&#32;in&#32;the&#32;system&#32;to&#32;generate&#32;a&#32;key</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;i++)
<anchor xml:id="_crypt-utils_8c_source_1l00242"/>00242 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;entropy&#32;=&#32;<link linkend="_crypt-utils_8c_1aa377df016f593aa771013264acc9b86b">check_entropy</link>&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entropy&#32;&lt;&#32;128)
<anchor xml:id="_crypt-utils_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;WARN:&#32;not&#32;enough&#32;entropy,&#32;creating&#32;some...\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_crypt-utils_8c_1a53b5762e00daafcc3644c03e2fd9b2c4">add_entropy</link>&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00249"/>00249 
<anchor xml:id="_crypt-utils_8c_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(RAND_bytes&#32;(destination,&#32;32)&#32;!=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;Err:&#32;Cannot&#32;generate&#32;key\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;destination&#32;=&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00255"/>00255 
<anchor xml:id="_crypt-utils_8c_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strlen&#32;((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)destination)&#32;==&#32;32)
<anchor xml:id="_crypt-utils_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00259"/>00259 
<anchor xml:id="_crypt-utils_8c_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97">is_valid_key</link>&#32;(destination)&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>(<emphasis role="stringliteral">&quot;ERR:&#32;Generated&#32;key&#32;is&#32;invalid\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a8c1c24299a2b01f6157b051cb56ebc52">print_aes_key</link>&#32;(destination);
<anchor xml:id="_crypt-utils_8c_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;destination&#32;=&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00266"/>00266 }
<anchor xml:id="_crypt-utils_8c_source_1l00267"/>00267 
<anchor xml:id="_crypt-utils_8c_source_1l00277"/>00277 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00278"/><link linkend="_crypt-utils_8c_1aa926098a8843cf0ab6bd7eb8b3bbd2e6">00278</link> <link linkend="_crypt-utils_8c_1aa926098a8843cf0ab6bd7eb8b3bbd2e6">encrypt_string</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*plaintext,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key,
<anchor xml:id="_crypt-utils_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*encrypted_key_len)
<anchor xml:id="_crypt-utils_8c_source_1l00280"/>00280 {
<anchor xml:id="_crypt-utils_8c_source_1l00281"/>00281 &#32;&#32;EVP_CIPHER_CTX&#32;*ctx;
<anchor xml:id="_crypt-utils_8c_source_1l00282"/>00282 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;EVP_CIPHER&#32;*cipher&#32;=&#32;EVP_aes_256_cbc&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00283"/>00283 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;iv[AES_BLOCK_SIZE];
<anchor xml:id="_crypt-utils_8c_source_1l00284"/>00284 &#32;&#32;memset&#32;(iv,&#32;0,&#32;AES_BLOCK_SIZE);
<anchor xml:id="_crypt-utils_8c_source_1l00285"/>00285 
<anchor xml:id="_crypt-utils_8c_source_1l00286"/>00286 &#32;&#32;ctx&#32;=&#32;EVP_CIPHER_CTX_new&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00287"/>00287 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ctx)
<anchor xml:id="_crypt-utils_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00290"/>00290 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00291"/>00291 
<anchor xml:id="_crypt-utils_8c_source_1l00292"/>00292 &#32;&#32;EVP_EncryptInit_ex&#32;(ctx,&#32;cipher,&#32;NULL,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)key,&#32;iv);
<anchor xml:id="_crypt-utils_8c_source_1l00293"/>00293 
<anchor xml:id="_crypt-utils_8c_source_1l00294"/>00294 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;plaintext_len&#32;=&#32;strlen&#32;((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)plaintext);
<anchor xml:id="_crypt-utils_8c_source_1l00295"/>00295 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;ciphertext[plaintext_len&#32;+&#32;AES_BLOCK_SIZE];
<anchor xml:id="_crypt-utils_8c_source_1l00296"/>00296 &#32;&#32;memset&#32;(ciphertext,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(ciphertext));
<anchor xml:id="_crypt-utils_8c_source_1l00297"/>00297 
<anchor xml:id="_crypt-utils_8c_source_1l00298"/>00298 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len,&#32;total_len&#32;=&#32;0;
<anchor xml:id="_crypt-utils_8c_source_1l00299"/>00299 &#32;&#32;EVP_EncryptUpdate&#32;(ctx,&#32;ciphertext,&#32;&amp;len,&#32;plaintext,&#32;(<emphasis role="keywordtype">int</emphasis>)plaintext_len);
<anchor xml:id="_crypt-utils_8c_source_1l00300"/>00300 &#32;&#32;total_len&#32;+=&#32;len;
<anchor xml:id="_crypt-utils_8c_source_1l00301"/>00301 &#32;&#32;EVP_EncryptFinal_ex&#32;(ctx,&#32;ciphertext&#32;+&#32;total_len,&#32;&amp;len);
<anchor xml:id="_crypt-utils_8c_source_1l00302"/>00302 &#32;&#32;total_len&#32;+=&#32;len;
<anchor xml:id="_crypt-utils_8c_source_1l00303"/>00303 &#32;&#32;EVP_CIPHER_CTX_free&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00304"/>00304 
<anchor xml:id="_crypt-utils_8c_source_1l00305"/>00305 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encoded_string&#32;=&#32;malloc&#32;(total_len&#32;*&#32;2&#32;+&#32;1);
<anchor xml:id="_crypt-utils_8c_source_1l00306"/>00306 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!encoded_string)
<anchor xml:id="_crypt-utils_8c_source_1l00307"/>00307 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00309"/>00309 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00310"/>00310 
<anchor xml:id="_crypt-utils_8c_source_1l00311"/>00311 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;total_len;&#32;i++)
<anchor xml:id="_crypt-utils_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;sprintf&#32;((<emphasis role="keywordtype">char</emphasis>&#32;*)&amp;encoded_string[i&#32;*&#32;2],&#32;<emphasis role="stringliteral">&quot;%02x&quot;</emphasis>,&#32;ciphertext[i]);
<anchor xml:id="_crypt-utils_8c_source_1l00314"/>00314 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00315"/>00315 &#32;&#32;encoded_string[total_len&#32;*&#32;2]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00316"/>00316 
<anchor xml:id="_crypt-utils_8c_source_1l00317"/>00317 &#32;&#32;*encrypted_key_len&#32;=&#32;total_len&#32;*&#32;2;
<anchor xml:id="_crypt-utils_8c_source_1l00318"/>00318 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;encoded_string;
<anchor xml:id="_crypt-utils_8c_source_1l00319"/>00319 }
<anchor xml:id="_crypt-utils_8c_source_1l00320"/>00320 
<anchor xml:id="_crypt-utils_8c_source_1l00329"/>00329 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00330"/><link linkend="_crypt-utils_8c_1a22f528907ee4f078e333501b747d5435">00330</link> <link linkend="_crypt-utils_8c_1a22f528907ee4f078e333501b747d5435">decrypt_string</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*ciphertext,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00331"/>00331 {
<anchor xml:id="_crypt-utils_8c_source_1l00332"/>00332 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tHEX&#32;TO&#32;STRING&#32;GOT&#32;%s\n&quot;</emphasis>,&#32;ciphertext);
<anchor xml:id="_crypt-utils_8c_source_1l00333"/>00333 &#32;&#32;EVP_CIPHER_CTX&#32;*ctx;
<anchor xml:id="_crypt-utils_8c_source_1l00334"/>00334 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;EVP_CIPHER&#32;*cipher&#32;=&#32;EVP_aes_256_cbc&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00335"/>00335 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;iv[AES_BLOCK_SIZE];
<anchor xml:id="_crypt-utils_8c_source_1l00336"/>00336 &#32;&#32;memset&#32;(iv,&#32;0,&#32;AES_BLOCK_SIZE);
<anchor xml:id="_crypt-utils_8c_source_1l00337"/>00337 
<anchor xml:id="_crypt-utils_8c_source_1l00338"/>00338 &#32;&#32;ctx&#32;=&#32;EVP_CIPHER_CTX_new&#32;();
<anchor xml:id="_crypt-utils_8c_source_1l00339"/>00339 &#32;&#32;EVP_DecryptInit_ex&#32;(ctx,&#32;cipher,&#32;NULL,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)key,&#32;iv);
<anchor xml:id="_crypt-utils_8c_source_1l00340"/>00340 
<anchor xml:id="_crypt-utils_8c_source_1l00341"/>00341 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;ciphertext_len&#32;=&#32;strlen&#32;((<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)ciphertext)&#32;/&#32;2;
<anchor xml:id="_crypt-utils_8c_source_1l00342"/>00342 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*decoded_ciphertext&#32;=&#32;malloc&#32;(ciphertext_len);
<anchor xml:id="_crypt-utils_8c_source_1l00343"/>00343 
<anchor xml:id="_crypt-utils_8c_source_1l00344"/>00344 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;ciphertext_len;&#32;i++)
<anchor xml:id="_crypt-utils_8c_source_1l00345"/>00345 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;hex[3]
<anchor xml:id="_crypt-utils_8c_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;{&#32;(char)ciphertext[i&#32;*&#32;2],&#32;(<emphasis role="keywordtype">char</emphasis>)ciphertext[i&#32;*&#32;2&#32;+&#32;1],&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>&#32;};
<anchor xml:id="_crypt-utils_8c_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*endptr;
<anchor xml:id="_crypt-utils_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;strtoul&#32;(hex,&#32;&amp;endptr,&#32;16);
<anchor xml:id="_crypt-utils_8c_source_1l00350"/>00350 
<anchor xml:id="_crypt-utils_8c_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*endptr&#32;!=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>&#32;||&#32;<emphasis role="keywordtype">byte</emphasis>&#32;&gt;&#32;UCHAR_MAX)
<anchor xml:id="_crypt-utils_8c_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;decrypt&#32;string&#32;error&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;decoded_ciphertext[i]&#32;=&#32;byte;
<anchor xml:id="_crypt-utils_8c_source_1l00357"/>00357 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00358"/>00358 
<anchor xml:id="_crypt-utils_8c_source_1l00359"/>00359 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;plaintext[ciphertext_len&#32;+&#32;AES_BLOCK_SIZE&#32;+&#32;1];
<anchor xml:id="_crypt-utils_8c_source_1l00360"/>00360 &#32;&#32;memset&#32;(plaintext,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(plaintext));
<anchor xml:id="_crypt-utils_8c_source_1l00361"/>00361 
<anchor xml:id="_crypt-utils_8c_source_1l00362"/>00362 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len;
<anchor xml:id="_crypt-utils_8c_source_1l00363"/>00363 &#32;&#32;EVP_DecryptUpdate&#32;(ctx,&#32;plaintext,&#32;&amp;len,&#32;decoded_ciphertext,
<anchor xml:id="_crypt-utils_8c_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>)ciphertext_len);
<anchor xml:id="_crypt-utils_8c_source_1l00365"/>00365 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;padding_len;
<anchor xml:id="_crypt-utils_8c_source_1l00366"/>00366 &#32;&#32;EVP_DecryptFinal_ex&#32;(ctx,&#32;plaintext&#32;+&#32;len,&#32;&amp;padding_len);
<anchor xml:id="_crypt-utils_8c_source_1l00367"/>00367 &#32;&#32;EVP_CIPHER_CTX_free&#32;(ctx);
<anchor xml:id="_crypt-utils_8c_source_1l00368"/>00368 
<anchor xml:id="_crypt-utils_8c_source_1l00369"/>00369 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*decrypted_string
<anchor xml:id="_crypt-utils_8c_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)malloc&#32;(len&#32;+&#32;padding_len&#32;+&#32;1);
<anchor xml:id="_crypt-utils_8c_source_1l00371"/>00371 &#32;&#32;memcpy&#32;(decrypted_string,&#32;plaintext,&#32;len&#32;+&#32;padding_len);
<anchor xml:id="_crypt-utils_8c_source_1l00372"/>00372 &#32;&#32;decrypted_string[len&#32;+&#32;padding_len]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00373"/>00373 
<anchor xml:id="_crypt-utils_8c_source_1l00374"/>00374 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tdecoded_ciphertext&#32;%s,&#32;decrypted_string&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_crypt-utils_8c_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decoded_ciphertext,&#32;decrypted_string);
<anchor xml:id="_crypt-utils_8c_source_1l00376"/>00376 &#32;&#32;free&#32;(decoded_ciphertext);
<anchor xml:id="_crypt-utils_8c_source_1l00377"/>00377 
<anchor xml:id="_crypt-utils_8c_source_1l00378"/>00378 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;decrypted_string;
<anchor xml:id="_crypt-utils_8c_source_1l00379"/>00379 }
<anchor xml:id="_crypt-utils_8c_source_1l00380"/>00380 
<anchor xml:id="_crypt-utils_8c_source_1l00387"/>00387 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00388"/><link linkend="_crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97">00388</link> <link linkend="_crypt-utils_8c_1a36c2342a7c47b8f41bf628bf473b1c97">is_valid_key</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00389"/>00389 {
<anchor xml:id="_crypt-utils_8c_source_1l00390"/>00390 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;str[33];
<anchor xml:id="_crypt-utils_8c_source_1l00391"/>00391 &#32;&#32;memcpy&#32;(str,&#32;key,&#32;32);
<anchor xml:id="_crypt-utils_8c_source_1l00392"/>00392 &#32;&#32;str[32]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00393"/>00393 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;key_length&#32;=&#32;strlen&#32;(str);
<anchor xml:id="_crypt-utils_8c_source_1l00394"/>00394 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;key_length&#32;!=&#32;32&#32;?&#32;false&#32;:&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00395"/>00395 }
<anchor xml:id="_crypt-utils_8c_source_1l00396"/>00396 
<anchor xml:id="_crypt-utils_8c_source_1l00397"/>00397 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00398"/><link linkend="_crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e">00398</link> <link linkend="_crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e">encrypt_file_name_with_hex</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00399"/>00399 {
<anchor xml:id="_crypt-utils_8c_source_1l00400"/>00400 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;-1;
<anchor xml:id="_crypt-utils_8c_source_1l00401"/>00401 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_crypt-utils_8c_1aa926098a8843cf0ab6bd7eb8b3bbd2e6">encrypt_string</link>&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_tcfs__utils_8c_1a819d57d5c053a25772508a943d1bcc48">string_to_hex</link>&#32;(file),
<anchor xml:id="_crypt-utils_8c_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;key,&#32;&amp;len);
<anchor xml:id="_crypt-utils_8c_source_1l00403"/>00403 }
<anchor xml:id="_crypt-utils_8c_source_1l00404"/>00404 
<anchor xml:id="_crypt-utils_8c_source_1l00405"/>00405 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00406"/><link linkend="_crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34">00406</link> <link linkend="_crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34">decrypt_file_name_with_hex</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*enc_file,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00407"/>00407 {
<anchor xml:id="_crypt-utils_8c_source_1l00408"/>00408 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_tcfs__utils_8c_1a6de1cb8448198da94080ad32d7e4eabf">hex_to_string</link>&#32;(
<anchor xml:id="_crypt-utils_8c_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_crypt-utils_8c_1a22f528907ee4f078e333501b747d5435">decrypt_string</link>&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)enc_file,&#32;key));
<anchor xml:id="_crypt-utils_8c_source_1l00410"/>00410 }
<anchor xml:id="_crypt-utils_8c_source_1l00411"/>00411 
<anchor xml:id="_crypt-utils_8c_source_1l00419"/>00419 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00420"/><link linkend="_crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80">00420</link> <link linkend="_crypt-utils_8c_1ad9b10366ade9f2129ec2613fdc76df80">encrypt_path</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00421"/>00421 {
<anchor xml:id="_crypt-utils_8c_source_1l00422"/>00422 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*result&#32;=&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00423"/>00423 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*token,&#32;*saveptr;
<anchor xml:id="_crypt-utils_8c_source_1l00424"/>00424 
<anchor xml:id="_crypt-utils_8c_source_1l00425"/>00425 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;path&#32;is&#32;&quot;.&quot;,&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00426"/>00426 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(path,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(path,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00427"/>00427 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;encryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(path);
<anchor xml:id="_crypt-utils_8c_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tencrypt&#32;path&#32;got&#32;a&#32;special&#32;case,&#32;returning&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00437"/>00437 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00438"/>00438 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;path&#32;is&#32;/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00439"/>00439 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(path,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00440"/>00440 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tgot&#32;root&#32;path\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00443"/>00443 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00444"/>00444 
<anchor xml:id="_crypt-utils_8c_source_1l00445"/>00445 &#32;&#32;<emphasis role="comment">//&#32;Copy&#32;the&#32;original&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00446"/>00446 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path_copy&#32;=&#32;strdup&#32;(path);
<anchor xml:id="_crypt-utils_8c_source_1l00447"/>00447 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!path_copy)
<anchor xml:id="_crypt-utils_8c_source_1l00448"/>00448 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00451"/>00451 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00452"/>00452 
<anchor xml:id="_crypt-utils_8c_source_1l00453"/>00453 &#32;&#32;<emphasis role="comment">//&#32;Start&#32;encryption</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00454"/>00454 &#32;&#32;token&#32;=&#32;strtok_r&#32;(path_copy,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00455"/>00455 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(token&#32;!=&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00456"/>00456 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;directory&#32;is&#32;&quot;.&quot;&#32;or&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;encryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Encrypt&#32;each&#32;part&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_part&#32;=&#32;<link linkend="_crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e">encrypt_file_name_with_hex</link>&#32;(token,&#32;key);
<anchor xml:id="_crypt-utils_8c_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tEncrypted&#32;%s&#32;--&gt;&#32;%s\n&quot;</emphasis>,&#32;token,&#32;encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00467"/>00467 
<anchor xml:id="_crypt-utils_8c_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Concatenate&#32;to&#32;the&#32;result&#32;string</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result&#32;==&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;encrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(encrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;malloc&#32;(strlen&#32;(encrypted_part)&#32;+&#32;2);
<anchor xml:id="_crypt-utils_8c_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;result_len&#32;=&#32;strlen&#32;(result);
<anchor xml:id="_crypt-utils_8c_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;encrypted_len&#32;=&#32;strlen&#32;(encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00492"/>00492 
<anchor xml:id="_crypt-utils_8c_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;realloc&#32;(result,&#32;result_len&#32;+&#32;1&#32;+&#32;encrypted_len&#32;+&#32;1);
<anchor xml:id="_crypt-utils_8c_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00499"/>00499 
<anchor xml:id="_crypt-utils_8c_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;encrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(encrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00505"/>00505 
<anchor xml:id="_crypt-utils_8c_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tTempresult:&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00510"/>00510 
<anchor xml:id="_crypt-utils_8c_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;to&#32;the&#32;next&#32;part&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;strtok_r&#32;(NULL,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00513"/>00513 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00514"/>00514 
<anchor xml:id="_crypt-utils_8c_source_1l00515"/>00515 &#32;&#32;<emphasis role="comment">//&#32;Free&#32;the&#32;memory&#32;allocated&#32;for&#32;the&#32;path&#32;copy</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00516"/>00516 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tpathcopy&#32;%s\n&quot;</emphasis>,&#32;path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00517"/>00517 &#32;&#32;free&#32;(path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00518"/>00518 
<anchor xml:id="_crypt-utils_8c_source_1l00519"/>00519 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tencrypt_path&#32;will&#32;return&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00520"/>00520 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00521"/>00521 }
<anchor xml:id="_crypt-utils_8c_source_1l00522"/>00522 
<anchor xml:id="_crypt-utils_8c_source_1l00531"/>00531 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00532"/><link linkend="_crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644">00532</link> <link linkend="_crypt-utils_8c_1a5c45db4d3db3ef274fb6356e1a95e644">encrypt_path_and_filename</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00533"/>00533 {
<anchor xml:id="_crypt-utils_8c_source_1l00534"/>00534 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*result&#32;=&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00535"/>00535 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*token,&#32;*saveptr;
<anchor xml:id="_crypt-utils_8c_source_1l00536"/>00536 
<anchor xml:id="_crypt-utils_8c_source_1l00537"/>00537 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;path&#32;is&#32;&quot;.&quot;,&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00538"/>00538 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(path,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(path,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00539"/>00539 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;encryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(path);
<anchor xml:id="_crypt-utils_8c_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(
<anchor xml:id="_crypt-utils_8c_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\tencrypt_filename_with_path&#32;got&#32;a&#32;special&#32;case,&#32;returning&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_crypt-utils_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00551"/>00551 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00552"/>00552 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;path&#32;is&#32;/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00553"/>00553 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(path,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00554"/>00554 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tgot&#32;root&#32;path\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00557"/>00557 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00558"/>00558 
<anchor xml:id="_crypt-utils_8c_source_1l00559"/>00559 &#32;&#32;<emphasis role="comment">//&#32;Copy&#32;the&#32;original&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00560"/>00560 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path_copy&#32;=&#32;strdup&#32;(path);
<anchor xml:id="_crypt-utils_8c_source_1l00561"/>00561 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!path_copy)
<anchor xml:id="_crypt-utils_8c_source_1l00562"/>00562 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00565"/>00565 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00566"/>00566 
<anchor xml:id="_crypt-utils_8c_source_1l00567"/>00567 &#32;&#32;<emphasis role="comment">//&#32;Start&#32;encryption</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00568"/>00568 &#32;&#32;token&#32;=&#32;strtok_r&#32;(path_copy,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00569"/>00569 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(token&#32;!=&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;directory&#32;is&#32;&quot;.&quot;&#32;or&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;encryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Encrypt&#32;each&#32;part&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_part&#32;=&#32;<link linkend="_crypt-utils_8c_1aa4a7facde8c6f63a7225c07e92232b2e">encrypt_file_name_with_hex</link>&#32;(token,&#32;key);
<anchor xml:id="_crypt-utils_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tEncrypted&#32;%s&#32;--&gt;&#32;%s\n&quot;</emphasis>,&#32;token,&#32;encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00581"/>00581 
<anchor xml:id="_crypt-utils_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Concatenate&#32;to&#32;the&#32;result&#32;string</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result&#32;==&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;encrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(encrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;malloc&#32;(strlen&#32;(encrypted_part)&#32;+&#32;2);
<anchor xml:id="_crypt-utils_8c_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;result_len&#32;=&#32;strlen&#32;(result);
<anchor xml:id="_crypt-utils_8c_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;encrypted_len&#32;=&#32;strlen&#32;(encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00606"/>00606 
<anchor xml:id="_crypt-utils_8c_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;realloc&#32;(result,&#32;result_len&#32;+&#32;1&#32;+&#32;encrypted_len&#32;+&#32;1);
<anchor xml:id="_crypt-utils_8c_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00613"/>00613 
<anchor xml:id="_crypt-utils_8c_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;encrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(encrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00619"/>00619 
<anchor xml:id="_crypt-utils_8c_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;encrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tTempresult:&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00624"/>00624 
<anchor xml:id="_crypt-utils_8c_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;to&#32;the&#32;next&#32;part&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;strtok_r&#32;(NULL,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00627"/>00627 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00628"/>00628 
<anchor xml:id="_crypt-utils_8c_source_1l00629"/>00629 &#32;&#32;<emphasis role="comment">//&#32;Free&#32;the&#32;memory&#32;allocated&#32;for&#32;the&#32;path&#32;copy</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00630"/>00630 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tpathcopy&#32;%s\n&quot;</emphasis>,&#32;path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00631"/>00631 &#32;&#32;free&#32;(path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00632"/>00632 
<anchor xml:id="_crypt-utils_8c_source_1l00633"/>00633 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tencrypt_filename_with_path&#32;will&#32;return&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00634"/>00634 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00635"/>00635 }
<anchor xml:id="_crypt-utils_8c_source_1l00636"/>00636 
<anchor xml:id="_crypt-utils_8c_source_1l00644"/>00644 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00645"/><link linkend="_crypt-utils_8c_1a1899c23a523d11ed1cb5601eabdb023d">00645</link> <link linkend="_crypt-utils_8c_1a1899c23a523d11ed1cb5601eabdb023d">decrypt_path</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_path,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00646"/>00646 {
<anchor xml:id="_crypt-utils_8c_source_1l00647"/>00647 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;decrypt&#32;path&#32;got&#32;%s\n&quot;</emphasis>,&#32;encrypted_path);
<anchor xml:id="_crypt-utils_8c_source_1l00648"/>00648 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*result&#32;=&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00649"/>00649 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*token,&#32;*saveptr;
<anchor xml:id="_crypt-utils_8c_source_1l00650"/>00650 
<anchor xml:id="_crypt-utils_8c_source_1l00651"/>00651 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;encrypted_path&#32;is&#32;&quot;.&quot;,&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00652"/>00652 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(encrypted_path,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(encrypted_path,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00653"/>00653 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;decryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(encrypted_path);
<anchor xml:id="_crypt-utils_8c_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tdecrypt_path&#32;got&#32;a&#32;special&#32;case,&#32;returning&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00663"/>00663 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00664"/>00664 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;encrypted_path&#32;is&#32;/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00665"/>00665 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(encrypted_path,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00666"/>00666 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tgot&#32;root&#32;path\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00669"/>00669 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00670"/>00670 
<anchor xml:id="_crypt-utils_8c_source_1l00671"/>00671 &#32;&#32;<emphasis role="comment">//&#32;Copy&#32;the&#32;original&#32;encrypted_path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00672"/>00672 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_path_copy&#32;=&#32;strdup&#32;(encrypted_path);
<anchor xml:id="_crypt-utils_8c_source_1l00673"/>00673 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!encrypted_path_copy)
<anchor xml:id="_crypt-utils_8c_source_1l00674"/>00674 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00677"/>00677 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00678"/>00678 
<anchor xml:id="_crypt-utils_8c_source_1l00679"/>00679 &#32;&#32;<emphasis role="comment">//&#32;Start&#32;decryption</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00680"/>00680 &#32;&#32;token&#32;=&#32;strtok_r&#32;(encrypted_path_copy,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00681"/>00681 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(token&#32;!=&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00682"/>00682 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;directory&#32;is&#32;&quot;.&quot;&#32;or&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;decryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Decrypt&#32;each&#32;part&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*decrypted_part&#32;=&#32;<link linkend="_crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34">decrypt_file_name_with_hex</link>&#32;(token,&#32;key);
<anchor xml:id="_crypt-utils_8c_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tDecrypted&#32;%s&#32;--&gt;&#32;%s\n&quot;</emphasis>,&#32;token,&#32;decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00693"/>00693 
<anchor xml:id="_crypt-utils_8c_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Concatenate&#32;to&#32;the&#32;result&#32;string</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result&#32;==&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;decrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(decrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;malloc&#32;(strlen&#32;(decrypted_part)&#32;+&#32;2);
<anchor xml:id="_crypt-utils_8c_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;result_len&#32;=&#32;strlen&#32;(result);
<anchor xml:id="_crypt-utils_8c_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;decrypted_len&#32;=&#32;strlen&#32;(decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00718"/>00718 
<anchor xml:id="_crypt-utils_8c_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;realloc&#32;(result,&#32;result_len&#32;+&#32;1&#32;+&#32;decrypted_len&#32;+&#32;1);
<anchor xml:id="_crypt-utils_8c_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00725"/>00725 
<anchor xml:id="_crypt-utils_8c_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;decrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(decrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00731"/>00731 
<anchor xml:id="_crypt-utils_8c_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tTempresult:&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00736"/>00736 
<anchor xml:id="_crypt-utils_8c_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;to&#32;the&#32;next&#32;part&#32;of&#32;the&#32;encrypted_path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;strtok_r&#32;(NULL,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00739"/>00739 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00740"/>00740 
<anchor xml:id="_crypt-utils_8c_source_1l00741"/>00741 &#32;&#32;<emphasis role="comment">//&#32;Free&#32;the&#32;memory&#32;allocated&#32;for&#32;the&#32;encrypted_path&#32;copy</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00742"/>00742 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tencrypted_path_copy&#32;%s\n&quot;</emphasis>,&#32;encrypted_path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00743"/>00743 &#32;&#32;free&#32;(encrypted_path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00744"/>00744 
<anchor xml:id="_crypt-utils_8c_source_1l00745"/>00745 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tdecrypt_path&#32;will&#32;return&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00746"/>00746 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00747"/>00747 }
<anchor xml:id="_crypt-utils_8c_source_1l00748"/>00748 
<anchor xml:id="_crypt-utils_8c_source_1l00758"/>00758 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_crypt-utils_8c_source_1l00759"/><link linkend="_crypt-utils_8c_1a373f8aedbcd8b6ce22fe7bdfeb2961c2">00759</link> <link linkend="_crypt-utils_8c_1a373f8aedbcd8b6ce22fe7bdfeb2961c2">decrypt_path_and_filename</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_path,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_crypt-utils_8c_source_1l00760"/>00760 {
<anchor xml:id="_crypt-utils_8c_source_1l00761"/>00761 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*result&#32;=&#32;NULL;
<anchor xml:id="_crypt-utils_8c_source_1l00762"/>00762 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*token,&#32;*saveptr;
<anchor xml:id="_crypt-utils_8c_source_1l00763"/>00763 
<anchor xml:id="_crypt-utils_8c_source_1l00764"/>00764 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;encrypted_path&#32;is&#32;&quot;.&quot;,&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00765"/>00765 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(encrypted_path,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(encrypted_path,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00766"/>00766 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;decryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(encrypted_path);
<anchor xml:id="_crypt-utils_8c_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(
<anchor xml:id="_crypt-utils_8c_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\tdecrypt_filename_with_path&#32;got&#32;a&#32;special&#32;case,&#32;returning&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_crypt-utils_8c_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00778"/>00778 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00779"/>00779 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;encrypted_path&#32;is&#32;/</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00780"/>00780 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(encrypted_path,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00781"/>00781 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tgot&#32;root&#32;path\n&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="_crypt-utils_8c_source_1l00784"/>00784 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00785"/>00785 
<anchor xml:id="_crypt-utils_8c_source_1l00786"/>00786 &#32;&#32;<emphasis role="comment">//&#32;Copy&#32;the&#32;original&#32;encrypted_path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00787"/>00787 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_path_copy&#32;=&#32;strdup&#32;(encrypted_path);
<anchor xml:id="_crypt-utils_8c_source_1l00788"/>00788 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!encrypted_path_copy)
<anchor xml:id="_crypt-utils_8c_source_1l00789"/>00789 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00792"/>00792 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00793"/>00793 
<anchor xml:id="_crypt-utils_8c_source_1l00794"/>00794 &#32;&#32;<emphasis role="comment">//&#32;Start&#32;decryption</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00795"/>00795 &#32;&#32;token&#32;=&#32;strtok_r&#32;(encrypted_path_copy,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00796"/>00796 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(token&#32;!=&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00797"/>00797 &#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;directory&#32;is&#32;&quot;.&quot;&#32;or&#32;&quot;..&quot;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0&#32;||&#32;strcmp&#32;(token,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_crypt-utils_8c_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;is,&#32;no&#32;decryption&#32;is&#32;applied</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Decrypt&#32;each&#32;part&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*decrypted_part&#32;=&#32;<link linkend="_crypt-utils_8c_1a3b003481e5c188ac1d6f63e09e6f3a34">decrypt_file_name_with_hex</link>&#32;(token,&#32;key);
<anchor xml:id="_crypt-utils_8c_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tDecrypted&#32;%s&#32;--&gt;&#32;%s\n&quot;</emphasis>,&#32;token,&#32;decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00808"/>00808 
<anchor xml:id="_crypt-utils_8c_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Concatenate&#32;to&#32;the&#32;result&#32;string</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result&#32;==&#32;NULL)
<anchor xml:id="_crypt-utils_8c_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;decrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(decrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;malloc&#32;(strlen&#32;(decrypted_part)&#32;+&#32;2);
<anchor xml:id="_crypt-utils_8c_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;strdup&#32;(decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;result_len&#32;=&#32;strlen&#32;(result);
<anchor xml:id="_crypt-utils_8c_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;decrypted_len&#32;=&#32;strlen&#32;(decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00833"/>00833 
<anchor xml:id="_crypt-utils_8c_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;realloc&#32;(result,&#32;result_len&#32;+&#32;1&#32;+&#32;decrypted_len&#32;+&#32;1);
<anchor xml:id="_crypt-utils_8c_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result)
<anchor xml:id="_crypt-utils_8c_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error&#32;allocating&#32;memory&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(EXIT_FAILURE);
<anchor xml:id="_crypt-utils_8c_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00840"/>00840 
<anchor xml:id="_crypt-utils_8c_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;first&#32;character&#32;of&#32;decrypted_part&#32;is&#32;&apos;/&apos;</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(decrypted_part[0]&#32;!=&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>)
<anchor xml:id="_crypt-utils_8c_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_crypt-utils_8c_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_crypt-utils_8c_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00846"/>00846 
<anchor xml:id="_crypt-utils_8c_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(result,&#32;decrypted_part);
<anchor xml:id="_crypt-utils_8c_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tTempresult:&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00851"/>00851 
<anchor xml:id="_crypt-utils_8c_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;to&#32;the&#32;next&#32;part&#32;of&#32;the&#32;encrypted_path</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;strtok_r&#32;(NULL,&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;&amp;saveptr);
<anchor xml:id="_crypt-utils_8c_source_1l00854"/>00854 &#32;&#32;&#32;&#32;}
<anchor xml:id="_crypt-utils_8c_source_1l00855"/>00855 
<anchor xml:id="_crypt-utils_8c_source_1l00856"/>00856 &#32;&#32;<emphasis role="comment">//&#32;Free&#32;the&#32;memory&#32;allocated&#32;for&#32;the&#32;encrypted_path&#32;copy</emphasis>
<anchor xml:id="_crypt-utils_8c_source_1l00857"/>00857 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tencrypted_path_copy&#32;%s\n&quot;</emphasis>,&#32;encrypted_path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00858"/>00858 &#32;&#32;free&#32;(encrypted_path_copy);
<anchor xml:id="_crypt-utils_8c_source_1l00859"/>00859 
<anchor xml:id="_crypt-utils_8c_source_1l00860"/>00860 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tdecrypt_filename_with_path&#32;will&#32;return&#32;%s\n&quot;</emphasis>,&#32;result);
<anchor xml:id="_crypt-utils_8c_source_1l00861"/>00861 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_crypt-utils_8c_source_1l00862"/>00862 }
</programlisting></section>
