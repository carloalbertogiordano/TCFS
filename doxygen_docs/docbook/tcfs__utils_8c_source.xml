<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tcfs__utils_8c_source" xml:lang="en-US">
<title>tcfs_utils.c</title>
<indexterm><primary>userspace-module/utils/tcfs_utils/tcfs_utils.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_tcfs__utils_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_tcfs__utils_8h">tcfs_utils.h</link>&quot;</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;../crypt-utils/crypt-utils.h&quot;</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00003"/>00003 
<anchor xml:id="_tcfs__utils_8c_source_1l00018"/>00018 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00019"/><link linkend="_tcfs__utils_8c_1aac1b7fab3a13b4cfcc0b34eb7511df55">00019</link> <link linkend="_tcfs__utils_8c_1aac1b7fab3a13b4cfcc0b34eb7511df55">get_user_name</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*buf,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size)
<anchor xml:id="_tcfs__utils_8c_source_1l00020"/>00020 {
<anchor xml:id="_tcfs__utils_8c_source_1l00021"/>00021 &#32;&#32;uid_t&#32;uid&#32;=&#32;geteuid&#32;();
<anchor xml:id="_tcfs__utils_8c_source_1l00022"/>00022 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>passwd&#32;*pw&#32;=&#32;getpwuid&#32;(uid);
<anchor xml:id="_tcfs__utils_8c_source_1l00023"/>00023 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pw)
<anchor xml:id="_tcfs__utils_8c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;snprintf&#32;(buf,&#32;size,&#32;<emphasis role="stringliteral">&quot;%s&quot;</emphasis>,&#32;pw-&gt;pw_name);
<anchor xml:id="_tcfs__utils_8c_source_1l00025"/>00025 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Error:&#32;Could&#32;not&#32;retrieve&#32;username.\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00027"/>00027 }
<anchor xml:id="_tcfs__utils_8c_source_1l00028"/>00028 
<anchor xml:id="_tcfs__utils_8c_source_1l00034"/>00034 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00035"/><link linkend="_tcfs__utils_8c_1a71e44dc105c7af8349bc3e7eb9edf2b0">00035</link> <link linkend="_tcfs__utils_8c_1a71e44dc105c7af8349bc3e7eb9edf2b0">is_encrypted</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path)
<anchor xml:id="_tcfs__utils_8c_source_1l00036"/>00036 {
<anchor xml:id="_tcfs__utils_8c_source_1l00037"/>00037 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ret;
<anchor xml:id="_tcfs__utils_8c_source_1l00038"/>00038 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;xattr_val[5];
<anchor xml:id="_tcfs__utils_8c_source_1l00039"/>00039 &#32;&#32;getxattr&#32;(path,&#32;<emphasis role="stringliteral">&quot;user.encrypted&quot;</emphasis>,&#32;xattr_val,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>)&#32;*&#32;5);
<anchor xml:id="_tcfs__utils_8c_source_1l00040"/>00040 &#32;&#32;xattr_val[4]&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00041"/>00041 
<anchor xml:id="_tcfs__utils_8c_source_1l00042"/>00042 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;strcmp&#32;(xattr_val,&#32;<emphasis role="stringliteral">&quot;true&quot;</emphasis>)&#32;==&#32;0&#32;?&#32;true&#32;:&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00043"/>00043 }
<anchor xml:id="_tcfs__utils_8c_source_1l00044"/>00044 
<anchor xml:id="_tcfs__utils_8c_source_1l00052"/>00052 <emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_tcfs__utils_8c_source_1l00053"/><link linkend="_tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8">00053</link> <link linkend="_tcfs__utils_8c_1ac4ff59963f4a122c9f802c0c2bf2abc8">prefix_path</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*realpath)
<anchor xml:id="_tcfs__utils_8c_source_1l00054"/>00054 {
<anchor xml:id="_tcfs__utils_8c_source_1l00055"/>00055 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(path&#32;==&#32;NULL&#32;||&#32;realpath&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;WARN:&#32;path&#32;or&#32;realpath&#32;is&#32;null\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(path&#32;!=&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)path;
<anchor xml:id="_tcfs__utils_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(realpath&#32;!=&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)realpath;
<anchor xml:id="_tcfs__utils_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_tcfs__utils_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00064"/>00064 
<anchor xml:id="_tcfs__utils_8c_source_1l00065"/>00065 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len&#32;=&#32;strlen&#32;(path)&#32;+&#32;strlen&#32;(realpath)&#32;+&#32;1;
<anchor xml:id="_tcfs__utils_8c_source_1l00066"/>00066 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*root_dir&#32;=&#32;malloc&#32;(len&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>));
<anchor xml:id="_tcfs__utils_8c_source_1l00067"/>00067 
<anchor xml:id="_tcfs__utils_8c_source_1l00068"/>00068 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(root_dir&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00069"/>00069 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Err:&#32;Could&#32;not&#32;allocate&#32;memory&#32;while&#32;in&#32;prefix_path&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_tcfs__utils_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00073"/>00073 
<anchor xml:id="_tcfs__utils_8c_source_1l00074"/>00074 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcpy&#32;(root_dir,&#32;realpath)&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;strcpy:&#32;Cannot&#32;copy&#32;path&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_tcfs__utils_8c_source_1l00078"/>00078 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00079"/>00079 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcat&#32;(root_dir,&#32;path)&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00080"/>00080 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;strcat:&#32;in&#32;prefix_path&#32;cannot&#32;concatenate&#32;the&#32;paths&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_tcfs__utils_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;root_dir;
<anchor xml:id="_tcfs__utils_8c_source_1l00085"/>00085 }
<anchor xml:id="_tcfs__utils_8c_source_1l00086"/>00086 
<anchor xml:id="_tcfs__utils_8c_source_1l00094"/>00094 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00095"/><link linkend="_tcfs__utils_8c_1a42623317bb0b1ff095b4d946dc085bd6">00095</link> <link linkend="_tcfs__utils_8c_1a42623317bb0b1ff095b4d946dc085bd6">read_file</link>&#32;(FILE&#32;*file)
<anchor xml:id="_tcfs__utils_8c_source_1l00096"/>00096 {
<anchor xml:id="_tcfs__utils_8c_source_1l00097"/>00097 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="_tcfs__utils_8c_source_1l00098"/>00098 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;file_contains_something&#32;=&#32;0;
<anchor xml:id="_tcfs__utils_8c_source_1l00099"/>00099 &#32;&#32;FILE&#32;*read&#32;=&#32;file;&#32;<emphasis role="comment">/*&#32;don&apos;t&#32;move&#32;original&#32;file&#32;pointer&#32;*/</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(read)
<anchor xml:id="_tcfs__utils_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((c&#32;=&#32;getc&#32;(read))&#32;!=&#32;EOF)
<anchor xml:id="_tcfs__utils_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file_contains_something&#32;=&#32;1;
<anchor xml:id="_tcfs__utils_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;putc&#32;(c,&#32;stderr);
<anchor xml:id="_tcfs__utils_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00108"/>00108 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!file_contains_something)
<anchor xml:id="_tcfs__utils_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;fprintf&#32;(stderr,&#32;<emphasis role="stringliteral">&quot;file&#32;was&#32;empty\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00110"/>00110 &#32;&#32;rewind&#32;(file);
<anchor xml:id="_tcfs__utils_8c_source_1l00111"/>00111 &#32;&#32;<emphasis role="comment">/*&#32;fseek(tmpf,&#32;offset,&#32;SEEK_END);&#32;*/</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00112"/>00112 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00113"/>00113 }
<anchor xml:id="_tcfs__utils_8c_source_1l00114"/>00114 
<anchor xml:id="_tcfs__utils_8c_source_1l00122"/>00122 <emphasis role="keywordtype">int</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00123"/><link linkend="_tcfs__utils_8c_1a4316eb58a0cb5afb4e90e75a55c9b3ea">00123</link> <link linkend="_tcfs__utils_8c_1a4316eb58a0cb5afb4e90e75a55c9b3ea">get_encrypted_key</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*filepath,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*encrypted_key)
<anchor xml:id="_tcfs__utils_8c_source_1l00124"/>00124 {
<anchor xml:id="_tcfs__utils_8c_source_1l00125"/>00125 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tGet&#32;Encrypted&#32;key&#32;for&#32;file&#32;%s\n&quot;</emphasis>,&#32;filepath);
<anchor xml:id="_tcfs__utils_8c_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_tcfs__utils_8c_1a71e44dc105c7af8349bc3e7eb9edf2b0">is_encrypted</link>&#32;(filepath)&#32;==&#32;1)
<anchor xml:id="_tcfs__utils_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tencrypted&#32;file\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00129"/>00129 
<anchor xml:id="_tcfs__utils_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;FILE&#32;*src_file&#32;=&#32;fopen&#32;(filepath,&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(src_file&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose&#32;(src_file);
<anchor xml:id="_tcfs__utils_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Could&#32;not&#32;open&#32;the&#32;file&#32;to&#32;get&#32;the&#32;key&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-errno;
<anchor xml:id="_tcfs__utils_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;src_fd;
<anchor xml:id="_tcfs__utils_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;src_fd&#32;=&#32;fileno&#32;(src_file);
<anchor xml:id="_tcfs__utils_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(src_fd&#32;==&#32;-1)
<anchor xml:id="_tcfs__utils_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose&#32;(src_file);
<anchor xml:id="_tcfs__utils_8c_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Could&#32;not&#32;get&#32;fd&#32;for&#32;the&#32;file&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-errno;
<anchor xml:id="_tcfs__utils_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00145"/>00145 
<anchor xml:id="_tcfs__utils_8c_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fgetxattr&#32;(src_fd,&#32;<emphasis role="stringliteral">&quot;user.key&quot;</emphasis>,&#32;encrypted_key,&#32;33)&#32;!=&#32;-1)
<anchor xml:id="_tcfs__utils_8c_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fclose&#32;(src_file);
<anchor xml:id="_tcfs__utils_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00152"/>00152 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00153"/>00153 }
<anchor xml:id="_tcfs__utils_8c_source_1l00154"/>00154 
<anchor xml:id="_tcfs__utils_8c_source_1l00164"/>00164 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00165"/><link linkend="_tcfs__utils_8c_1a8c1c24299a2b01f6157b051cb56ebc52">00165</link> <link linkend="_tcfs__utils_8c_1a8c1c24299a2b01f6157b051cb56ebc52">print_aes_key</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_tcfs__utils_8c_source_1l00166"/>00166 {
<anchor xml:id="_tcfs__utils_8c_source_1l00167"/>00167 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;AES&#32;HEX:%s&#32;-&gt;&#32;&quot;</emphasis>,&#32;key);
<anchor xml:id="_tcfs__utils_8c_source_1l00168"/>00168 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;32;&#32;i++)
<anchor xml:id="_tcfs__utils_8c_source_1l00169"/>00169 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;%02x&quot;</emphasis>,&#32;key[i]);
<anchor xml:id="_tcfs__utils_8c_source_1l00171"/>00171 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00172"/>00172 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00173"/>00173 }
<anchor xml:id="_tcfs__utils_8c_source_1l00174"/>00174 
<anchor xml:id="_tcfs__utils_8c_source_1l00181"/>00181 <emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_tcfs__utils_8c_source_1l00182"/><link linkend="_tcfs__utils_8c_1a819d57d5c053a25772508a943d1bcc48">00182</link> <link linkend="_tcfs__utils_8c_1a819d57d5c053a25772508a943d1bcc48">string_to_hex</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*input)
<anchor xml:id="_tcfs__utils_8c_source_1l00183"/>00183 {
<anchor xml:id="_tcfs__utils_8c_source_1l00184"/>00184 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tSTRING&#32;TO&#32;HEX&#32;GOT&#32;%s\n&quot;</emphasis>,&#32;input);
<anchor xml:id="_tcfs__utils_8c_source_1l00185"/>00185 
<anchor xml:id="_tcfs__utils_8c_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="_tcfs__utils_8c_source_1l00187"/>00187 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len&#32;=&#32;strlen&#32;(input);
<anchor xml:id="_tcfs__utils_8c_source_1l00188"/>00188 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;hex[3];
<anchor xml:id="_tcfs__utils_8c_source_1l00189"/>00189 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)malloc&#32;(2&#32;*&#32;len&#32;+&#32;1);
<anchor xml:id="_tcfs__utils_8c_source_1l00190"/>00190 
<anchor xml:id="_tcfs__utils_8c_source_1l00191"/>00191 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!output)
<anchor xml:id="_tcfs__utils_8c_source_1l00192"/>00192 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Errore&#32;di&#32;allocazione&#32;di&#32;memoria&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_tcfs__utils_8c_source_1l00195"/>00195 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00196"/>00196 
<anchor xml:id="_tcfs__utils_8c_source_1l00197"/>00197 &#32;&#32;<emphasis role="comment">//&#32;ensure&#32;that&#32;the&#32;resulting&#32;string&#32;is&#32;empty&#32;at&#32;the&#32;start.</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00198"/>00198 &#32;&#32;<emphasis role="comment">//&#32;Maybe&#32;it&#32;is&#32;not&#32;necessary,&#32;but&#32;some&#32;testing&#32;is&#32;required</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00199"/>00199 &#32;&#32;output[0]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00200"/>00200 
<anchor xml:id="_tcfs__utils_8c_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;len;&#32;i++)
<anchor xml:id="_tcfs__utils_8c_source_1l00202"/>00202 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;sprintf&#32;(hex,&#32;<emphasis role="stringliteral">&quot;%02X&quot;</emphasis>,&#32;input[i]);
<anchor xml:id="_tcfs__utils_8c_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;strcat&#32;(output,&#32;hex);
<anchor xml:id="_tcfs__utils_8c_source_1l00205"/>00205 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00206"/>00206 
<anchor xml:id="_tcfs__utils_8c_source_1l00207"/>00207 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\t\tSTRING&#32;TO&#32;HEX&#32;WILL&#32;RETURN&#32;%s\n&quot;</emphasis>,&#32;output);
<anchor xml:id="_tcfs__utils_8c_source_1l00208"/>00208 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;output;
<anchor xml:id="_tcfs__utils_8c_source_1l00209"/>00209 }
<anchor xml:id="_tcfs__utils_8c_source_1l00210"/>00210 
<anchor xml:id="_tcfs__utils_8c_source_1l00217"/>00217 <emphasis role="keywordtype">char</emphasis>&#32;*
<anchor xml:id="_tcfs__utils_8c_source_1l00218"/><link linkend="_tcfs__utils_8c_1a6de1cb8448198da94080ad32d7e4eabf">00218</link> <link linkend="_tcfs__utils_8c_1a6de1cb8448198da94080ad32d7e4eabf">hex_to_string</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*input)
<anchor xml:id="_tcfs__utils_8c_source_1l00219"/>00219 {
<anchor xml:id="_tcfs__utils_8c_source_1l00220"/>00220 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tHEX&#32;TO&#32;STRING&#32;GOT&#32;%s\n&quot;</emphasis>,&#32;input);
<anchor xml:id="_tcfs__utils_8c_source_1l00221"/>00221 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;len&#32;=&#32;strlen&#32;(input)&#32;/&#32;2;
<anchor xml:id="_tcfs__utils_8c_source_1l00222"/>00222 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*output&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)malloc&#32;(len&#32;+&#32;1);
<anchor xml:id="_tcfs__utils_8c_source_1l00223"/>00223 
<anchor xml:id="_tcfs__utils_8c_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!output)
<anchor xml:id="_tcfs__utils_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;Errore&#32;di&#32;allocazione&#32;di&#32;memoria&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_tcfs__utils_8c_source_1l00228"/>00228 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00229"/>00229 
<anchor xml:id="_tcfs__utils_8c_source_1l00230"/>00230 &#32;&#32;<emphasis role="comment">//&#32;ensure&#32;that&#32;the&#32;resulting&#32;string&#32;is&#32;empty&#32;at&#32;the&#32;start.</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00231"/>00231 &#32;&#32;<emphasis role="comment">//&#32;Maybe&#32;it&#32;is&#32;not&#32;necessary,&#32;but&#32;some&#32;testing&#32;is&#32;required</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00232"/>00232 &#32;&#32;output[0]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00233"/>00233 
<anchor xml:id="_tcfs__utils_8c_source_1l00234"/>00234 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;len;&#32;i++)
<anchor xml:id="_tcfs__utils_8c_source_1l00235"/>00235 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;hex[3];
<anchor xml:id="_tcfs__utils_8c_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;hex[0]&#32;=&#32;input[2&#32;*&#32;i];
<anchor xml:id="_tcfs__utils_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;hex[1]&#32;=&#32;input[2&#32;*&#32;i&#32;+&#32;1];
<anchor xml:id="_tcfs__utils_8c_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;hex[2]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00240"/>00240 
<anchor xml:id="_tcfs__utils_8c_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimal;
<anchor xml:id="_tcfs__utils_8c_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;sscanf&#32;(hex,&#32;<emphasis role="stringliteral">&quot;%X&quot;</emphasis>,&#32;&amp;decimal);
<anchor xml:id="_tcfs__utils_8c_source_1l00243"/>00243 
<anchor xml:id="_tcfs__utils_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;output[i]&#32;=&#32;(char)decimal;
<anchor xml:id="_tcfs__utils_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00246"/>00246 
<anchor xml:id="_tcfs__utils_8c_source_1l00247"/>00247 &#32;&#32;output[len]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;&#32;<emphasis role="comment">//&#32;Add&#32;a&#32;\0&#32;terminator</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00248"/>00248 
<anchor xml:id="_tcfs__utils_8c_source_1l00249"/>00249 &#32;&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>&#32;(<emphasis role="stringliteral">&quot;\tHEX&#32;TO&#32;STRING&#32;WILL&#32;RETURN&#32;%s\n&quot;</emphasis>,&#32;output);
<anchor xml:id="_tcfs__utils_8c_source_1l00250"/>00250 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;output;
<anchor xml:id="_tcfs__utils_8c_source_1l00251"/>00251 }
<anchor xml:id="_tcfs__utils_8c_source_1l00252"/>00252 
<anchor xml:id="_tcfs__utils_8c_source_1l00262"/><link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">00262</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tcfs__utils_8c_1a62b66e43a7ad8b8cf9fcad67f71a7a8b">logMessage</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*format,&#32;...)
<anchor xml:id="_tcfs__utils_8c_source_1l00263"/>00263 {
<anchor xml:id="_tcfs__utils_8c_source_1l00264"/>00264 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*home_path&#32;=&#32;getenv(<emphasis role="stringliteral">&quot;HOME&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(home_path&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;the&#32;case&#32;where&#32;HOME&#32;environment&#32;variable&#32;is&#32;not&#32;set</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;perror(<emphasis role="stringliteral">&quot;Cannot&#32;get&#32;HOME&#32;environment&#32;variable&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;home_path&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00270"/>00270 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00271"/>00271 
<anchor xml:id="_tcfs__utils_8c_source_1l00272"/>00272 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;log_path_length&#32;=&#32;strlen(home_path)&#32;+&#32;strlen(<link linkend="_tcfs__utils_8h_1a6d3fef197146b932f5ad01fce683a66b">LOGFILE</link>)&#32;+&#32;1;
<anchor xml:id="_tcfs__utils_8c_source_1l00273"/>00273 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*log_path&#32;=&#32;malloc(log_path_length&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
<anchor xml:id="_tcfs__utils_8c_source_1l00274"/>00274 
<anchor xml:id="_tcfs__utils_8c_source_1l00275"/>00275 &#32;&#32;strcpy(log_path,&#32;home_path);
<anchor xml:id="_tcfs__utils_8c_source_1l00276"/>00276 &#32;&#32;strcat(log_path,&#32;<link linkend="_tcfs__utils_8h_1a6d3fef197146b932f5ad01fce683a66b">LOGFILE</link>);
<anchor xml:id="_tcfs__utils_8c_source_1l00277"/>00277 
<anchor xml:id="_tcfs__utils_8c_source_1l00278"/>00278 &#32;&#32;FILE&#32;*logFile&#32;=&#32;fopen(log_path,&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00279"/>00279 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(logFile&#32;==&#32;NULL)
<anchor xml:id="_tcfs__utils_8c_source_1l00280"/>00280 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;OPEN&#32;FAILED&#32;%s\n&quot;</emphasis>,&#32;log_path);
<anchor xml:id="_tcfs__utils_8c_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;perror(<emphasis role="stringliteral">&quot;Cannot&#32;open&#32;log&#32;file&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;free(log_path);
<anchor xml:id="_tcfs__utils_8c_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_tcfs__utils_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00286"/>00286 
<anchor xml:id="_tcfs__utils_8c_source_1l00287"/>00287 &#32;&#32;time_t&#32;rawtime;
<anchor xml:id="_tcfs__utils_8c_source_1l00288"/>00288 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tm&#32;*timeinfo;
<anchor xml:id="_tcfs__utils_8c_source_1l00289"/>00289 &#32;&#32;time(&amp;rawtime);
<anchor xml:id="_tcfs__utils_8c_source_1l00290"/>00290 &#32;&#32;timeinfo&#32;=&#32;localtime(&amp;rawtime);
<anchor xml:id="_tcfs__utils_8c_source_1l00291"/>00291 
<anchor xml:id="_tcfs__utils_8c_source_1l00292"/>00292 &#32;&#32;fprintf(logFile,&#32;<emphasis role="stringliteral">&quot;[%04d-%02d-%02d&#32;%02d:%02d:%02d]&#32;&quot;</emphasis>,
<anchor xml:id="_tcfs__utils_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeinfo-&gt;tm_year&#32;+&#32;1900,&#32;timeinfo-&gt;tm_mon&#32;+&#32;1,&#32;timeinfo-&gt;tm_mday,
<anchor xml:id="_tcfs__utils_8c_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeinfo-&gt;tm_hour,&#32;timeinfo-&gt;tm_min,&#32;timeinfo-&gt;tm_sec);
<anchor xml:id="_tcfs__utils_8c_source_1l00295"/>00295 
<anchor xml:id="_tcfs__utils_8c_source_1l00296"/>00296 &#32;&#32;va_list&#32;args;
<anchor xml:id="_tcfs__utils_8c_source_1l00297"/>00297 &#32;&#32;va_start(args,&#32;format);
<anchor xml:id="_tcfs__utils_8c_source_1l00298"/>00298 &#32;&#32;vfprintf(logFile,&#32;format,&#32;args);
<anchor xml:id="_tcfs__utils_8c_source_1l00299"/>00299 &#32;&#32;va_end(args);
<anchor xml:id="_tcfs__utils_8c_source_1l00300"/>00300 
<anchor xml:id="_tcfs__utils_8c_source_1l00301"/>00301 &#32;&#32;fprintf(logFile,&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00302"/>00302 
<anchor xml:id="_tcfs__utils_8c_source_1l00303"/>00303 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_tcfs__utils_8h_1ad72dbcf6d0153db1b8d8a58001feed83">DEBUG</link>)
<anchor xml:id="_tcfs__utils_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tcfs__utils_8c_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;va_start(args,&#32;format);
<anchor xml:id="_tcfs__utils_8c_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;vprintf(format,&#32;args);
<anchor xml:id="_tcfs__utils_8c_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;va_end(args);
<anchor xml:id="_tcfs__utils_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="_tcfs__utils_8c_source_1l00309"/>00309 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tcfs__utils_8c_source_1l00310"/>00310 
<anchor xml:id="_tcfs__utils_8c_source_1l00311"/>00311 &#32;&#32;<emphasis role="comment">//&#32;Chiudi&#32;il&#32;file&#32;di&#32;log&#32;e&#32;libera&#32;la&#32;memoria&#32;allocata</emphasis>
<anchor xml:id="_tcfs__utils_8c_source_1l00312"/>00312 &#32;&#32;fclose(logFile);
<anchor xml:id="_tcfs__utils_8c_source_1l00313"/>00313 &#32;&#32;free(log_path);
<anchor xml:id="_tcfs__utils_8c_source_1l00314"/>00314 }
</programlisting></section>
