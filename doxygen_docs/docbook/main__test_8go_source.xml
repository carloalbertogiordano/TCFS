<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main__test_8go_source" xml:lang="en-US">
<title>main_test.go</title>
<indexterm><primary>ServerREST/main_test.go</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_main__test_8go_source_1l00001"/>00001 package&#32;main
<anchor xml:id="_main__test_8go_source_1l00002"/>00002 
<anchor xml:id="_main__test_8go_source_1l00003"/>00003 import&#32;(
<anchor xml:id="_main__test_8go_source_1l00004"/>00004 &#32;&#32;&#32;&#32;&quot;bytes&quot;
<anchor xml:id="_main__test_8go_source_1l00005"/>00005 &#32;&#32;&#32;&#32;&quot;encoding/json&quot;
<anchor xml:id="_main__test_8go_source_1l00006"/>00006 &#32;&#32;&#32;&#32;&quot;fmt&quot;
<anchor xml:id="_main__test_8go_source_1l00007"/>00007 &#32;&#32;&#32;&#32;&quot;io/ioutil&quot;
<anchor xml:id="_main__test_8go_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&quot;net/http&quot;
<anchor xml:id="_main__test_8go_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&quot;testing&quot;
<anchor xml:id="_main__test_8go_source_1l00010"/>00010 )
<anchor xml:id="_main__test_8go_source_1l00011"/>00011 
<anchor xml:id="_main__test_8go_source_1l00012"/>00012 func&#32;TestRegister(t&#32;*testing.T)&#32;{
<anchor xml:id="_main__test_8go_source_1l00013"/>00013 &#32;&#32;&#32;&#32;user&#32;:=&#32;map[string]string{
<anchor xml:id="_main__test_8go_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;username&quot;:&#32;&quot;testUser&quot;,
<anchor xml:id="_main__test_8go_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;password&quot;:&#32;&quot;pass&quot;,
<anchor xml:id="_main__test_8go_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00017"/>00017 
<anchor xml:id="_main__test_8go_source_1l00018"/>00018 &#32;&#32;&#32;&#32;requestBody,&#32;err&#32;:=&#32;json.Marshal(user)
<anchor xml:id="_main__test_8go_source_1l00019"/>00019 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00022"/>00022 &#32;&#32;&#32;&#32;request,&#32;err&#32;:=&#32;http.NewRequest(&quot;POST&quot;,&#32;&quot;http://127.0.0.1:1234/register&quot;,&#32;bytes.NewBuffer(requestBody))
<anchor xml:id="_main__test_8go_source_1l00023"/>00023 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00026"/>00026 
<anchor xml:id="_main__test_8go_source_1l00027"/>00027 &#32;&#32;&#32;&#32;//&#32;Esegui&#32;la&#32;richiesta&#32;HTTP
<anchor xml:id="_main__test_8go_source_1l00028"/>00028 &#32;&#32;&#32;&#32;client&#32;:=&#32;&amp;http.Client{}
<anchor xml:id="_main__test_8go_source_1l00029"/>00029 &#32;&#32;&#32;&#32;response,&#32;err&#32;:=&#32;client.Do(request)
<anchor xml:id="_main__test_8go_source_1l00030"/>00030 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00033"/>00033 &#32;&#32;&#32;&#32;defer&#32;response.Body.Close()
<anchor xml:id="_main__test_8go_source_1l00034"/>00034 
<anchor xml:id="_main__test_8go_source_1l00035"/>00035 &#32;&#32;&#32;&#32;//&#32;Leggi&#32;il&#32;corpo&#32;della&#32;risposta
<anchor xml:id="_main__test_8go_source_1l00036"/>00036 &#32;&#32;&#32;&#32;body,&#32;err&#32;:=&#32;ioutil.ReadAll(response.Body)
<anchor xml:id="_main__test_8go_source_1l00037"/>00037 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00040"/>00040 
<anchor xml:id="_main__test_8go_source_1l00041"/>00041 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;lo&#32;status&#32;code&#32;sia&#32;200
<anchor xml:id="_main__test_8go_source_1l00042"/>00042 &#32;&#32;&#32;&#32;if&#32;response.StatusCode&#32;!=&#32;http.StatusOK&#32;{
<anchor xml:id="_main__test_8go_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;wrong&#32;status&#32;code:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;response.StatusCode,&#32;http.StatusOK)
<anchor xml:id="_main__test_8go_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00045"/>00045 
<anchor xml:id="_main__test_8go_source_1l00046"/>00046 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;il&#32;messaggio&#32;di&#32;successo&#32;sia&#32;corretto
<anchor xml:id="_main__test_8go_source_1l00047"/>00047 &#32;&#32;&#32;&#32;expectedResponse&#32;:=&#32;&quot;User&#32;registered&#32;successfully&quot;
<anchor xml:id="_main__test_8go_source_1l00048"/>00048 &#32;&#32;&#32;&#32;if&#32;string(body)&#32;!=&#32;expectedResponse&#32;{
<anchor xml:id="_main__test_8go_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;unexpected&#32;body:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;string(body),&#32;expectedResponse)
<anchor xml:id="_main__test_8go_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00051"/>00051 
<anchor xml:id="_main__test_8go_source_1l00052"/>00052 }
<anchor xml:id="_main__test_8go_source_1l00053"/>00053 
<anchor xml:id="_main__test_8go_source_1l00054"/>00054 func&#32;TestLogin(t&#32;*testing.T)&#32;{
<anchor xml:id="_main__test_8go_source_1l00055"/>00055 &#32;&#32;&#32;&#32;//&#32;Crea&#32;una&#32;richiesta&#32;HTTP&#32;POST
<anchor xml:id="_main__test_8go_source_1l00056"/>00056 &#32;&#32;&#32;&#32;user&#32;:=&#32;map[string]string{
<anchor xml:id="_main__test_8go_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;username&quot;:&#32;&quot;testUser&quot;,
<anchor xml:id="_main__test_8go_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;password&quot;:&#32;&quot;pass&quot;,
<anchor xml:id="_main__test_8go_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00060"/>00060 &#32;&#32;&#32;&#32;requestBody,&#32;err&#32;:=&#32;json.Marshal(user)
<anchor xml:id="_main__test_8go_source_1l00061"/>00061 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00064"/>00064 &#32;&#32;&#32;&#32;request,&#32;err&#32;:=&#32;http.NewRequest(&quot;POST&quot;,&#32;&quot;http://localhost:1234/login&quot;,&#32;bytes.NewBuffer(requestBody))
<anchor xml:id="_main__test_8go_source_1l00065"/>00065 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00068"/>00068 
<anchor xml:id="_main__test_8go_source_1l00069"/>00069 &#32;&#32;&#32;&#32;//&#32;Esegui&#32;la&#32;richiesta&#32;HTTP
<anchor xml:id="_main__test_8go_source_1l00070"/>00070 &#32;&#32;&#32;&#32;client&#32;:=&#32;&amp;http.Client{}
<anchor xml:id="_main__test_8go_source_1l00071"/>00071 &#32;&#32;&#32;&#32;response,&#32;err&#32;:=&#32;client.Do(request)
<anchor xml:id="_main__test_8go_source_1l00072"/>00072 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00074"/>00074 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00075"/>00075 &#32;&#32;&#32;&#32;defer&#32;response.Body.Close()
<anchor xml:id="_main__test_8go_source_1l00076"/>00076 
<anchor xml:id="_main__test_8go_source_1l00077"/>00077 &#32;&#32;&#32;&#32;//&#32;Leggi&#32;il&#32;corpo&#32;della&#32;risposta
<anchor xml:id="_main__test_8go_source_1l00078"/>00078 &#32;&#32;&#32;&#32;body,&#32;err&#32;:=&#32;ioutil.ReadAll(response.Body)
<anchor xml:id="_main__test_8go_source_1l00079"/>00079 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00081"/>00081 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00082"/>00082 
<anchor xml:id="_main__test_8go_source_1l00083"/>00083 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;lo&#32;status&#32;code&#32;sia&#32;200
<anchor xml:id="_main__test_8go_source_1l00084"/>00084 &#32;&#32;&#32;&#32;if&#32;response.StatusCode&#32;!=&#32;http.StatusOK&#32;{
<anchor xml:id="_main__test_8go_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;wrong&#32;status&#32;code:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;response.StatusCode,&#32;http.StatusOK)
<anchor xml:id="_main__test_8go_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00087"/>00087 
<anchor xml:id="_main__test_8go_source_1l00088"/>00088 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;il&#32;messaggio&#32;di&#32;successo&#32;sia&#32;corretto
<anchor xml:id="_main__test_8go_source_1l00089"/>00089 &#32;&#32;&#32;&#32;expectedResponse&#32;:=&#32;&quot;User&#32;logged&#32;in&#32;successfully&quot;
<anchor xml:id="_main__test_8go_source_1l00090"/>00090 &#32;&#32;&#32;&#32;if&#32;string(body)&#32;!=&#32;expectedResponse&#32;{
<anchor xml:id="_main__test_8go_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;unexpected&#32;body:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;string(body),&#32;expectedResponse)
<anchor xml:id="_main__test_8go_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00093"/>00093 }
<anchor xml:id="_main__test_8go_source_1l00094"/>00094 
<anchor xml:id="_main__test_8go_source_1l00095"/>00095 func&#32;TestLogout(t&#32;*testing.T)&#32;{
<anchor xml:id="_main__test_8go_source_1l00096"/>00096 &#32;&#32;&#32;&#32;//&#32;Crea&#32;una&#32;richiesta&#32;HTTP&#32;POST
<anchor xml:id="_main__test_8go_source_1l00097"/>00097 &#32;&#32;&#32;&#32;user&#32;:=&#32;map[string]string{
<anchor xml:id="_main__test_8go_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;username&quot;:&#32;&quot;testUser&quot;,
<anchor xml:id="_main__test_8go_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00100"/>00100 &#32;&#32;&#32;&#32;requestBody,&#32;err&#32;:=&#32;json.Marshal(user)
<anchor xml:id="_main__test_8go_source_1l00101"/>00101 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00104"/>00104 &#32;&#32;&#32;&#32;request,&#32;err&#32;:=&#32;http.NewRequest(&quot;POST&quot;,&#32;&quot;http://localhost:1234/logout&quot;,&#32;bytes.NewBuffer(requestBody))
<anchor xml:id="_main__test_8go_source_1l00105"/>00105 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00108"/>00108 
<anchor xml:id="_main__test_8go_source_1l00109"/>00109 &#32;&#32;&#32;&#32;//&#32;Esegui&#32;la&#32;richiesta&#32;HTTP
<anchor xml:id="_main__test_8go_source_1l00110"/>00110 &#32;&#32;&#32;&#32;client&#32;:=&#32;&amp;http.Client{}
<anchor xml:id="_main__test_8go_source_1l00111"/>00111 &#32;&#32;&#32;&#32;response,&#32;err&#32;:=&#32;client.Do(request)
<anchor xml:id="_main__test_8go_source_1l00112"/>00112 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00114"/>00114 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00115"/>00115 &#32;&#32;&#32;&#32;defer&#32;response.Body.Close()
<anchor xml:id="_main__test_8go_source_1l00116"/>00116 
<anchor xml:id="_main__test_8go_source_1l00117"/>00117 &#32;&#32;&#32;&#32;//&#32;Leggi&#32;il&#32;corpo&#32;della&#32;risposta
<anchor xml:id="_main__test_8go_source_1l00118"/>00118 &#32;&#32;&#32;&#32;body,&#32;err&#32;:=&#32;ioutil.ReadAll(response.Body)
<anchor xml:id="_main__test_8go_source_1l00119"/>00119 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00122"/>00122 
<anchor xml:id="_main__test_8go_source_1l00123"/>00123 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;lo&#32;status&#32;code&#32;sia&#32;200
<anchor xml:id="_main__test_8go_source_1l00124"/>00124 &#32;&#32;&#32;&#32;if&#32;response.StatusCode&#32;!=&#32;http.StatusOK&#32;{
<anchor xml:id="_main__test_8go_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;wrong&#32;status&#32;code:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;response.StatusCode,&#32;http.StatusOK)
<anchor xml:id="_main__test_8go_source_1l00126"/>00126 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00127"/>00127 
<anchor xml:id="_main__test_8go_source_1l00128"/>00128 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;il&#32;messaggio&#32;di&#32;successo&#32;sia&#32;corretto
<anchor xml:id="_main__test_8go_source_1l00129"/>00129 &#32;&#32;&#32;&#32;expectedResponse&#32;:=&#32;&quot;User&#32;logged&#32;out&#32;successfully&quot;
<anchor xml:id="_main__test_8go_source_1l00130"/>00130 &#32;&#32;&#32;&#32;if&#32;string(body)&#32;!=&#32;expectedResponse&#32;{
<anchor xml:id="_main__test_8go_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;unexpected&#32;body:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;string(body),&#32;expectedResponse)
<anchor xml:id="_main__test_8go_source_1l00132"/>00132 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00133"/>00133 }
<anchor xml:id="_main__test_8go_source_1l00134"/>00134 
<anchor xml:id="_main__test_8go_source_1l00135"/>00135 func&#32;TestShareFile(t&#32;*testing.T)&#32;{
<anchor xml:id="_main__test_8go_source_1l00136"/>00136 &#32;&#32;&#32;&#32;//register&#32;some&#32;users
<anchor xml:id="_main__test_8go_source_1l00137"/>00137 &#32;&#32;&#32;&#32;for&#32;i&#32;:=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;i++&#32;{
<anchor xml:id="_main__test_8go_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user&#32;:=&#32;map[string]string{
<anchor xml:id="_main__test_8go_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;username&quot;:&#32;fmt.Sprintf(&quot;testUser%v&quot;,&#32;i),
<anchor xml:id="_main__test_8go_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;password&quot;:&#32;&quot;pass&quot;,
<anchor xml:id="_main__test_8go_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00142"/>00142 
<anchor xml:id="_main__test_8go_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;requestBody,&#32;err&#32;:=&#32;json.Marshal(user)
<anchor xml:id="_main__test_8go_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;request,&#32;err&#32;:=&#32;http.NewRequest(&quot;POST&quot;,&#32;&quot;http://127.0.0.1:1234/register&quot;,&#32;bytes.NewBuffer(requestBody))
<anchor xml:id="_main__test_8go_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00151"/>00151 
<anchor xml:id="_main__test_8go_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Esegui&#32;la&#32;richiesta&#32;HTTP
<anchor xml:id="_main__test_8go_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;client&#32;:=&#32;&amp;http.Client{}
<anchor xml:id="_main__test_8go_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;err&#32;=&#32;client.Do(request)
<anchor xml:id="_main__test_8go_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00158"/>00158 
<anchor xml:id="_main__test_8go_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00160"/>00160 &#32;&#32;&#32;&#32;//Log&#32;in&#32;the&#32;users
<anchor xml:id="_main__test_8go_source_1l00161"/>00161 &#32;&#32;&#32;&#32;//register&#32;some&#32;users
<anchor xml:id="_main__test_8go_source_1l00162"/>00162 &#32;&#32;&#32;&#32;for&#32;i&#32;:=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;i++&#32;{
<anchor xml:id="_main__test_8go_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user&#32;:=&#32;map[string]string{
<anchor xml:id="_main__test_8go_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;username&quot;:&#32;&#32;fmt.Sprintf(&quot;testUser%v&quot;,&#32;i),
<anchor xml:id="_main__test_8go_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;password&quot;:&#32;&#32;&quot;pass&quot;,
<anchor xml:id="_main__test_8go_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;publickey&quot;:&#32;&quot;-----BEGIN&#32;PUBLIC&#32;KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzJy21YMY4pGMWRJwQvZe\n7gXIuvPS5JeCxXXn/6xCsC5aeHlojP+/nLd+f1339Vrz1hXOJO1hEjFLsO8ZQCWk\nMpSSrMjy/z1/dg0U58yN9h1yitHtmeXSdEmU/UdLeTN5ztoRKJYTF3cywG4Bo6u/\nMCCowctVGSMUXibhbEbRVdxzQMm9I3AgEV6gD5UBLiAyuEkD7sLD/nolnJKP9hvi\nvvPvw982G/Kbe+Prs0FlJ9zPw4b+eSt7cNRUW+sRWRoUsC9Yuu2Gqs/8P1p8EY+S\n+pfTa7kjIILGR/DnbDglr2WdYS2/5CMXTV0qKRMt0HFt+5eSF/Te4gsm3E2SvJKZ\nCQIDAQAB\n-----END&#32;PUBLIC&#32;KEY-----&quot;,
<anchor xml:id="_main__test_8go_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00168"/>00168 
<anchor xml:id="_main__test_8go_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;requestBody,&#32;err&#32;:=&#32;json.Marshal(user)
<anchor xml:id="_main__test_8go_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;request,&#32;err&#32;:=&#32;http.NewRequest(&quot;POST&quot;,&#32;&quot;http://127.0.0.1:1234/login&quot;,&#32;bytes.NewBuffer(requestBody))
<anchor xml:id="_main__test_8go_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00177"/>00177 
<anchor xml:id="_main__test_8go_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Esegui&#32;la&#32;richiesta&#32;HTTP
<anchor xml:id="_main__test_8go_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;client&#32;:=&#32;&amp;http.Client{}
<anchor xml:id="_main__test_8go_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;err&#32;=&#32;client.Do(request)
<anchor xml:id="_main__test_8go_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00184"/>00184 
<anchor xml:id="_main__test_8go_source_1l00185"/>00185 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00186"/>00186 
<anchor xml:id="_main__test_8go_source_1l00187"/>00187 &#32;&#32;&#32;&#32;//Now&#32;share&#32;a&#32;file
<anchor xml:id="_main__test_8go_source_1l00188"/>00188 &#32;&#32;&#32;&#32;sharedFilesRequest&#32;:=&#32;map[string]interface{}{
<anchor xml:id="_main__test_8go_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;users&quot;:&#32;[]map[string]string{
<anchor xml:id="_main__test_8go_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser0&quot;},
<anchor xml:id="_main__test_8go_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser1&quot;},
<anchor xml:id="_main__test_8go_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser2&quot;},
<anchor xml:id="_main__test_8go_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser3&quot;},
<anchor xml:id="_main__test_8go_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser4&quot;},
<anchor xml:id="_main__test_8go_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser5&quot;},
<anchor xml:id="_main__test_8go_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser6&quot;},
<anchor xml:id="_main__test_8go_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser7&quot;},
<anchor xml:id="_main__test_8go_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser8&quot;},
<anchor xml:id="_main__test_8go_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&quot;username&quot;:&#32;&quot;testUser9&quot;},
<anchor xml:id="_main__test_8go_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Aggiungi&#32;altri&#32;utenti&#32;qui&#32;se&#32;necessario
<anchor xml:id="_main__test_8go_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
<anchor xml:id="_main__test_8go_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;k&quot;:&#32;4,
<anchor xml:id="_main__test_8go_source_1l00203"/>00203 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00204"/>00204 
<anchor xml:id="_main__test_8go_source_1l00205"/>00205 &#32;&#32;&#32;&#32;requestBody,&#32;err&#32;:=&#32;json.Marshal(sharedFilesRequest)
<anchor xml:id="_main__test_8go_source_1l00206"/>00206 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00208"/>00208 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00209"/>00209 &#32;&#32;&#32;&#32;request,&#32;err&#32;:=&#32;http.NewRequest(&quot;POST&quot;,&#32;&quot;http://localhost:1234/createSharedFile&quot;,&#32;bytes.NewBuffer(requestBody))
<anchor xml:id="_main__test_8go_source_1l00210"/>00210 
<anchor xml:id="_main__test_8go_source_1l00211"/>00211 &#32;&#32;&#32;&#32;//&#32;Esegui&#32;la&#32;richiesta&#32;HTTP
<anchor xml:id="_main__test_8go_source_1l00212"/>00212 &#32;&#32;&#32;&#32;client&#32;:=&#32;&amp;http.Client{}
<anchor xml:id="_main__test_8go_source_1l00213"/>00213 &#32;&#32;&#32;&#32;response,&#32;err&#32;:=&#32;client.Do(request)
<anchor xml:id="_main__test_8go_source_1l00214"/>00214 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00216"/>00216 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00217"/>00217 &#32;&#32;&#32;&#32;defer&#32;response.Body.Close()
<anchor xml:id="_main__test_8go_source_1l00218"/>00218 
<anchor xml:id="_main__test_8go_source_1l00219"/>00219 &#32;&#32;&#32;&#32;//&#32;Leggi&#32;il&#32;corpo&#32;della&#32;risposta
<anchor xml:id="_main__test_8go_source_1l00220"/>00220 &#32;&#32;&#32;&#32;body,&#32;err&#32;:=&#32;ioutil.ReadAll(response.Body)
<anchor xml:id="_main__test_8go_source_1l00221"/>00221 &#32;&#32;&#32;&#32;if&#32;err&#32;!=&#32;nil&#32;{
<anchor xml:id="_main__test_8go_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Fatal(err)
<anchor xml:id="_main__test_8go_source_1l00223"/>00223 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00224"/>00224 
<anchor xml:id="_main__test_8go_source_1l00225"/>00225 &#32;&#32;&#32;&#32;//&#32;Verifica&#32;che&#32;lo&#32;status&#32;code&#32;sia&#32;200
<anchor xml:id="_main__test_8go_source_1l00226"/>00226 &#32;&#32;&#32;&#32;if&#32;response.StatusCode&#32;!=&#32;http.StatusOK&#32;{
<anchor xml:id="_main__test_8go_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Errorf(&quot;handler&#32;returned&#32;wrong&#32;status&#32;code:&#32;got&#32;%v&#32;want&#32;%v&quot;,&#32;response.StatusCode,&#32;http.StatusOK)
<anchor xml:id="_main__test_8go_source_1l00228"/>00228 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main__test_8go_source_1l00229"/>00229 
<anchor xml:id="_main__test_8go_source_1l00230"/>00230 &#32;&#32;&#32;&#32;fmt.Printf(&quot;%v\n&quot;,&#32;string(body))
<anchor xml:id="_main__test_8go_source_1l00231"/>00231 
<anchor xml:id="_main__test_8go_source_1l00232"/>00232 }
</programlisting></section>
