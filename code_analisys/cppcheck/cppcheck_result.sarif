user/old_stuff/tcfs_helper_tools.c:207:3: warning: scanf() without field width limits can crash with huge input data. [invalidscanf]
  scanf ("%s", source);
  ^
user/old_stuff/tcfs_helper_tools.c:210:3: warning: scanf() without field width limits can crash with huge input data. [invalidscanf]
  scanf ("%s", dest);
  ^
user/old_stuff/tcfs_helper_tools.c:109:7: error: Memory leak: tcfs_path [memleak]
      return 0;
      ^
user/old_stuff/tcfs_helper_tools.c:266:7: error: Memory leak: tcfs_command [memleak]
      return 0;
      ^
user/old_stuff/tcfs_helper_tools.c:305:7: error: Memory leak: command [memleak]
      return 0;
      ^
user/old_stuff/tcfs_helper_tools.c:310:5: error: Memory leak: command [memleak]
    return 0;
    ^
user/old_stuff/tcfs_helper_tools.c:99:25: warning: Either the condition 'home==NULL' is redundant or there is possible null pointer dereference: home. [nullPointerRedundantCheck]
  printf ("$HOME=%s\n", home);
                        ^
user/old_stuff/tcfs_helper_tools.c:106:12: note: Assuming that condition 'home==NULL' is not redundant
  if (home == NULL)
           ^
user/old_stuff/tcfs_helper_tools.c:99:25: note: Null pointer dereference
  printf ("$HOME=%s\n", home);
                        ^
user/old_stuff/tcfs_helper_tools.c:102:26: warning: Either the condition 'home==NULL' is redundant or there is possible null pointer dereference: home. [nullPointerRedundantCheck]
      = malloc ((strlen (home) + strlen ("/.tcfs\0")) * sizeof (char));
                         ^
user/old_stuff/tcfs_helper_tools.c:106:12: note: Assuming that condition 'home==NULL' is not redundant
  if (home == NULL)
           ^
user/old_stuff/tcfs_helper_tools.c:102:26: note: Null pointer dereference
      = malloc ((strlen (home) + strlen ("/.tcfs\0")) * sizeof (char));
                         ^
user/old_stuff/tcfs_helper_tools.c:166:10: style: Variable 'ch' is assigned a value that is never used. [unreadVariable]
  int ch = 0;
         ^
userspace-module/tcfs.c:824:3: error: Resource handle 'path_ptr' freed twice. [doubleFree]
  fclose (path_ptr);
  ^
userspace-module/tcfs.c:815:7: note: Resource handle 'path_ptr' freed twice.
      fclose (path_ptr);
      ^
userspace-module/tcfs.c:824:3: note: Resource handle 'path_ptr' freed twice.
  fclose (path_ptr);
  ^
userspace-module/tcfs.c:825:3: error: Resource handle 'tmpf' freed twice. [doubleFree]
  fclose (tmpf);
  ^
userspace-module/tcfs.c:816:7: note: Resource handle 'tmpf' freed twice.
      fclose (tmpf);
      ^
userspace-module/tcfs.c:825:3: note: Resource handle 'tmpf' freed twice.
  fclose (tmpf);
  ^
userspace-module/tcfs.c:826:3: error: Memory pointed to by 'enc_fuse_path' is freed twice. [doubleFree]
  free ((void *)enc_fuse_path);
  ^
userspace-module/tcfs.c:817:7: note: Memory pointed to by 'enc_fuse_path' is freed twice.
      free ((void *)enc_fuse_path);
      ^
userspace-module/tcfs.c:826:3: note: Memory pointed to by 'enc_fuse_path' is freed twice.
  free ((void *)enc_fuse_path);
  ^
userspace-module/tcfs.c:827:3: error: Memory pointed to by 'path' is freed twice. [doubleFree]
  free ((void *)path);
  ^
userspace-module/tcfs.c:818:7: note: Memory pointed to by 'path' is freed twice.
      free ((void *)path);
      ^
userspace-module/tcfs.c:827:3: note: Memory pointed to by 'path' is freed twice.
  free ((void *)path);
  ^
userspace-module/tcfs.c:828:3: error: Memory pointed to by 'encrypted_key' is freed twice. [doubleFree]
  free((void *)encrypted_key);
  ^
userspace-module/tcfs.c:819:7: note: Memory pointed to by 'encrypted_key' is freed twice.
      free((void *)encrypted_key);
      ^
userspace-module/tcfs.c:828:3: note: Memory pointed to by 'encrypted_key' is freed twice.
  free((void *)encrypted_key);
  ^
userspace-module/tcfs.c:829:3: error: Memory pointed to by 'decrypted_key' is freed twice. [doubleFree]
  free ((void *) decrypted_key);
  ^
userspace-module/tcfs.c:820:7: note: Memory pointed to by 'decrypted_key' is freed twice.
      free ((void *) decrypted_key);
      ^
userspace-module/tcfs.c:829:3: note: Memory pointed to by 'decrypted_key' is freed twice.
  free ((void *) decrypted_key);
  ^
userspace-module/tcfs.c:947:7: error: Resource handle 'path_ptr' freed twice. [doubleFree]
      fclose (path_ptr);
      ^
userspace-module/tcfs.c:934:7: note: Resource handle 'path_ptr' freed twice.
      fclose (path_ptr);
      ^
userspace-module/tcfs.c:947:7: note: Resource handle 'path_ptr' freed twice.
      fclose (path_ptr);
      ^
userspace-module/tcfs.c:948:7: error: Resource handle 'tmpf' freed twice. [doubleFree]
      fclose (tmpf);
      ^
userspace-module/tcfs.c:935:7: note: Resource handle 'tmpf' freed twice.
      fclose (tmpf);
      ^
userspace-module/tcfs.c:948:7: note: Resource handle 'tmpf' freed twice.
      fclose (tmpf);
      ^
userspace-module/tcfs.c:949:7: error: Memory pointed to by 'enc_fuse_path' is freed twice. [doubleFree]
      free((void *)enc_fuse_path);
      ^
userspace-module/tcfs.c:936:7: note: Memory pointed to by 'enc_fuse_path' is freed twice.
      free((void *)enc_fuse_path);
      ^
userspace-module/tcfs.c:949:7: note: Memory pointed to by 'enc_fuse_path' is freed twice.
      free((void *)enc_fuse_path);
      ^
userspace-module/tcfs.c:950:7: error: Memory pointed to by 'size_key_char' is freed twice. [doubleFree]
      free((void *)size_key_char);
      ^
userspace-module/tcfs.c:937:7: note: Memory pointed to by 'size_key_char' is freed twice.
      free((void *)size_key_char);
      ^
userspace-module/tcfs.c:950:7: note: Memory pointed to by 'size_key_char' is freed twice.
      free((void *)size_key_char);
      ^
userspace-module/tcfs.c:951:7: error: Memory pointed to by 'encrypted_key' is freed twice. [doubleFree]
      free ((void *)encrypted_key);
      ^
userspace-module/tcfs.c:938:7: note: Memory pointed to by 'encrypted_key' is freed twice.
      free ((void *)encrypted_key);
      ^
userspace-module/tcfs.c:951:7: note: Memory pointed to by 'encrypted_key' is freed twice.
      free ((void *)encrypted_key);
      ^
userspace-module/tcfs.c:952:7: error: Memory pointed to by 'decrypted_key' is freed twice. [doubleFree]
      free ((void *)decrypted_key);
      ^
userspace-module/tcfs.c:939:7: note: Memory pointed to by 'decrypted_key' is freed twice.
      free ((void *)decrypted_key);
      ^
userspace-module/tcfs.c:952:7: note: Memory pointed to by 'decrypted_key' is freed twice.
      free ((void *)decrypted_key);
      ^
userspace-module/tcfs.c:956:3: error: Resource handle 'path_ptr' freed twice. [doubleFree]
  fclose (path_ptr);
  ^
userspace-module/tcfs.c:934:7: note: Resource handle 'path_ptr' freed twice.
      fclose (path_ptr);
      ^
userspace-module/tcfs.c:956:3: note: Resource handle 'path_ptr' freed twice.
  fclose (path_ptr);
  ^
userspace-module/tcfs.c:957:3: error: Resource handle 'tmpf' freed twice. [doubleFree]
  fclose (tmpf);
  ^
userspace-module/tcfs.c:935:7: note: Resource handle 'tmpf' freed twice.
      fclose (tmpf);
      ^
userspace-module/tcfs.c:957:3: note: Resource handle 'tmpf' freed twice.
  fclose (tmpf);
  ^
userspace-module/tcfs.c:959:3: error: Memory pointed to by 'size_key_char' is freed twice. [doubleFree]
  free((void *)size_key_char);
  ^
userspace-module/tcfs.c:937:7: note: Memory pointed to by 'size_key_char' is freed twice.
      free((void *)size_key_char);
      ^
userspace-module/tcfs.c:959:3: note: Memory pointed to by 'size_key_char' is freed twice.
  free((void *)size_key_char);
  ^
userspace-module/tcfs.c:960:3: error: Memory pointed to by 'encrypted_key' is freed twice. [doubleFree]
  free ((void *)encrypted_key);
  ^
userspace-module/tcfs.c:938:7: note: Memory pointed to by 'encrypted_key' is freed twice.
      free ((void *)encrypted_key);
      ^
userspace-module/tcfs.c:960:3: note: Memory pointed to by 'encrypted_key' is freed twice.
  free ((void *)encrypted_key);
  ^
userspace-module/tcfs.c:1094:7: error: Resource leak: res [resourceLeak]
      return -errno;
      ^
userspace-module/tcfs.c:1099:7: error: Resource leak: res [resourceLeak]
      return -1;
      ^
userspace-module/tcfs.c:1113:7: error: Resource leak: res [resourceLeak]
      return -errno;
      ^
userspace-module/tcfs.c:1124:7: error: Resource leak: res [resourceLeak]
      return -errno;
      ^
userspace-module/tcfs.c:778:15: warning: Either the condition 'path_ptr==NULL' is redundant or there is possible null pointer dereference: path_ptr. [nullPointerRedundantCheck]
      fclose (path_ptr);
              ^
userspace-module/tcfs.c:776:16: note: Assuming that condition 'path_ptr==NULL' is not redundant
  if (path_ptr == NULL || tmpf == NULL)
               ^
userspace-module/tcfs.c:778:15: note: Null pointer dereference
      fclose (path_ptr);
              ^
userspace-module/tcfs.c:779:15: warning: Either the condition 'tmpf==NULL' is redundant or there is possible null pointer dereference: tmpf. [nullPointerRedundantCheck]
      fclose (tmpf);
              ^
userspace-module/tcfs.c:776:32: note: Assuming that condition 'tmpf==NULL' is not redundant
  if (path_ptr == NULL || tmpf == NULL)
                               ^
userspace-module/tcfs.c:779:15: note: Null pointer dereference
      fclose (tmpf);
              ^
userspace-module/tcfs.c:901:15: warning: Either the condition 'path_ptr==NULL' is redundant or there is possible null pointer dereference: path_ptr. [nullPointerRedundantCheck]
      fclose (path_ptr);
              ^
userspace-module/tcfs.c:898:16: note: Assuming that condition 'path_ptr==NULL' is not redundant
  if (path_ptr == NULL || tmpf == NULL)
               ^
userspace-module/tcfs.c:901:15: note: Null pointer dereference
      fclose (path_ptr);
              ^
userspace-module/tcfs.c:902:15: warning: Either the condition 'tmpf==NULL' is redundant or there is possible null pointer dereference: tmpf. [nullPointerRedundantCheck]
      fclose (tmpf);
              ^
userspace-module/tcfs.c:898:32: note: Assuming that condition 'tmpf==NULL' is not redundant
  if (path_ptr == NULL || tmpf == NULL)
                               ^
userspace-module/tcfs.c:902:15: note: Null pointer dereference
      fclose (tmpf);
              ^
userspace-module/tcfs.c:1088:3: warning: Either the condition 'key==NULL' is redundant or there is possible null pointer dereference: key. [nullPointerRedundantCheck]
  key[32] = '\0';
  ^
userspace-module/tcfs.c:1091:11: note: Assuming that condition 'key==NULL' is not redundant
  if (key == NULL)
          ^
userspace-module/tcfs.c:1088:3: note: Null pointer dereference
  key[32] = '\0';
  ^
userspace-module/tcfs.c:258:11: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
          break;
          ^
userspace-module/utils/crypt-utils/crypt-utils.c:263:7: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
      destination = NULL;
      ^
userspace-module/utils/crypt-utils/crypt-utils.c:67:7: style: The scope of the variable 'inlen' can be reduced. [variableScope]
  int inlen;
      ^
userspace-module/utils/crypt-utils/crypt-utils.c:71:7: style: The scope of the variable 'writelen' can be reduced. [variableScope]
  int writelen;
      ^
userspace-module/utils/crypt-utils/crypt-utils.c:77:17: style: The scope of the variable 'key' can be reduced. [variableScope]
  unsigned char key[KEY_SIZE];
                ^
userspace-module/utils/crypt-utils/crypt-utils.c:78:17: style: The scope of the variable 'iv' can be reduced. [variableScope]
  unsigned char iv[IV_SIZE];
                ^
userspace-module/utils/crypt-utils/crypt-utils.c:79:7: style: The scope of the variable 'nrounds' can be reduced. [variableScope]
  int nrounds = 5;
      ^
userspace-module/utils/crypt-utils/crypt-utils.c:82:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
userspace-module/utils/crypt-utils/crypt-utils.c:278:22: style:inconclusive: Function 'encrypt_string' argument 3 names different: declaration 'encrypted_len' definition 'encrypted_key_len'. [funcArgNamesDifferent]
                int *encrypted_key_len)
                     ^
userspace-module/utils/crypt-utils/crypt-utils.h:39:37: note: Function 'encrypt_string' argument 3 names different: declaration 'encrypted_len' definition 'encrypted_key_len'.
                               int *encrypted_len);
                                    ^
userspace-module/utils/crypt-utils/crypt-utils.c:278:22: note: Function 'encrypt_string' argument 3 names different: declaration 'encrypted_len' definition 'encrypted_key_len'.
                int *encrypted_key_len)
                     ^
userspace-module/utils/crypt-utils/crypt-utils.c:331:32: style:inconclusive: Function 'decrypt_string' argument 1 names different: declaration 'base64_ciphertext' definition 'ciphertext'. [funcArgNamesDifferent]
decrypt_string (unsigned char *ciphertext, const char *key)
                               ^
userspace-module/utils/crypt-utils/crypt-utils.h:41:47: note: Function 'decrypt_string' argument 1 names different: declaration 'base64_ciphertext' definition 'ciphertext'.
unsigned char *decrypt_string (unsigned char *base64_ciphertext,
                                              ^
userspace-module/utils/crypt-utils/crypt-utils.c:331:32: note: Function 'decrypt_string' argument 1 names different: declaration 'base64_ciphertext' definition 'ciphertext'.
decrypt_string (unsigned char *ciphertext, const char *key)
                               ^
userspace-module/utils/tcfs_utils/tcfs_utils.c:156:7: warning: %X in format string (no. 1) requires 'unsigned int *' but the argument type is 'signed int *'. [invalidScanfArgType_int]
      sscanf (hex, "%X", &decimal);
      ^
userspace-module/utils/crypt-utils/crypt-utils.c:777:0: style: The function 'decrypt_path_and_filename' is never used. [unusedFunction]

^
userspace-module/utils/tcfs_utils/tcfs_utils.c:83:0: style: The function 'print_aes_key' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingIncludeSystem]

